//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EM {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EMDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EMDataSet : global::System.Data.DataSet {
        
        private BalanceRptPODataTable tableBalanceRptPO;
        
        private BalanceRtpPOItemDataTable tableBalanceRtpPOItem;
        
        private POItemTblDataTable tablePOItemTbl;
        
        private POHeaderTblDataTable tablePOHeaderTbl;
        
        private ContainerTblDataTable tableContainerTbl;
        
        private SurchargeRateTblDataTable tableSurchargeRateTbl;
        
        private ContBundleTblDataTable tableContBundleTbl;
        
        private KeyNumberTbleDataTable tableKeyNumberTble;
        
        private PaymentTermsTblDataTable tablePaymentTermsTbl;
        
        private ShippingCodeTblDataTable tableShippingCodeTbl;
        
        private ItemTblDataTable tableItemTbl;
        
        private POFileTblDataTable tablePOFileTbl;
        
        private FileTblDataTable tableFileTbl;
        
        private CountryTblDataTable tableCountryTbl;
        
        private ContactsTblDataTable tableContactsTbl;
        
        private ContainerTemplateTblDataTable tableContainerTemplateTbl;
        
        private BOLItemTblDataTable tableBOLItemTbl;
        
        private FinishTblDataTable tableFinishTbl;
        
        private CurrencyTblDataTable tableCurrencyTbl;
        
        private TreatmentTblDataTable tableTreatmentTbl;
        
        private BOLTblDataTable tableBOLTbl;
        
        private LocationTblDataTable tableLocationTbl;
        
        private OrderLogTblDataTable tableOrderLogTbl;
        
        private CompanyTblDataTable tableCompanyTbl;
        
        private global::System.Data.DataRelation relationFileTblPOFileTbl;
        
        private global::System.Data.DataRelation relationBOLTblBOLItemTbl;
        
        private global::System.Data.DataRelation relationCountryTblLocationTbl;
        
        private global::System.Data.DataRelation relationCompanyTbl_LocationTbl;
        
        private global::System.Data.DataRelation relationBalanceRptPO_BalanceRtpPOItem;
        
        private global::System.Data.DataRelation relationItemTbl_POItemTbl;
        
        private global::System.Data.DataRelation relationtblPOHeader2tblPOItem2;
        
        private global::System.Data.DataRelation relationtblContainertblContPOItem2;
        
        private global::System.Data.DataRelation relationtblPOItem2tblContPOItem2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EMDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EMDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BalanceRptPO"] != null)) {
                    base.Tables.Add(new BalanceRptPODataTable(ds.Tables["BalanceRptPO"]));
                }
                if ((ds.Tables["BalanceRtpPOItem"] != null)) {
                    base.Tables.Add(new BalanceRtpPOItemDataTable(ds.Tables["BalanceRtpPOItem"]));
                }
                if ((ds.Tables["POItemTbl"] != null)) {
                    base.Tables.Add(new POItemTblDataTable(ds.Tables["POItemTbl"]));
                }
                if ((ds.Tables["POHeaderTbl"] != null)) {
                    base.Tables.Add(new POHeaderTblDataTable(ds.Tables["POHeaderTbl"]));
                }
                if ((ds.Tables["ContainerTbl"] != null)) {
                    base.Tables.Add(new ContainerTblDataTable(ds.Tables["ContainerTbl"]));
                }
                if ((ds.Tables["SurchargeRateTbl"] != null)) {
                    base.Tables.Add(new SurchargeRateTblDataTable(ds.Tables["SurchargeRateTbl"]));
                }
                if ((ds.Tables["ContBundleTbl"] != null)) {
                    base.Tables.Add(new ContBundleTblDataTable(ds.Tables["ContBundleTbl"]));
                }
                if ((ds.Tables["KeyNumberTble"] != null)) {
                    base.Tables.Add(new KeyNumberTbleDataTable(ds.Tables["KeyNumberTble"]));
                }
                if ((ds.Tables["PaymentTermsTbl"] != null)) {
                    base.Tables.Add(new PaymentTermsTblDataTable(ds.Tables["PaymentTermsTbl"]));
                }
                if ((ds.Tables["ShippingCodeTbl"] != null)) {
                    base.Tables.Add(new ShippingCodeTblDataTable(ds.Tables["ShippingCodeTbl"]));
                }
                if ((ds.Tables["ItemTbl"] != null)) {
                    base.Tables.Add(new ItemTblDataTable(ds.Tables["ItemTbl"]));
                }
                if ((ds.Tables["POFileTbl"] != null)) {
                    base.Tables.Add(new POFileTblDataTable(ds.Tables["POFileTbl"]));
                }
                if ((ds.Tables["FileTbl"] != null)) {
                    base.Tables.Add(new FileTblDataTable(ds.Tables["FileTbl"]));
                }
                if ((ds.Tables["CountryTbl"] != null)) {
                    base.Tables.Add(new CountryTblDataTable(ds.Tables["CountryTbl"]));
                }
                if ((ds.Tables["ContactsTbl"] != null)) {
                    base.Tables.Add(new ContactsTblDataTable(ds.Tables["ContactsTbl"]));
                }
                if ((ds.Tables["ContainerTemplateTbl"] != null)) {
                    base.Tables.Add(new ContainerTemplateTblDataTable(ds.Tables["ContainerTemplateTbl"]));
                }
                if ((ds.Tables["BOLItemTbl"] != null)) {
                    base.Tables.Add(new BOLItemTblDataTable(ds.Tables["BOLItemTbl"]));
                }
                if ((ds.Tables["FinishTbl"] != null)) {
                    base.Tables.Add(new FinishTblDataTable(ds.Tables["FinishTbl"]));
                }
                if ((ds.Tables["CurrencyTbl"] != null)) {
                    base.Tables.Add(new CurrencyTblDataTable(ds.Tables["CurrencyTbl"]));
                }
                if ((ds.Tables["TreatmentTbl"] != null)) {
                    base.Tables.Add(new TreatmentTblDataTable(ds.Tables["TreatmentTbl"]));
                }
                if ((ds.Tables["BOLTbl"] != null)) {
                    base.Tables.Add(new BOLTblDataTable(ds.Tables["BOLTbl"]));
                }
                if ((ds.Tables["LocationTbl"] != null)) {
                    base.Tables.Add(new LocationTblDataTable(ds.Tables["LocationTbl"]));
                }
                if ((ds.Tables["OrderLogTbl"] != null)) {
                    base.Tables.Add(new OrderLogTblDataTable(ds.Tables["OrderLogTbl"]));
                }
                if ((ds.Tables["CompanyTbl"] != null)) {
                    base.Tables.Add(new CompanyTblDataTable(ds.Tables["CompanyTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BalanceRptPODataTable BalanceRptPO {
            get {
                return this.tableBalanceRptPO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BalanceRtpPOItemDataTable BalanceRtpPOItem {
            get {
                return this.tableBalanceRtpPOItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POItemTblDataTable POItemTbl {
            get {
                return this.tablePOItemTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POHeaderTblDataTable POHeaderTbl {
            get {
                return this.tablePOHeaderTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContainerTblDataTable ContainerTbl {
            get {
                return this.tableContainerTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SurchargeRateTblDataTable SurchargeRateTbl {
            get {
                return this.tableSurchargeRateTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContBundleTblDataTable ContBundleTbl {
            get {
                return this.tableContBundleTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KeyNumberTbleDataTable KeyNumberTble {
            get {
                return this.tableKeyNumberTble;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentTermsTblDataTable PaymentTermsTbl {
            get {
                return this.tablePaymentTermsTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShippingCodeTblDataTable ShippingCodeTbl {
            get {
                return this.tableShippingCodeTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemTblDataTable ItemTbl {
            get {
                return this.tableItemTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POFileTblDataTable POFileTbl {
            get {
                return this.tablePOFileTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FileTblDataTable FileTbl {
            get {
                return this.tableFileTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CountryTblDataTable CountryTbl {
            get {
                return this.tableCountryTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContactsTblDataTable ContactsTbl {
            get {
                return this.tableContactsTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContainerTemplateTblDataTable ContainerTemplateTbl {
            get {
                return this.tableContainerTemplateTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BOLItemTblDataTable BOLItemTbl {
            get {
                return this.tableBOLItemTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FinishTblDataTable FinishTbl {
            get {
                return this.tableFinishTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CurrencyTblDataTable CurrencyTbl {
            get {
                return this.tableCurrencyTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TreatmentTblDataTable TreatmentTbl {
            get {
                return this.tableTreatmentTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BOLTblDataTable BOLTbl {
            get {
                return this.tableBOLTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LocationTblDataTable LocationTbl {
            get {
                return this.tableLocationTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderLogTblDataTable OrderLogTbl {
            get {
                return this.tableOrderLogTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyTblDataTable CompanyTbl {
            get {
                return this.tableCompanyTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EMDataSet cln = ((EMDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BalanceRptPO"] != null)) {
                    base.Tables.Add(new BalanceRptPODataTable(ds.Tables["BalanceRptPO"]));
                }
                if ((ds.Tables["BalanceRtpPOItem"] != null)) {
                    base.Tables.Add(new BalanceRtpPOItemDataTable(ds.Tables["BalanceRtpPOItem"]));
                }
                if ((ds.Tables["POItemTbl"] != null)) {
                    base.Tables.Add(new POItemTblDataTable(ds.Tables["POItemTbl"]));
                }
                if ((ds.Tables["POHeaderTbl"] != null)) {
                    base.Tables.Add(new POHeaderTblDataTable(ds.Tables["POHeaderTbl"]));
                }
                if ((ds.Tables["ContainerTbl"] != null)) {
                    base.Tables.Add(new ContainerTblDataTable(ds.Tables["ContainerTbl"]));
                }
                if ((ds.Tables["SurchargeRateTbl"] != null)) {
                    base.Tables.Add(new SurchargeRateTblDataTable(ds.Tables["SurchargeRateTbl"]));
                }
                if ((ds.Tables["ContBundleTbl"] != null)) {
                    base.Tables.Add(new ContBundleTblDataTable(ds.Tables["ContBundleTbl"]));
                }
                if ((ds.Tables["KeyNumberTble"] != null)) {
                    base.Tables.Add(new KeyNumberTbleDataTable(ds.Tables["KeyNumberTble"]));
                }
                if ((ds.Tables["PaymentTermsTbl"] != null)) {
                    base.Tables.Add(new PaymentTermsTblDataTable(ds.Tables["PaymentTermsTbl"]));
                }
                if ((ds.Tables["ShippingCodeTbl"] != null)) {
                    base.Tables.Add(new ShippingCodeTblDataTable(ds.Tables["ShippingCodeTbl"]));
                }
                if ((ds.Tables["ItemTbl"] != null)) {
                    base.Tables.Add(new ItemTblDataTable(ds.Tables["ItemTbl"]));
                }
                if ((ds.Tables["POFileTbl"] != null)) {
                    base.Tables.Add(new POFileTblDataTable(ds.Tables["POFileTbl"]));
                }
                if ((ds.Tables["FileTbl"] != null)) {
                    base.Tables.Add(new FileTblDataTable(ds.Tables["FileTbl"]));
                }
                if ((ds.Tables["CountryTbl"] != null)) {
                    base.Tables.Add(new CountryTblDataTable(ds.Tables["CountryTbl"]));
                }
                if ((ds.Tables["ContactsTbl"] != null)) {
                    base.Tables.Add(new ContactsTblDataTable(ds.Tables["ContactsTbl"]));
                }
                if ((ds.Tables["ContainerTemplateTbl"] != null)) {
                    base.Tables.Add(new ContainerTemplateTblDataTable(ds.Tables["ContainerTemplateTbl"]));
                }
                if ((ds.Tables["BOLItemTbl"] != null)) {
                    base.Tables.Add(new BOLItemTblDataTable(ds.Tables["BOLItemTbl"]));
                }
                if ((ds.Tables["FinishTbl"] != null)) {
                    base.Tables.Add(new FinishTblDataTable(ds.Tables["FinishTbl"]));
                }
                if ((ds.Tables["CurrencyTbl"] != null)) {
                    base.Tables.Add(new CurrencyTblDataTable(ds.Tables["CurrencyTbl"]));
                }
                if ((ds.Tables["TreatmentTbl"] != null)) {
                    base.Tables.Add(new TreatmentTblDataTable(ds.Tables["TreatmentTbl"]));
                }
                if ((ds.Tables["BOLTbl"] != null)) {
                    base.Tables.Add(new BOLTblDataTable(ds.Tables["BOLTbl"]));
                }
                if ((ds.Tables["LocationTbl"] != null)) {
                    base.Tables.Add(new LocationTblDataTable(ds.Tables["LocationTbl"]));
                }
                if ((ds.Tables["OrderLogTbl"] != null)) {
                    base.Tables.Add(new OrderLogTblDataTable(ds.Tables["OrderLogTbl"]));
                }
                if ((ds.Tables["CompanyTbl"] != null)) {
                    base.Tables.Add(new CompanyTblDataTable(ds.Tables["CompanyTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBalanceRptPO = ((BalanceRptPODataTable)(base.Tables["BalanceRptPO"]));
            if ((initTable == true)) {
                if ((this.tableBalanceRptPO != null)) {
                    this.tableBalanceRptPO.InitVars();
                }
            }
            this.tableBalanceRtpPOItem = ((BalanceRtpPOItemDataTable)(base.Tables["BalanceRtpPOItem"]));
            if ((initTable == true)) {
                if ((this.tableBalanceRtpPOItem != null)) {
                    this.tableBalanceRtpPOItem.InitVars();
                }
            }
            this.tablePOItemTbl = ((POItemTblDataTable)(base.Tables["POItemTbl"]));
            if ((initTable == true)) {
                if ((this.tablePOItemTbl != null)) {
                    this.tablePOItemTbl.InitVars();
                }
            }
            this.tablePOHeaderTbl = ((POHeaderTblDataTable)(base.Tables["POHeaderTbl"]));
            if ((initTable == true)) {
                if ((this.tablePOHeaderTbl != null)) {
                    this.tablePOHeaderTbl.InitVars();
                }
            }
            this.tableContainerTbl = ((ContainerTblDataTable)(base.Tables["ContainerTbl"]));
            if ((initTable == true)) {
                if ((this.tableContainerTbl != null)) {
                    this.tableContainerTbl.InitVars();
                }
            }
            this.tableSurchargeRateTbl = ((SurchargeRateTblDataTable)(base.Tables["SurchargeRateTbl"]));
            if ((initTable == true)) {
                if ((this.tableSurchargeRateTbl != null)) {
                    this.tableSurchargeRateTbl.InitVars();
                }
            }
            this.tableContBundleTbl = ((ContBundleTblDataTable)(base.Tables["ContBundleTbl"]));
            if ((initTable == true)) {
                if ((this.tableContBundleTbl != null)) {
                    this.tableContBundleTbl.InitVars();
                }
            }
            this.tableKeyNumberTble = ((KeyNumberTbleDataTable)(base.Tables["KeyNumberTble"]));
            if ((initTable == true)) {
                if ((this.tableKeyNumberTble != null)) {
                    this.tableKeyNumberTble.InitVars();
                }
            }
            this.tablePaymentTermsTbl = ((PaymentTermsTblDataTable)(base.Tables["PaymentTermsTbl"]));
            if ((initTable == true)) {
                if ((this.tablePaymentTermsTbl != null)) {
                    this.tablePaymentTermsTbl.InitVars();
                }
            }
            this.tableShippingCodeTbl = ((ShippingCodeTblDataTable)(base.Tables["ShippingCodeTbl"]));
            if ((initTable == true)) {
                if ((this.tableShippingCodeTbl != null)) {
                    this.tableShippingCodeTbl.InitVars();
                }
            }
            this.tableItemTbl = ((ItemTblDataTable)(base.Tables["ItemTbl"]));
            if ((initTable == true)) {
                if ((this.tableItemTbl != null)) {
                    this.tableItemTbl.InitVars();
                }
            }
            this.tablePOFileTbl = ((POFileTblDataTable)(base.Tables["POFileTbl"]));
            if ((initTable == true)) {
                if ((this.tablePOFileTbl != null)) {
                    this.tablePOFileTbl.InitVars();
                }
            }
            this.tableFileTbl = ((FileTblDataTable)(base.Tables["FileTbl"]));
            if ((initTable == true)) {
                if ((this.tableFileTbl != null)) {
                    this.tableFileTbl.InitVars();
                }
            }
            this.tableCountryTbl = ((CountryTblDataTable)(base.Tables["CountryTbl"]));
            if ((initTable == true)) {
                if ((this.tableCountryTbl != null)) {
                    this.tableCountryTbl.InitVars();
                }
            }
            this.tableContactsTbl = ((ContactsTblDataTable)(base.Tables["ContactsTbl"]));
            if ((initTable == true)) {
                if ((this.tableContactsTbl != null)) {
                    this.tableContactsTbl.InitVars();
                }
            }
            this.tableContainerTemplateTbl = ((ContainerTemplateTblDataTable)(base.Tables["ContainerTemplateTbl"]));
            if ((initTable == true)) {
                if ((this.tableContainerTemplateTbl != null)) {
                    this.tableContainerTemplateTbl.InitVars();
                }
            }
            this.tableBOLItemTbl = ((BOLItemTblDataTable)(base.Tables["BOLItemTbl"]));
            if ((initTable == true)) {
                if ((this.tableBOLItemTbl != null)) {
                    this.tableBOLItemTbl.InitVars();
                }
            }
            this.tableFinishTbl = ((FinishTblDataTable)(base.Tables["FinishTbl"]));
            if ((initTable == true)) {
                if ((this.tableFinishTbl != null)) {
                    this.tableFinishTbl.InitVars();
                }
            }
            this.tableCurrencyTbl = ((CurrencyTblDataTable)(base.Tables["CurrencyTbl"]));
            if ((initTable == true)) {
                if ((this.tableCurrencyTbl != null)) {
                    this.tableCurrencyTbl.InitVars();
                }
            }
            this.tableTreatmentTbl = ((TreatmentTblDataTable)(base.Tables["TreatmentTbl"]));
            if ((initTable == true)) {
                if ((this.tableTreatmentTbl != null)) {
                    this.tableTreatmentTbl.InitVars();
                }
            }
            this.tableBOLTbl = ((BOLTblDataTable)(base.Tables["BOLTbl"]));
            if ((initTable == true)) {
                if ((this.tableBOLTbl != null)) {
                    this.tableBOLTbl.InitVars();
                }
            }
            this.tableLocationTbl = ((LocationTblDataTable)(base.Tables["LocationTbl"]));
            if ((initTable == true)) {
                if ((this.tableLocationTbl != null)) {
                    this.tableLocationTbl.InitVars();
                }
            }
            this.tableOrderLogTbl = ((OrderLogTblDataTable)(base.Tables["OrderLogTbl"]));
            if ((initTable == true)) {
                if ((this.tableOrderLogTbl != null)) {
                    this.tableOrderLogTbl.InitVars();
                }
            }
            this.tableCompanyTbl = ((CompanyTblDataTable)(base.Tables["CompanyTbl"]));
            if ((initTable == true)) {
                if ((this.tableCompanyTbl != null)) {
                    this.tableCompanyTbl.InitVars();
                }
            }
            this.relationFileTblPOFileTbl = this.Relations["FileTblPOFileTbl"];
            this.relationBOLTblBOLItemTbl = this.Relations["BOLTblBOLItemTbl"];
            this.relationCountryTblLocationTbl = this.Relations["CountryTblLocationTbl"];
            this.relationCompanyTbl_LocationTbl = this.Relations["CompanyTbl_LocationTbl"];
            this.relationBalanceRptPO_BalanceRtpPOItem = this.Relations["BalanceRptPO_BalanceRtpPOItem"];
            this.relationItemTbl_POItemTbl = this.Relations["ItemTbl_POItemTbl"];
            this.relationtblPOHeader2tblPOItem2 = this.Relations["tblPOHeader2tblPOItem2"];
            this.relationtblContainertblContPOItem2 = this.Relations["tblContainertblContPOItem2"];
            this.relationtblPOItem2tblContPOItem2 = this.Relations["tblPOItem2tblContPOItem2"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EMDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EMDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBalanceRptPO = new BalanceRptPODataTable();
            base.Tables.Add(this.tableBalanceRptPO);
            this.tableBalanceRtpPOItem = new BalanceRtpPOItemDataTable();
            base.Tables.Add(this.tableBalanceRtpPOItem);
            this.tablePOItemTbl = new POItemTblDataTable();
            base.Tables.Add(this.tablePOItemTbl);
            this.tablePOHeaderTbl = new POHeaderTblDataTable();
            base.Tables.Add(this.tablePOHeaderTbl);
            this.tableContainerTbl = new ContainerTblDataTable();
            base.Tables.Add(this.tableContainerTbl);
            this.tableSurchargeRateTbl = new SurchargeRateTblDataTable();
            base.Tables.Add(this.tableSurchargeRateTbl);
            this.tableContBundleTbl = new ContBundleTblDataTable();
            base.Tables.Add(this.tableContBundleTbl);
            this.tableKeyNumberTble = new KeyNumberTbleDataTable();
            base.Tables.Add(this.tableKeyNumberTble);
            this.tablePaymentTermsTbl = new PaymentTermsTblDataTable();
            base.Tables.Add(this.tablePaymentTermsTbl);
            this.tableShippingCodeTbl = new ShippingCodeTblDataTable();
            base.Tables.Add(this.tableShippingCodeTbl);
            this.tableItemTbl = new ItemTblDataTable();
            base.Tables.Add(this.tableItemTbl);
            this.tablePOFileTbl = new POFileTblDataTable();
            base.Tables.Add(this.tablePOFileTbl);
            this.tableFileTbl = new FileTblDataTable();
            base.Tables.Add(this.tableFileTbl);
            this.tableCountryTbl = new CountryTblDataTable();
            base.Tables.Add(this.tableCountryTbl);
            this.tableContactsTbl = new ContactsTblDataTable();
            base.Tables.Add(this.tableContactsTbl);
            this.tableContainerTemplateTbl = new ContainerTemplateTblDataTable();
            base.Tables.Add(this.tableContainerTemplateTbl);
            this.tableBOLItemTbl = new BOLItemTblDataTable();
            base.Tables.Add(this.tableBOLItemTbl);
            this.tableFinishTbl = new FinishTblDataTable();
            base.Tables.Add(this.tableFinishTbl);
            this.tableCurrencyTbl = new CurrencyTblDataTable();
            base.Tables.Add(this.tableCurrencyTbl);
            this.tableTreatmentTbl = new TreatmentTblDataTable();
            base.Tables.Add(this.tableTreatmentTbl);
            this.tableBOLTbl = new BOLTblDataTable();
            base.Tables.Add(this.tableBOLTbl);
            this.tableLocationTbl = new LocationTblDataTable();
            base.Tables.Add(this.tableLocationTbl);
            this.tableOrderLogTbl = new OrderLogTblDataTable();
            base.Tables.Add(this.tableOrderLogTbl);
            this.tableCompanyTbl = new CompanyTblDataTable();
            base.Tables.Add(this.tableCompanyTbl);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FileTblPOFileTbl", new global::System.Data.DataColumn[] {
                        this.tableFileTbl.FileIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePOFileTbl.FileIDColumn});
            this.tablePOFileTbl.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOLTblBOLItemTbl", new global::System.Data.DataColumn[] {
                        this.tableBOLTbl.BOLIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBOLItemTbl.BOLIDColumn});
            this.tableBOLItemTbl.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("CountryTblLocationTbl", new global::System.Data.DataColumn[] {
                        this.tableCountryTbl.CountryIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocationTbl.CountryIDColumn});
            this.tableLocationTbl.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFileTblPOFileTbl = new global::System.Data.DataRelation("FileTblPOFileTbl", new global::System.Data.DataColumn[] {
                        this.tableFileTbl.FileIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePOFileTbl.FileIDColumn}, false);
            this.Relations.Add(this.relationFileTblPOFileTbl);
            this.relationBOLTblBOLItemTbl = new global::System.Data.DataRelation("BOLTblBOLItemTbl", new global::System.Data.DataColumn[] {
                        this.tableBOLTbl.BOLIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBOLItemTbl.BOLIDColumn}, false);
            this.Relations.Add(this.relationBOLTblBOLItemTbl);
            this.relationCountryTblLocationTbl = new global::System.Data.DataRelation("CountryTblLocationTbl", new global::System.Data.DataColumn[] {
                        this.tableCountryTbl.CountryIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocationTbl.CountryIDColumn}, false);
            this.Relations.Add(this.relationCountryTblLocationTbl);
            this.relationCompanyTbl_LocationTbl = new global::System.Data.DataRelation("CompanyTbl_LocationTbl", new global::System.Data.DataColumn[] {
                        this.tableCompanyTbl.CompIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocationTbl.CompIDColumn}, false);
            this.Relations.Add(this.relationCompanyTbl_LocationTbl);
            this.relationBalanceRptPO_BalanceRtpPOItem = new global::System.Data.DataRelation("BalanceRptPO_BalanceRtpPOItem", new global::System.Data.DataColumn[] {
                        this.tableBalanceRptPO.POIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBalanceRtpPOItem.POIDColumn}, false);
            this.Relations.Add(this.relationBalanceRptPO_BalanceRtpPOItem);
            this.relationItemTbl_POItemTbl = new global::System.Data.DataRelation("ItemTbl_POItemTbl", new global::System.Data.DataColumn[] {
                        this.tableItemTbl.ItemIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePOItemTbl.ItemIDColumn}, false);
            this.Relations.Add(this.relationItemTbl_POItemTbl);
            this.relationtblPOHeader2tblPOItem2 = new global::System.Data.DataRelation("tblPOHeader2tblPOItem2", new global::System.Data.DataColumn[] {
                        this.tablePOHeaderTbl.POIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePOItemTbl.POIDColumn}, false);
            this.Relations.Add(this.relationtblPOHeader2tblPOItem2);
            this.relationtblContainertblContPOItem2 = new global::System.Data.DataRelation("tblContainertblContPOItem2", new global::System.Data.DataColumn[] {
                        this.tableContainerTbl.ContIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableContBundleTbl.ContIDColumn}, false);
            this.Relations.Add(this.relationtblContainertblContPOItem2);
            this.relationtblPOItem2tblContPOItem2 = new global::System.Data.DataRelation("tblPOItem2tblContPOItem2", new global::System.Data.DataColumn[] {
                        this.tablePOItemTbl.POItemNumberColumn}, new global::System.Data.DataColumn[] {
                        this.tableContBundleTbl.POItemNumberColumn}, false);
            this.Relations.Add(this.relationtblPOItem2tblContPOItem2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBalanceRptPO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBalanceRtpPOItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOItemTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOHeaderTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContainerTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSurchargeRateTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContBundleTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKeyNumberTble() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentTermsTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeShippingCodeTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOFileTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFileTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCountryTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContactsTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContainerTemplateTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBOLItemTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFinishTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCurrencyTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTreatmentTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBOLTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLocationTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderLogTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompanyTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EMDataSet ds = new EMDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BalanceRptPORowChangeEventHandler(object sender, BalanceRptPORowChangeEvent e);
        
        public delegate void BalanceRtpPOItemRowChangeEventHandler(object sender, BalanceRtpPOItemRowChangeEvent e);
        
        public delegate void POItemTblRowChangeEventHandler(object sender, POItemTblRowChangeEvent e);
        
        public delegate void POHeaderTblRowChangeEventHandler(object sender, POHeaderTblRowChangeEvent e);
        
        public delegate void ContainerTblRowChangeEventHandler(object sender, ContainerTblRowChangeEvent e);
        
        public delegate void SurchargeRateTblRowChangeEventHandler(object sender, SurchargeRateTblRowChangeEvent e);
        
        public delegate void ContBundleTblRowChangeEventHandler(object sender, ContBundleTblRowChangeEvent e);
        
        public delegate void KeyNumberTbleRowChangeEventHandler(object sender, KeyNumberTbleRowChangeEvent e);
        
        public delegate void PaymentTermsTblRowChangeEventHandler(object sender, PaymentTermsTblRowChangeEvent e);
        
        public delegate void ShippingCodeTblRowChangeEventHandler(object sender, ShippingCodeTblRowChangeEvent e);
        
        public delegate void ItemTblRowChangeEventHandler(object sender, ItemTblRowChangeEvent e);
        
        public delegate void POFileTblRowChangeEventHandler(object sender, POFileTblRowChangeEvent e);
        
        public delegate void FileTblRowChangeEventHandler(object sender, FileTblRowChangeEvent e);
        
        public delegate void CountryTblRowChangeEventHandler(object sender, CountryTblRowChangeEvent e);
        
        public delegate void ContactsTblRowChangeEventHandler(object sender, ContactsTblRowChangeEvent e);
        
        public delegate void ContainerTemplateTblRowChangeEventHandler(object sender, ContainerTemplateTblRowChangeEvent e);
        
        public delegate void BOLItemTblRowChangeEventHandler(object sender, BOLItemTblRowChangeEvent e);
        
        public delegate void FinishTblRowChangeEventHandler(object sender, FinishTblRowChangeEvent e);
        
        public delegate void CurrencyTblRowChangeEventHandler(object sender, CurrencyTblRowChangeEvent e);
        
        public delegate void TreatmentTblRowChangeEventHandler(object sender, TreatmentTblRowChangeEvent e);
        
        public delegate void BOLTblRowChangeEventHandler(object sender, BOLTblRowChangeEvent e);
        
        public delegate void LocationTblRowChangeEventHandler(object sender, LocationTblRowChangeEvent e);
        
        public delegate void OrderLogTblRowChangeEventHandler(object sender, OrderLogTblRowChangeEvent e);
        
        public delegate void CompanyTblRowChangeEventHandler(object sender, CompanyTblRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BalanceRptPODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOID;
            
            private global::System.Data.DataColumn columnPONumber;
            
            private global::System.Data.DataColumn columnTotalCount;
            
            private global::System.Data.DataColumn columnClosedCount;
            
            private global::System.Data.DataColumn columnFinishedPO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPODataTable() {
                this.TableName = "BalanceRptPO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceRptPODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BalanceRptPODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONumberColumn {
                get {
                    return this.columnPONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCountColumn {
                get {
                    return this.columnTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosedCountColumn {
                get {
                    return this.columnClosedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinishedPOColumn {
                get {
                    return this.columnFinishedPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORow this[int index] {
                get {
                    return ((BalanceRptPORow)(this.Rows[index]));
                }
            }
            
            public event BalanceRptPORowChangeEventHandler BalanceRptPORowChanging;
            
            public event BalanceRptPORowChangeEventHandler BalanceRptPORowChanged;
            
            public event BalanceRptPORowChangeEventHandler BalanceRptPORowDeleting;
            
            public event BalanceRptPORowChangeEventHandler BalanceRptPORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBalanceRptPORow(BalanceRptPORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORow AddBalanceRptPORow(int POID, string PONumber, int TotalCount, int ClosedCount, int FinishedPO) {
                BalanceRptPORow rowBalanceRptPORow = ((BalanceRptPORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        POID,
                        PONumber,
                        TotalCount,
                        ClosedCount,
                        FinishedPO};
                rowBalanceRptPORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBalanceRptPORow);
                return rowBalanceRptPORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORow FindByPOID(int POID) {
                return ((BalanceRptPORow)(this.Rows.Find(new object[] {
                            POID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BalanceRptPODataTable cln = ((BalanceRptPODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BalanceRptPODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOID = base.Columns["POID"];
                this.columnPONumber = base.Columns["PONumber"];
                this.columnTotalCount = base.Columns["TotalCount"];
                this.columnClosedCount = base.Columns["ClosedCount"];
                this.columnFinishedPO = base.Columns["FinishedPO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOID = new global::System.Data.DataColumn("POID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnPONumber = new global::System.Data.DataColumn("PONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONumber);
                this.columnTotalCount = new global::System.Data.DataColumn("TotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCount);
                this.columnClosedCount = new global::System.Data.DataColumn("ClosedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosedCount);
                this.columnFinishedPO = new global::System.Data.DataColumn("FinishedPO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishedPO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOID}, true));
                this.columnPOID.AllowDBNull = false;
                this.columnPOID.Unique = true;
                this.columnPONumber.MaxLength = 50;
                this.columnTotalCount.Caption = "OpenCount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORow NewBalanceRptPORow() {
                return ((BalanceRptPORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BalanceRptPORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BalanceRptPORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BalanceRptPORowChanged != null)) {
                    this.BalanceRptPORowChanged(this, new BalanceRptPORowChangeEvent(((BalanceRptPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BalanceRptPORowChanging != null)) {
                    this.BalanceRptPORowChanging(this, new BalanceRptPORowChangeEvent(((BalanceRptPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BalanceRptPORowDeleted != null)) {
                    this.BalanceRptPORowDeleted(this, new BalanceRptPORowChangeEvent(((BalanceRptPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BalanceRptPORowDeleting != null)) {
                    this.BalanceRptPORowDeleting(this, new BalanceRptPORowChangeEvent(((BalanceRptPORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBalanceRptPORow(BalanceRptPORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BalanceRptPODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BalanceRtpPOItemDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOID;
            
            private global::System.Data.DataColumn columnPOItemNumber;
            
            private global::System.Data.DataColumn columnGrade;
            
            private global::System.Data.DataColumn columnClosedCount;
            
            private global::System.Data.DataColumn columnTotalCount;
            
            private global::System.Data.DataColumn columnClosedPercent;
            
            private global::System.Data.DataColumn columnSequenceNumber;
            
            private global::System.Data.DataColumn columnFinishedItem;
            
            private global::System.Data.DataColumn columnUM;
            
            private global::System.Data.DataColumn columnSizeOfItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemDataTable() {
                this.TableName = "BalanceRtpPOItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceRtpPOItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BalanceRtpPOItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POItemNumberColumn {
                get {
                    return this.columnPOItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GradeColumn {
                get {
                    return this.columnGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosedCountColumn {
                get {
                    return this.columnClosedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCountColumn {
                get {
                    return this.columnTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosedPercentColumn {
                get {
                    return this.columnClosedPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SequenceNumberColumn {
                get {
                    return this.columnSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinishedItemColumn {
                get {
                    return this.columnFinishedItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMColumn {
                get {
                    return this.columnUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeOfItemColumn {
                get {
                    return this.columnSizeOfItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRow this[int index] {
                get {
                    return ((BalanceRtpPOItemRow)(this.Rows[index]));
                }
            }
            
            public event BalanceRtpPOItemRowChangeEventHandler BalanceRtpPOItemRowChanging;
            
            public event BalanceRtpPOItemRowChangeEventHandler BalanceRtpPOItemRowChanged;
            
            public event BalanceRtpPOItemRowChangeEventHandler BalanceRtpPOItemRowDeleting;
            
            public event BalanceRtpPOItemRowChangeEventHandler BalanceRtpPOItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBalanceRtpPOItemRow(BalanceRtpPOItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRow AddBalanceRtpPOItemRow(BalanceRptPORow parentBalanceRptPORowByBalanceRptPO_BalanceRtpPOItem, int POItemNumber, string Grade, decimal ClosedCount, decimal TotalCount, decimal ClosedPercent, int SequenceNumber, int FinishedItem, string UM, string SizeOfItem) {
                BalanceRtpPOItemRow rowBalanceRtpPOItemRow = ((BalanceRtpPOItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        POItemNumber,
                        Grade,
                        ClosedCount,
                        TotalCount,
                        ClosedPercent,
                        SequenceNumber,
                        FinishedItem,
                        UM,
                        SizeOfItem};
                if ((parentBalanceRptPORowByBalanceRptPO_BalanceRtpPOItem != null)) {
                    columnValuesArray[0] = parentBalanceRptPORowByBalanceRptPO_BalanceRtpPOItem[0];
                }
                rowBalanceRtpPOItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBalanceRtpPOItemRow);
                return rowBalanceRtpPOItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRow FindByPOItemNumber(int POItemNumber) {
                return ((BalanceRtpPOItemRow)(this.Rows.Find(new object[] {
                            POItemNumber})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BalanceRtpPOItemDataTable cln = ((BalanceRtpPOItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BalanceRtpPOItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOID = base.Columns["POID"];
                this.columnPOItemNumber = base.Columns["POItemNumber"];
                this.columnGrade = base.Columns["Grade"];
                this.columnClosedCount = base.Columns["ClosedCount"];
                this.columnTotalCount = base.Columns["TotalCount"];
                this.columnClosedPercent = base.Columns["ClosedPercent"];
                this.columnSequenceNumber = base.Columns["SequenceNumber"];
                this.columnFinishedItem = base.Columns["FinishedItem"];
                this.columnUM = base.Columns["UM"];
                this.columnSizeOfItem = base.Columns["SizeOfItem"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOID = new global::System.Data.DataColumn("POID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnPOItemNumber = new global::System.Data.DataColumn("POItemNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOItemNumber);
                this.columnGrade = new global::System.Data.DataColumn("Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrade);
                this.columnClosedCount = new global::System.Data.DataColumn("ClosedCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosedCount);
                this.columnTotalCount = new global::System.Data.DataColumn("TotalCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCount);
                this.columnClosedPercent = new global::System.Data.DataColumn("ClosedPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosedPercent);
                this.columnSequenceNumber = new global::System.Data.DataColumn("SequenceNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNumber);
                this.columnFinishedItem = new global::System.Data.DataColumn("FinishedItem", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishedItem);
                this.columnUM = new global::System.Data.DataColumn("UM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUM);
                this.columnSizeOfItem = new global::System.Data.DataColumn("SizeOfItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeOfItem);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOItemNumber}, true));
                this.columnPOID.AllowDBNull = false;
                this.columnPOItemNumber.AllowDBNull = false;
                this.columnPOItemNumber.Unique = true;
                this.columnGrade.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRow NewBalanceRtpPOItemRow() {
                return ((BalanceRtpPOItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BalanceRtpPOItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BalanceRtpPOItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BalanceRtpPOItemRowChanged != null)) {
                    this.BalanceRtpPOItemRowChanged(this, new BalanceRtpPOItemRowChangeEvent(((BalanceRtpPOItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BalanceRtpPOItemRowChanging != null)) {
                    this.BalanceRtpPOItemRowChanging(this, new BalanceRtpPOItemRowChangeEvent(((BalanceRtpPOItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BalanceRtpPOItemRowDeleted != null)) {
                    this.BalanceRtpPOItemRowDeleted(this, new BalanceRtpPOItemRowChangeEvent(((BalanceRtpPOItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BalanceRtpPOItemRowDeleting != null)) {
                    this.BalanceRtpPOItemRowDeleting(this, new BalanceRtpPOItemRowChangeEvent(((BalanceRtpPOItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBalanceRtpPOItemRow(BalanceRtpPOItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BalanceRtpPOItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POItemTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOItemNumber;
            
            private global::System.Data.DataColumn columnPOID;
            
            private global::System.Data.DataColumn columnSeqNumber;
            
            private global::System.Data.DataColumn columnItemNameObsolete;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnSizeOfItem;
            
            private global::System.Data.DataColumn columnItemAccessCode;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnUM;
            
            private global::System.Data.DataColumn columnDateRequired;
            
            private global::System.Data.DataColumn columnAcknowledgeDate;
            
            private global::System.Data.DataColumn columnMillShipDate;
            
            private global::System.Data.DataColumn columnCancelDate;
            
            private global::System.Data.DataColumn columnCustRate;
            
            private global::System.Data.DataColumn columnCommRate;
            
            private global::System.Data.DataColumn columnCustAmount;
            
            private global::System.Data.DataColumn columnCommAmount;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnFinishID;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTreatmentID;
            
            private global::System.Data.DataColumn columnMillConfirmationNumber;
            
            private global::System.Data.DataColumn columnMillAcknowledgeDate;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblDataTable() {
                this.TableName = "POItemTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POItemTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POItemTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POItemNumberColumn {
                get {
                    return this.columnPOItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeqNumberColumn {
                get {
                    return this.columnSeqNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameObsoleteColumn {
                get {
                    return this.columnItemNameObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeOfItemColumn {
                get {
                    return this.columnSizeOfItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemAccessCodeColumn {
                get {
                    return this.columnItemAccessCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMColumn {
                get {
                    return this.columnUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateRequiredColumn {
                get {
                    return this.columnDateRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcknowledgeDateColumn {
                get {
                    return this.columnAcknowledgeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillShipDateColumn {
                get {
                    return this.columnMillShipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelDateColumn {
                get {
                    return this.columnCancelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustRateColumn {
                get {
                    return this.columnCustRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommRateColumn {
                get {
                    return this.columnCommRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAmountColumn {
                get {
                    return this.columnCustAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommAmountColumn {
                get {
                    return this.columnCommAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinishIDColumn {
                get {
                    return this.columnFinishID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TreatmentIDColumn {
                get {
                    return this.columnTreatmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillConfirmationNumberColumn {
                get {
                    return this.columnMillConfirmationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillAcknowledgeDateColumn {
                get {
                    return this.columnMillAcknowledgeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow this[int index] {
                get {
                    return ((POItemTblRow)(this.Rows[index]));
                }
            }
            
            public event POItemTblRowChangeEventHandler POItemTblRowChanging;
            
            public event POItemTblRowChangeEventHandler POItemTblRowChanged;
            
            public event POItemTblRowChangeEventHandler POItemTblRowDeleting;
            
            public event POItemTblRowChangeEventHandler POItemTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOItemTblRow(POItemTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow AddPOItemTblRow(
                        int POItemNumber, 
                        POHeaderTblRow parentPOHeaderTblRowBytblPOHeader2tblPOItem2, 
                        int SeqNumber, 
                        string ItemNameObsolete, 
                        string ItemDesc, 
                        string Length, 
                        string SizeOfItem, 
                        string ItemAccessCode, 
                        decimal Qty, 
                        string UM, 
                        System.DateTime DateRequired, 
                        System.DateTime AcknowledgeDate, 
                        System.DateTime MillShipDate, 
                        System.DateTime CancelDate, 
                        decimal CustRate, 
                        decimal CommRate, 
                        decimal CustAmount, 
                        decimal CommAmount, 
                        string Comments, 
                        int FinishID, 
                        ItemTblRow parentItemTblRowByItemTbl_POItemTbl, 
                        int TreatmentID, 
                        string MillConfirmationNumber, 
                        System.DateTime MillAcknowledgeDate, 
                        string InvoiceNumber, 
                        System.DateTime InvoiceDate) {
                POItemTblRow rowPOItemTblRow = ((POItemTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        POItemNumber,
                        null,
                        SeqNumber,
                        ItemNameObsolete,
                        ItemDesc,
                        Length,
                        SizeOfItem,
                        ItemAccessCode,
                        Qty,
                        UM,
                        DateRequired,
                        AcknowledgeDate,
                        MillShipDate,
                        CancelDate,
                        CustRate,
                        CommRate,
                        CustAmount,
                        CommAmount,
                        Comments,
                        FinishID,
                        null,
                        TreatmentID,
                        MillConfirmationNumber,
                        MillAcknowledgeDate,
                        InvoiceNumber,
                        InvoiceDate};
                if ((parentPOHeaderTblRowBytblPOHeader2tblPOItem2 != null)) {
                    columnValuesArray[1] = parentPOHeaderTblRowBytblPOHeader2tblPOItem2[0];
                }
                if ((parentItemTblRowByItemTbl_POItemTbl != null)) {
                    columnValuesArray[20] = parentItemTblRowByItemTbl_POItemTbl[0];
                }
                rowPOItemTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOItemTblRow);
                return rowPOItemTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow FindByPOItemNumber(int POItemNumber) {
                return ((POItemTblRow)(this.Rows.Find(new object[] {
                            POItemNumber})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POItemTblDataTable cln = ((POItemTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POItemTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOItemNumber = base.Columns["POItemNumber"];
                this.columnPOID = base.Columns["POID"];
                this.columnSeqNumber = base.Columns["SeqNumber"];
                this.columnItemNameObsolete = base.Columns["ItemNameObsolete"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnLength = base.Columns["Length"];
                this.columnSizeOfItem = base.Columns["SizeOfItem"];
                this.columnItemAccessCode = base.Columns["ItemAccessCode"];
                this.columnQty = base.Columns["Qty"];
                this.columnUM = base.Columns["UM"];
                this.columnDateRequired = base.Columns["DateRequired"];
                this.columnAcknowledgeDate = base.Columns["AcknowledgeDate"];
                this.columnMillShipDate = base.Columns["MillShipDate"];
                this.columnCancelDate = base.Columns["CancelDate"];
                this.columnCustRate = base.Columns["CustRate"];
                this.columnCommRate = base.Columns["CommRate"];
                this.columnCustAmount = base.Columns["CustAmount"];
                this.columnCommAmount = base.Columns["CommAmount"];
                this.columnComments = base.Columns["Comments"];
                this.columnFinishID = base.Columns["FinishID"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTreatmentID = base.Columns["TreatmentID"];
                this.columnMillConfirmationNumber = base.Columns["MillConfirmationNumber"];
                this.columnMillAcknowledgeDate = base.Columns["MillAcknowledgeDate"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOItemNumber = new global::System.Data.DataColumn("POItemNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOItemNumber);
                this.columnPOID = new global::System.Data.DataColumn("POID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnSeqNumber = new global::System.Data.DataColumn("SeqNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeqNumber);
                this.columnItemNameObsolete = new global::System.Data.DataColumn("ItemNameObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNameObsolete);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnSizeOfItem = new global::System.Data.DataColumn("SizeOfItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeOfItem);
                this.columnItemAccessCode = new global::System.Data.DataColumn("ItemAccessCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemAccessCode);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnUM = new global::System.Data.DataColumn("UM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUM);
                this.columnDateRequired = new global::System.Data.DataColumn("DateRequired", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateRequired);
                this.columnAcknowledgeDate = new global::System.Data.DataColumn("AcknowledgeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcknowledgeDate);
                this.columnMillShipDate = new global::System.Data.DataColumn("MillShipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillShipDate);
                this.columnCancelDate = new global::System.Data.DataColumn("CancelDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelDate);
                this.columnCustRate = new global::System.Data.DataColumn("CustRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustRate);
                this.columnCommRate = new global::System.Data.DataColumn("CommRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommRate);
                this.columnCustAmount = new global::System.Data.DataColumn("CustAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAmount);
                this.columnCommAmount = new global::System.Data.DataColumn("CommAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommAmount);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnFinishID = new global::System.Data.DataColumn("FinishID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishID);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTreatmentID = new global::System.Data.DataColumn("TreatmentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatmentID);
                this.columnMillConfirmationNumber = new global::System.Data.DataColumn("MillConfirmationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillConfirmationNumber);
                this.columnMillAcknowledgeDate = new global::System.Data.DataColumn("MillAcknowledgeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillAcknowledgeDate);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOItemNumber}, true));
                this.columnPOItemNumber.AllowDBNull = false;
                this.columnPOItemNumber.Unique = true;
                this.columnItemNameObsolete.MaxLength = 90;
                this.columnItemDesc.MaxLength = 536870910;
                this.columnLength.MaxLength = 20;
                this.columnSizeOfItem.MaxLength = 20;
                this.columnItemAccessCode.MaxLength = 30;
                this.columnUM.MaxLength = 10;
                this.columnComments.MaxLength = 536870910;
                this.columnMillConfirmationNumber.MaxLength = 255;
                this.columnInvoiceNumber.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow NewPOItemTblRow() {
                return ((POItemTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POItemTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POItemTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POItemTblRowChanged != null)) {
                    this.POItemTblRowChanged(this, new POItemTblRowChangeEvent(((POItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POItemTblRowChanging != null)) {
                    this.POItemTblRowChanging(this, new POItemTblRowChangeEvent(((POItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POItemTblRowDeleted != null)) {
                    this.POItemTblRowDeleted(this, new POItemTblRowChangeEvent(((POItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POItemTblRowDeleting != null)) {
                    this.POItemTblRowDeleting(this, new POItemTblRowChangeEvent(((POItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOItemTblRow(POItemTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POItemTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POHeaderTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOID;
            
            private global::System.Data.DataColumn columnPONumber;
            
            private global::System.Data.DataColumn columnPODate;
            
            private global::System.Data.DataColumn columnVendCompany;
            
            private global::System.Data.DataColumn columnVendNameObsolete;
            
            private global::System.Data.DataColumn columnVendPhone;
            
            private global::System.Data.DataColumn columnVendFax;
            
            private global::System.Data.DataColumn columnVendContact;
            
            private global::System.Data.DataColumn columnVendEMail;
            
            private global::System.Data.DataColumn columnVendAddressObsolete;
            
            private global::System.Data.DataColumn columnVendCountryObsolete;
            
            private global::System.Data.DataColumn columnShipToCompanyObsolete;
            
            private global::System.Data.DataColumn columnShipToNameObsolete;
            
            private global::System.Data.DataColumn columnShipToPhone;
            
            private global::System.Data.DataColumn columnShipToFax;
            
            private global::System.Data.DataColumn columnShipToContact;
            
            private global::System.Data.DataColumn columnShipToEMail;
            
            private global::System.Data.DataColumn columnShipToAddressObsolete;
            
            private global::System.Data.DataColumn columnShipToCountryObsolete;
            
            private global::System.Data.DataColumn columnTerms;
            
            private global::System.Data.DataColumn columnShipCode;
            
            private global::System.Data.DataColumn columnFOB;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnUSTotal;
            
            private global::System.Data.DataColumn columnOtherTotal;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnCancelDate;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnVendLocationNameObsolete;
            
            private global::System.Data.DataColumn columnShipToLocationNameObsolete;
            
            private global::System.Data.DataColumn columnMillConfirmationNumber;
            
            private global::System.Data.DataColumn columnMillAcknowledgeDate;
            
            private global::System.Data.DataColumn columnExchangeDate;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerLocationID;
            
            private global::System.Data.DataColumn columnMillID;
            
            private global::System.Data.DataColumn columnMillLocationID;
            
            private global::System.Data.DataColumn columnSurchargesInEffect;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnMillAcknowledgeDateRevised;
            
            private global::System.Data.DataColumn columnVendContactID;
            
            private global::System.Data.DataColumn columnShipToContactID;
            
            private global::System.Data.DataColumn columnMillConfirmationAppliesToEntirePO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblDataTable() {
                this.TableName = "POHeaderTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POHeaderTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POHeaderTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONumberColumn {
                get {
                    return this.columnPONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODateColumn {
                get {
                    return this.columnPODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendCompanyColumn {
                get {
                    return this.columnVendCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendNameObsoleteColumn {
                get {
                    return this.columnVendNameObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendPhoneColumn {
                get {
                    return this.columnVendPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendFaxColumn {
                get {
                    return this.columnVendFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendContactColumn {
                get {
                    return this.columnVendContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendEMailColumn {
                get {
                    return this.columnVendEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendAddressObsoleteColumn {
                get {
                    return this.columnVendAddressObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendCountryObsoleteColumn {
                get {
                    return this.columnVendCountryObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToCompanyObsoleteColumn {
                get {
                    return this.columnShipToCompanyObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToNameObsoleteColumn {
                get {
                    return this.columnShipToNameObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToPhoneColumn {
                get {
                    return this.columnShipToPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToFaxColumn {
                get {
                    return this.columnShipToFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToContactColumn {
                get {
                    return this.columnShipToContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToEMailColumn {
                get {
                    return this.columnShipToEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToAddressObsoleteColumn {
                get {
                    return this.columnShipToAddressObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToCountryObsoleteColumn {
                get {
                    return this.columnShipToCountryObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsColumn {
                get {
                    return this.columnTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipCodeColumn {
                get {
                    return this.columnShipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOBColumn {
                get {
                    return this.columnFOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTotalColumn {
                get {
                    return this.columnUSTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherTotalColumn {
                get {
                    return this.columnOtherTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancelDateColumn {
                get {
                    return this.columnCancelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendLocationNameObsoleteColumn {
                get {
                    return this.columnVendLocationNameObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToLocationNameObsoleteColumn {
                get {
                    return this.columnShipToLocationNameObsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillConfirmationNumberColumn {
                get {
                    return this.columnMillConfirmationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillAcknowledgeDateColumn {
                get {
                    return this.columnMillAcknowledgeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchangeDateColumn {
                get {
                    return this.columnExchangeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerLocationIDColumn {
                get {
                    return this.columnCustomerLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillIDColumn {
                get {
                    return this.columnMillID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillLocationIDColumn {
                get {
                    return this.columnMillLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurchargesInEffectColumn {
                get {
                    return this.columnSurchargesInEffect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillAcknowledgeDateRevisedColumn {
                get {
                    return this.columnMillAcknowledgeDateRevised;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendContactIDColumn {
                get {
                    return this.columnVendContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToContactIDColumn {
                get {
                    return this.columnShipToContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillConfirmationAppliesToEntirePOColumn {
                get {
                    return this.columnMillConfirmationAppliesToEntirePO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRow this[int index] {
                get {
                    return ((POHeaderTblRow)(this.Rows[index]));
                }
            }
            
            public event POHeaderTblRowChangeEventHandler POHeaderTblRowChanging;
            
            public event POHeaderTblRowChangeEventHandler POHeaderTblRowChanged;
            
            public event POHeaderTblRowChangeEventHandler POHeaderTblRowDeleting;
            
            public event POHeaderTblRowChangeEventHandler POHeaderTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOHeaderTblRow(POHeaderTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRow AddPOHeaderTblRow(
                        int POID, 
                        string PONumber, 
                        System.DateTime PODate, 
                        string VendCompany, 
                        string VendNameObsolete, 
                        string VendPhone, 
                        string VendFax, 
                        string VendContact, 
                        string VendEMail, 
                        string VendAddressObsolete, 
                        string VendCountryObsolete, 
                        string ShipToCompanyObsolete, 
                        string ShipToNameObsolete, 
                        string ShipToPhone, 
                        string ShipToFax, 
                        string ShipToContact, 
                        string ShipToEMail, 
                        string ShipToAddressObsolete, 
                        string ShipToCountryObsolete, 
                        string Terms, 
                        string ShipCode, 
                        string FOB, 
                        string Status, 
                        decimal USTotal, 
                        decimal OtherTotal, 
                        decimal ExchangeRate, 
                        System.DateTime CancelDate, 
                        string Comments, 
                        string VendLocationNameObsolete, 
                        string ShipToLocationNameObsolete, 
                        string MillConfirmationNumber, 
                        System.DateTime MillAcknowledgeDate, 
                        System.DateTime ExchangeDate, 
                        int CurrencyID, 
                        int CustomerID, 
                        int CustomerLocationID, 
                        int MillID, 
                        int MillLocationID, 
                        bool SurchargesInEffect, 
                        string InvoiceNumber, 
                        System.DateTime InvoiceDate, 
                        System.DateTime MillAcknowledgeDateRevised, 
                        int VendContactID, 
                        int ShipToContactID, 
                        int MillConfirmationAppliesToEntirePO) {
                POHeaderTblRow rowPOHeaderTblRow = ((POHeaderTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        POID,
                        PONumber,
                        PODate,
                        VendCompany,
                        VendNameObsolete,
                        VendPhone,
                        VendFax,
                        VendContact,
                        VendEMail,
                        VendAddressObsolete,
                        VendCountryObsolete,
                        ShipToCompanyObsolete,
                        ShipToNameObsolete,
                        ShipToPhone,
                        ShipToFax,
                        ShipToContact,
                        ShipToEMail,
                        ShipToAddressObsolete,
                        ShipToCountryObsolete,
                        Terms,
                        ShipCode,
                        FOB,
                        Status,
                        USTotal,
                        OtherTotal,
                        ExchangeRate,
                        CancelDate,
                        Comments,
                        VendLocationNameObsolete,
                        ShipToLocationNameObsolete,
                        MillConfirmationNumber,
                        MillAcknowledgeDate,
                        ExchangeDate,
                        CurrencyID,
                        CustomerID,
                        CustomerLocationID,
                        MillID,
                        MillLocationID,
                        SurchargesInEffect,
                        InvoiceNumber,
                        InvoiceDate,
                        MillAcknowledgeDateRevised,
                        VendContactID,
                        ShipToContactID,
                        MillConfirmationAppliesToEntirePO};
                rowPOHeaderTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOHeaderTblRow);
                return rowPOHeaderTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRow FindByPOID(int POID) {
                return ((POHeaderTblRow)(this.Rows.Find(new object[] {
                            POID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POHeaderTblDataTable cln = ((POHeaderTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POHeaderTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOID = base.Columns["POID"];
                this.columnPONumber = base.Columns["PONumber"];
                this.columnPODate = base.Columns["PODate"];
                this.columnVendCompany = base.Columns["VendCompany"];
                this.columnVendNameObsolete = base.Columns["VendNameObsolete"];
                this.columnVendPhone = base.Columns["VendPhone"];
                this.columnVendFax = base.Columns["VendFax"];
                this.columnVendContact = base.Columns["VendContact"];
                this.columnVendEMail = base.Columns["VendEMail"];
                this.columnVendAddressObsolete = base.Columns["VendAddressObsolete"];
                this.columnVendCountryObsolete = base.Columns["VendCountryObsolete"];
                this.columnShipToCompanyObsolete = base.Columns["ShipToCompanyObsolete"];
                this.columnShipToNameObsolete = base.Columns["ShipToNameObsolete"];
                this.columnShipToPhone = base.Columns["ShipToPhone"];
                this.columnShipToFax = base.Columns["ShipToFax"];
                this.columnShipToContact = base.Columns["ShipToContact"];
                this.columnShipToEMail = base.Columns["ShipToEMail"];
                this.columnShipToAddressObsolete = base.Columns["ShipToAddressObsolete"];
                this.columnShipToCountryObsolete = base.Columns["ShipToCountryObsolete"];
                this.columnTerms = base.Columns["Terms"];
                this.columnShipCode = base.Columns["ShipCode"];
                this.columnFOB = base.Columns["FOB"];
                this.columnStatus = base.Columns["Status"];
                this.columnUSTotal = base.Columns["USTotal"];
                this.columnOtherTotal = base.Columns["OtherTotal"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnCancelDate = base.Columns["CancelDate"];
                this.columnComments = base.Columns["Comments"];
                this.columnVendLocationNameObsolete = base.Columns["VendLocationNameObsolete"];
                this.columnShipToLocationNameObsolete = base.Columns["ShipToLocationNameObsolete"];
                this.columnMillConfirmationNumber = base.Columns["MillConfirmationNumber"];
                this.columnMillAcknowledgeDate = base.Columns["MillAcknowledgeDate"];
                this.columnExchangeDate = base.Columns["ExchangeDate"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerLocationID = base.Columns["CustomerLocationID"];
                this.columnMillID = base.Columns["MillID"];
                this.columnMillLocationID = base.Columns["MillLocationID"];
                this.columnSurchargesInEffect = base.Columns["SurchargesInEffect"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnMillAcknowledgeDateRevised = base.Columns["MillAcknowledgeDateRevised"];
                this.columnVendContactID = base.Columns["VendContactID"];
                this.columnShipToContactID = base.Columns["ShipToContactID"];
                this.columnMillConfirmationAppliesToEntirePO = base.Columns["MillConfirmationAppliesToEntirePO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOID = new global::System.Data.DataColumn("POID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnPONumber = new global::System.Data.DataColumn("PONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONumber);
                this.columnPODate = new global::System.Data.DataColumn("PODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODate);
                this.columnVendCompany = new global::System.Data.DataColumn("VendCompany", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendCompany);
                this.columnVendNameObsolete = new global::System.Data.DataColumn("VendNameObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendNameObsolete);
                this.columnVendPhone = new global::System.Data.DataColumn("VendPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendPhone);
                this.columnVendFax = new global::System.Data.DataColumn("VendFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendFax);
                this.columnVendContact = new global::System.Data.DataColumn("VendContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendContact);
                this.columnVendEMail = new global::System.Data.DataColumn("VendEMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendEMail);
                this.columnVendAddressObsolete = new global::System.Data.DataColumn("VendAddressObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendAddressObsolete);
                this.columnVendCountryObsolete = new global::System.Data.DataColumn("VendCountryObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendCountryObsolete);
                this.columnShipToCompanyObsolete = new global::System.Data.DataColumn("ShipToCompanyObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToCompanyObsolete);
                this.columnShipToNameObsolete = new global::System.Data.DataColumn("ShipToNameObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToNameObsolete);
                this.columnShipToPhone = new global::System.Data.DataColumn("ShipToPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToPhone);
                this.columnShipToFax = new global::System.Data.DataColumn("ShipToFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToFax);
                this.columnShipToContact = new global::System.Data.DataColumn("ShipToContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToContact);
                this.columnShipToEMail = new global::System.Data.DataColumn("ShipToEMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToEMail);
                this.columnShipToAddressObsolete = new global::System.Data.DataColumn("ShipToAddressObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToAddressObsolete);
                this.columnShipToCountryObsolete = new global::System.Data.DataColumn("ShipToCountryObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToCountryObsolete);
                this.columnTerms = new global::System.Data.DataColumn("Terms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerms);
                this.columnShipCode = new global::System.Data.DataColumn("ShipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipCode);
                this.columnFOB = new global::System.Data.DataColumn("FOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOB);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnUSTotal = new global::System.Data.DataColumn("USTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTotal);
                this.columnOtherTotal = new global::System.Data.DataColumn("OtherTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTotal);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnCancelDate = new global::System.Data.DataColumn("CancelDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelDate);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnVendLocationNameObsolete = new global::System.Data.DataColumn("VendLocationNameObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendLocationNameObsolete);
                this.columnShipToLocationNameObsolete = new global::System.Data.DataColumn("ShipToLocationNameObsolete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToLocationNameObsolete);
                this.columnMillConfirmationNumber = new global::System.Data.DataColumn("MillConfirmationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillConfirmationNumber);
                this.columnMillAcknowledgeDate = new global::System.Data.DataColumn("MillAcknowledgeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillAcknowledgeDate);
                this.columnExchangeDate = new global::System.Data.DataColumn("ExchangeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeDate);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerLocationID = new global::System.Data.DataColumn("CustomerLocationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerLocationID);
                this.columnMillID = new global::System.Data.DataColumn("MillID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillID);
                this.columnMillLocationID = new global::System.Data.DataColumn("MillLocationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillLocationID);
                this.columnSurchargesInEffect = new global::System.Data.DataColumn("SurchargesInEffect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurchargesInEffect);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnMillAcknowledgeDateRevised = new global::System.Data.DataColumn("MillAcknowledgeDateRevised", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillAcknowledgeDateRevised);
                this.columnVendContactID = new global::System.Data.DataColumn("VendContactID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendContactID);
                this.columnShipToContactID = new global::System.Data.DataColumn("ShipToContactID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToContactID);
                this.columnMillConfirmationAppliesToEntirePO = new global::System.Data.DataColumn("MillConfirmationAppliesToEntirePO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillConfirmationAppliesToEntirePO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOID}, true));
                this.columnPOID.AllowDBNull = false;
                this.columnPOID.Unique = true;
                this.columnPONumber.MaxLength = 20;
                this.columnVendCompany.MaxLength = 50;
                this.columnVendNameObsolete.MaxLength = 50;
                this.columnVendPhone.MaxLength = 50;
                this.columnVendFax.MaxLength = 50;
                this.columnVendContact.MaxLength = 50;
                this.columnVendEMail.MaxLength = 50;
                this.columnVendAddressObsolete.MaxLength = 536870910;
                this.columnVendCountryObsolete.MaxLength = 50;
                this.columnShipToCompanyObsolete.MaxLength = 50;
                this.columnShipToNameObsolete.MaxLength = 50;
                this.columnShipToPhone.MaxLength = 50;
                this.columnShipToFax.MaxLength = 50;
                this.columnShipToContact.MaxLength = 50;
                this.columnShipToEMail.MaxLength = 50;
                this.columnShipToAddressObsolete.MaxLength = 536870910;
                this.columnShipToCountryObsolete.MaxLength = 50;
                this.columnTerms.MaxLength = 20;
                this.columnShipCode.MaxLength = 10;
                this.columnFOB.MaxLength = 50;
                this.columnStatus.MaxLength = 10;
                this.columnComments.MaxLength = 536870910;
                this.columnVendLocationNameObsolete.MaxLength = 50;
                this.columnShipToLocationNameObsolete.MaxLength = 50;
                this.columnMillConfirmationNumber.MaxLength = 50;
                this.columnInvoiceNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRow NewPOHeaderTblRow() {
                return ((POHeaderTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POHeaderTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POHeaderTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POHeaderTblRowChanged != null)) {
                    this.POHeaderTblRowChanged(this, new POHeaderTblRowChangeEvent(((POHeaderTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POHeaderTblRowChanging != null)) {
                    this.POHeaderTblRowChanging(this, new POHeaderTblRowChangeEvent(((POHeaderTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POHeaderTblRowDeleted != null)) {
                    this.POHeaderTblRowDeleted(this, new POHeaderTblRowChangeEvent(((POHeaderTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POHeaderTblRowDeleting != null)) {
                    this.POHeaderTblRowDeleting(this, new POHeaderTblRowChangeEvent(((POHeaderTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOHeaderTblRow(POHeaderTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POHeaderTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContainerTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnContID;
            
            private global::System.Data.DataColumn columnContNumber;
            
            private global::System.Data.DataColumn columnShipDate;
            
            private global::System.Data.DataColumn columnETA;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerLocationID;
            
            private global::System.Data.DataColumn columnApplyClosingToEntireContainer;
            
            private global::System.Data.DataColumn columnContainerPickupDate;
            
            private global::System.Data.DataColumn columnContainerPickupTerminal;
            
            private global::System.Data.DataColumn columnContainerProofOfDelivery;
            
            private global::System.Data.DataColumn columnReleaseDate;
            
            private global::System.Data.DataColumn columnMillID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblDataTable() {
                this.TableName = "ContainerTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContainerTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContainerTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContIDColumn {
                get {
                    return this.columnContID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContNumberColumn {
                get {
                    return this.columnContNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipDateColumn {
                get {
                    return this.columnShipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETAColumn {
                get {
                    return this.columnETA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerLocationIDColumn {
                get {
                    return this.columnCustomerLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyClosingToEntireContainerColumn {
                get {
                    return this.columnApplyClosingToEntireContainer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerPickupDateColumn {
                get {
                    return this.columnContainerPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerPickupTerminalColumn {
                get {
                    return this.columnContainerPickupTerminal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerProofOfDeliveryColumn {
                get {
                    return this.columnContainerProofOfDelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReleaseDateColumn {
                get {
                    return this.columnReleaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillIDColumn {
                get {
                    return this.columnMillID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRow this[int index] {
                get {
                    return ((ContainerTblRow)(this.Rows[index]));
                }
            }
            
            public event ContainerTblRowChangeEventHandler ContainerTblRowChanging;
            
            public event ContainerTblRowChangeEventHandler ContainerTblRowChanged;
            
            public event ContainerTblRowChangeEventHandler ContainerTblRowDeleting;
            
            public event ContainerTblRowChangeEventHandler ContainerTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContainerTblRow(ContainerTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRow AddContainerTblRow(int ContID, string ContNumber, System.DateTime ShipDate, System.DateTime ETA, string Comments, string Status, int CustomerID, int CustomerLocationID, int ApplyClosingToEntireContainer, System.DateTime ContainerPickupDate, string ContainerPickupTerminal, string ContainerProofOfDelivery, System.DateTime ReleaseDate, int MillID) {
                ContainerTblRow rowContainerTblRow = ((ContainerTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ContID,
                        ContNumber,
                        ShipDate,
                        ETA,
                        Comments,
                        Status,
                        CustomerID,
                        CustomerLocationID,
                        ApplyClosingToEntireContainer,
                        ContainerPickupDate,
                        ContainerPickupTerminal,
                        ContainerProofOfDelivery,
                        ReleaseDate,
                        MillID};
                rowContainerTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContainerTblRow);
                return rowContainerTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRow FindByContID(int ContID) {
                return ((ContainerTblRow)(this.Rows.Find(new object[] {
                            ContID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContainerTblDataTable cln = ((ContainerTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContainerTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnContID = base.Columns["ContID"];
                this.columnContNumber = base.Columns["ContNumber"];
                this.columnShipDate = base.Columns["ShipDate"];
                this.columnETA = base.Columns["ETA"];
                this.columnComments = base.Columns["Comments"];
                this.columnStatus = base.Columns["Status"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerLocationID = base.Columns["CustomerLocationID"];
                this.columnApplyClosingToEntireContainer = base.Columns["ApplyClosingToEntireContainer"];
                this.columnContainerPickupDate = base.Columns["ContainerPickupDate"];
                this.columnContainerPickupTerminal = base.Columns["ContainerPickupTerminal"];
                this.columnContainerProofOfDelivery = base.Columns["ContainerProofOfDelivery"];
                this.columnReleaseDate = base.Columns["ReleaseDate"];
                this.columnMillID = base.Columns["MillID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnContID = new global::System.Data.DataColumn("ContID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContID);
                this.columnContNumber = new global::System.Data.DataColumn("ContNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContNumber);
                this.columnShipDate = new global::System.Data.DataColumn("ShipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipDate);
                this.columnETA = new global::System.Data.DataColumn("ETA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETA);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerLocationID = new global::System.Data.DataColumn("CustomerLocationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerLocationID);
                this.columnApplyClosingToEntireContainer = new global::System.Data.DataColumn("ApplyClosingToEntireContainer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyClosingToEntireContainer);
                this.columnContainerPickupDate = new global::System.Data.DataColumn("ContainerPickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerPickupDate);
                this.columnContainerPickupTerminal = new global::System.Data.DataColumn("ContainerPickupTerminal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerPickupTerminal);
                this.columnContainerProofOfDelivery = new global::System.Data.DataColumn("ContainerProofOfDelivery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerProofOfDelivery);
                this.columnReleaseDate = new global::System.Data.DataColumn("ReleaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleaseDate);
                this.columnMillID = new global::System.Data.DataColumn("MillID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnContID}, true));
                this.columnContID.AllowDBNull = false;
                this.columnContID.Unique = true;
                this.columnContNumber.MaxLength = 80;
                this.columnComments.MaxLength = 536870910;
                this.columnStatus.MaxLength = 50;
                this.columnContainerPickupTerminal.MaxLength = 50;
                this.columnContainerProofOfDelivery.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRow NewContainerTblRow() {
                return ((ContainerTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContainerTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContainerTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContainerTblRowChanged != null)) {
                    this.ContainerTblRowChanged(this, new ContainerTblRowChangeEvent(((ContainerTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContainerTblRowChanging != null)) {
                    this.ContainerTblRowChanging(this, new ContainerTblRowChangeEvent(((ContainerTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContainerTblRowDeleted != null)) {
                    this.ContainerTblRowDeleted(this, new ContainerTblRowChangeEvent(((ContainerTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContainerTblRowDeleting != null)) {
                    this.ContainerTblRowDeleting(this, new ContainerTblRowChangeEvent(((ContainerTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContainerTblRow(ContainerTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContainerTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SurchargeRateTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSurchargeID;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnFinishID;
            
            private global::System.Data.DataColumn columnSurchargeRate;
            
            private global::System.Data.DataColumn columnSurchargeDate;
            
            private global::System.Data.DataColumn columnSurchargeMonth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblDataTable() {
                this.TableName = "SurchargeRateTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SurchargeRateTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SurchargeRateTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurchargeIDColumn {
                get {
                    return this.columnSurchargeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinishIDColumn {
                get {
                    return this.columnFinishID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurchargeRateColumn {
                get {
                    return this.columnSurchargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurchargeDateColumn {
                get {
                    return this.columnSurchargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurchargeMonthColumn {
                get {
                    return this.columnSurchargeMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblRow this[int index] {
                get {
                    return ((SurchargeRateTblRow)(this.Rows[index]));
                }
            }
            
            public event SurchargeRateTblRowChangeEventHandler SurchargeRateTblRowChanging;
            
            public event SurchargeRateTblRowChangeEventHandler SurchargeRateTblRowChanged;
            
            public event SurchargeRateTblRowChangeEventHandler SurchargeRateTblRowDeleting;
            
            public event SurchargeRateTblRowChangeEventHandler SurchargeRateTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSurchargeRateTblRow(SurchargeRateTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblRow AddSurchargeRateTblRow(int SurchargeID, int ItemID, int FinishID, decimal SurchargeRate, System.DateTime SurchargeDate, int SurchargeMonth) {
                SurchargeRateTblRow rowSurchargeRateTblRow = ((SurchargeRateTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SurchargeID,
                        ItemID,
                        FinishID,
                        SurchargeRate,
                        SurchargeDate,
                        SurchargeMonth};
                rowSurchargeRateTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSurchargeRateTblRow);
                return rowSurchargeRateTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblRow FindBySurchargeID(int SurchargeID) {
                return ((SurchargeRateTblRow)(this.Rows.Find(new object[] {
                            SurchargeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SurchargeRateTblDataTable cln = ((SurchargeRateTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SurchargeRateTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSurchargeID = base.Columns["SurchargeID"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnFinishID = base.Columns["FinishID"];
                this.columnSurchargeRate = base.Columns["SurchargeRate"];
                this.columnSurchargeDate = base.Columns["SurchargeDate"];
                this.columnSurchargeMonth = base.Columns["SurchargeMonth"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSurchargeID = new global::System.Data.DataColumn("SurchargeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurchargeID);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnFinishID = new global::System.Data.DataColumn("FinishID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishID);
                this.columnSurchargeRate = new global::System.Data.DataColumn("SurchargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurchargeRate);
                this.columnSurchargeDate = new global::System.Data.DataColumn("SurchargeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurchargeDate);
                this.columnSurchargeMonth = new global::System.Data.DataColumn("SurchargeMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurchargeMonth);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSurchargeID}, true));
                this.columnSurchargeID.AllowDBNull = false;
                this.columnSurchargeID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblRow NewSurchargeRateTblRow() {
                return ((SurchargeRateTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SurchargeRateTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SurchargeRateTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SurchargeRateTblRowChanged != null)) {
                    this.SurchargeRateTblRowChanged(this, new SurchargeRateTblRowChangeEvent(((SurchargeRateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SurchargeRateTblRowChanging != null)) {
                    this.SurchargeRateTblRowChanging(this, new SurchargeRateTblRowChangeEvent(((SurchargeRateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SurchargeRateTblRowDeleted != null)) {
                    this.SurchargeRateTblRowDeleted(this, new SurchargeRateTblRowChangeEvent(((SurchargeRateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SurchargeRateTblRowDeleting != null)) {
                    this.SurchargeRateTblRowDeleting(this, new SurchargeRateTblRowChangeEvent(((SurchargeRateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSurchargeRateTblRow(SurchargeRateTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SurchargeRateTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContBundleTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnContainerBundleID;
            
            private global::System.Data.DataColumn columnContID;
            
            private global::System.Data.DataColumn columnPOItemNumber;
            
            private global::System.Data.DataColumn columnBundleSeqNumber;
            
            private global::System.Data.DataColumn columnEnglishShipQty;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnHeat;
            
            private global::System.Data.DataColumn columnMetricShipQty;
            
            private global::System.Data.DataColumn columnBayNumber;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnPickupTerminal;
            
            private global::System.Data.DataColumn columnProofOfDelivery;
            
            private global::System.Data.DataColumn columnEMInvoiceNumber;
            
            private global::System.Data.DataColumn columnAuxKey1;
            
            private global::System.Data.DataColumn columnAuxKey2;
            
            private global::System.Data.DataColumn columnMillInvoiceDate;
            
            private global::System.Data.DataColumn columnBundleAlloySurcharge;
            
            private global::System.Data.DataColumn columnBundleScrapSurcharge;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblDataTable() {
                this.TableName = "ContBundleTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContBundleTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContBundleTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerBundleIDColumn {
                get {
                    return this.columnContainerBundleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContIDColumn {
                get {
                    return this.columnContID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POItemNumberColumn {
                get {
                    return this.columnPOItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundleSeqNumberColumn {
                get {
                    return this.columnBundleSeqNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnglishShipQtyColumn {
                get {
                    return this.columnEnglishShipQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeatColumn {
                get {
                    return this.columnHeat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MetricShipQtyColumn {
                get {
                    return this.columnMetricShipQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BayNumberColumn {
                get {
                    return this.columnBayNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupTerminalColumn {
                get {
                    return this.columnPickupTerminal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProofOfDeliveryColumn {
                get {
                    return this.columnProofOfDelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMInvoiceNumberColumn {
                get {
                    return this.columnEMInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuxKey1Column {
                get {
                    return this.columnAuxKey1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuxKey2Column {
                get {
                    return this.columnAuxKey2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillInvoiceDateColumn {
                get {
                    return this.columnMillInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundleAlloySurchargeColumn {
                get {
                    return this.columnBundleAlloySurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BundleScrapSurchargeColumn {
                get {
                    return this.columnBundleScrapSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow this[int index] {
                get {
                    return ((ContBundleTblRow)(this.Rows[index]));
                }
            }
            
            public event ContBundleTblRowChangeEventHandler ContBundleTblRowChanging;
            
            public event ContBundleTblRowChangeEventHandler ContBundleTblRowChanged;
            
            public event ContBundleTblRowChangeEventHandler ContBundleTblRowDeleting;
            
            public event ContBundleTblRowChangeEventHandler ContBundleTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContBundleTblRow(ContBundleTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow AddContBundleTblRow(
                        int ContainerBundleID, 
                        ContainerTblRow parentContainerTblRowBytblContainertblContPOItem2, 
                        POItemTblRow parentPOItemTblRowBytblPOItem2tblContPOItem2, 
                        int BundleSeqNumber, 
                        decimal EnglishShipQty, 
                        string InvoiceNumber, 
                        string Heat, 
                        decimal MetricShipQty, 
                        string BayNumber, 
                        System.DateTime PickupDate, 
                        string PickupTerminal, 
                        string ProofOfDelivery, 
                        string EMInvoiceNumber, 
                        int AuxKey1, 
                        int AuxKey2, 
                        System.DateTime MillInvoiceDate, 
                        decimal BundleAlloySurcharge, 
                        decimal BundleScrapSurcharge) {
                ContBundleTblRow rowContBundleTblRow = ((ContBundleTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ContainerBundleID,
                        null,
                        null,
                        BundleSeqNumber,
                        EnglishShipQty,
                        InvoiceNumber,
                        Heat,
                        MetricShipQty,
                        BayNumber,
                        PickupDate,
                        PickupTerminal,
                        ProofOfDelivery,
                        EMInvoiceNumber,
                        AuxKey1,
                        AuxKey2,
                        MillInvoiceDate,
                        BundleAlloySurcharge,
                        BundleScrapSurcharge};
                if ((parentContainerTblRowBytblContainertblContPOItem2 != null)) {
                    columnValuesArray[1] = parentContainerTblRowBytblContainertblContPOItem2[0];
                }
                if ((parentPOItemTblRowBytblPOItem2tblContPOItem2 != null)) {
                    columnValuesArray[2] = parentPOItemTblRowBytblPOItem2tblContPOItem2[0];
                }
                rowContBundleTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContBundleTblRow);
                return rowContBundleTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow FindByContainerBundleID(int ContainerBundleID) {
                return ((ContBundleTblRow)(this.Rows.Find(new object[] {
                            ContainerBundleID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContBundleTblDataTable cln = ((ContBundleTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContBundleTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnContainerBundleID = base.Columns["ContainerBundleID"];
                this.columnContID = base.Columns["ContID"];
                this.columnPOItemNumber = base.Columns["POItemNumber"];
                this.columnBundleSeqNumber = base.Columns["BundleSeqNumber"];
                this.columnEnglishShipQty = base.Columns["EnglishShipQty"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnHeat = base.Columns["Heat"];
                this.columnMetricShipQty = base.Columns["MetricShipQty"];
                this.columnBayNumber = base.Columns["BayNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnPickupTerminal = base.Columns["PickupTerminal"];
                this.columnProofOfDelivery = base.Columns["ProofOfDelivery"];
                this.columnEMInvoiceNumber = base.Columns["EMInvoiceNumber"];
                this.columnAuxKey1 = base.Columns["AuxKey1"];
                this.columnAuxKey2 = base.Columns["AuxKey2"];
                this.columnMillInvoiceDate = base.Columns["MillInvoiceDate"];
                this.columnBundleAlloySurcharge = base.Columns["BundleAlloySurcharge"];
                this.columnBundleScrapSurcharge = base.Columns["BundleScrapSurcharge"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnContainerBundleID = new global::System.Data.DataColumn("ContainerBundleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerBundleID);
                this.columnContID = new global::System.Data.DataColumn("ContID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContID);
                this.columnPOItemNumber = new global::System.Data.DataColumn("POItemNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOItemNumber);
                this.columnBundleSeqNumber = new global::System.Data.DataColumn("BundleSeqNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleSeqNumber);
                this.columnEnglishShipQty = new global::System.Data.DataColumn("EnglishShipQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnglishShipQty);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnHeat = new global::System.Data.DataColumn("Heat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeat);
                this.columnMetricShipQty = new global::System.Data.DataColumn("MetricShipQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMetricShipQty);
                this.columnBayNumber = new global::System.Data.DataColumn("BayNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBayNumber);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnPickupTerminal = new global::System.Data.DataColumn("PickupTerminal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupTerminal);
                this.columnProofOfDelivery = new global::System.Data.DataColumn("ProofOfDelivery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProofOfDelivery);
                this.columnEMInvoiceNumber = new global::System.Data.DataColumn("EMInvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMInvoiceNumber);
                this.columnAuxKey1 = new global::System.Data.DataColumn("AuxKey1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuxKey1);
                this.columnAuxKey2 = new global::System.Data.DataColumn("AuxKey2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuxKey2);
                this.columnMillInvoiceDate = new global::System.Data.DataColumn("MillInvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillInvoiceDate);
                this.columnBundleAlloySurcharge = new global::System.Data.DataColumn("BundleAlloySurcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleAlloySurcharge);
                this.columnBundleScrapSurcharge = new global::System.Data.DataColumn("BundleScrapSurcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleScrapSurcharge);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnContainerBundleID}, true));
                this.columnContainerBundleID.AllowDBNull = false;
                this.columnContainerBundleID.Unique = true;
                this.columnInvoiceNumber.MaxLength = 50;
                this.columnHeat.MaxLength = 50;
                this.columnBayNumber.MaxLength = 50;
                this.columnPickupTerminal.MaxLength = 50;
                this.columnProofOfDelivery.MaxLength = 50;
                this.columnEMInvoiceNumber.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow NewContBundleTblRow() {
                return ((ContBundleTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContBundleTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContBundleTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContBundleTblRowChanged != null)) {
                    this.ContBundleTblRowChanged(this, new ContBundleTblRowChangeEvent(((ContBundleTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContBundleTblRowChanging != null)) {
                    this.ContBundleTblRowChanging(this, new ContBundleTblRowChangeEvent(((ContBundleTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContBundleTblRowDeleted != null)) {
                    this.ContBundleTblRowDeleted(this, new ContBundleTblRowChangeEvent(((ContBundleTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContBundleTblRowDeleting != null)) {
                    this.ContBundleTblRowDeleting(this, new ContBundleTblRowChangeEvent(((ContBundleTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContBundleTblRow(ContBundleTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContBundleTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KeyNumberTbleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntblName;
            
            private global::System.Data.DataColumn columnnextKeyNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleDataTable() {
                this.TableName = "KeyNumberTble";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KeyNumberTbleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KeyNumberTbleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tblNameColumn {
                get {
                    return this.columntblName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nextKeyNumberColumn {
                get {
                    return this.columnnextKeyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleRow this[int index] {
                get {
                    return ((KeyNumberTbleRow)(this.Rows[index]));
                }
            }
            
            public event KeyNumberTbleRowChangeEventHandler KeyNumberTbleRowChanging;
            
            public event KeyNumberTbleRowChangeEventHandler KeyNumberTbleRowChanged;
            
            public event KeyNumberTbleRowChangeEventHandler KeyNumberTbleRowDeleting;
            
            public event KeyNumberTbleRowChangeEventHandler KeyNumberTbleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKeyNumberTbleRow(KeyNumberTbleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleRow AddKeyNumberTbleRow(string tblName, int nextKeyNumber) {
                KeyNumberTbleRow rowKeyNumberTbleRow = ((KeyNumberTbleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        tblName,
                        nextKeyNumber};
                rowKeyNumberTbleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKeyNumberTbleRow);
                return rowKeyNumberTbleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleRow FindBytblName(string tblName) {
                return ((KeyNumberTbleRow)(this.Rows.Find(new object[] {
                            tblName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KeyNumberTbleDataTable cln = ((KeyNumberTbleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KeyNumberTbleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntblName = base.Columns["tblName"];
                this.columnnextKeyNumber = base.Columns["nextKeyNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntblName = new global::System.Data.DataColumn("tblName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntblName);
                this.columnnextKeyNumber = new global::System.Data.DataColumn("nextKeyNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnextKeyNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columntblName}, true));
                this.columntblName.AllowDBNull = false;
                this.columntblName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleRow NewKeyNumberTbleRow() {
                return ((KeyNumberTbleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KeyNumberTbleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KeyNumberTbleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KeyNumberTbleRowChanged != null)) {
                    this.KeyNumberTbleRowChanged(this, new KeyNumberTbleRowChangeEvent(((KeyNumberTbleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KeyNumberTbleRowChanging != null)) {
                    this.KeyNumberTbleRowChanging(this, new KeyNumberTbleRowChangeEvent(((KeyNumberTbleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KeyNumberTbleRowDeleted != null)) {
                    this.KeyNumberTbleRowDeleted(this, new KeyNumberTbleRowChangeEvent(((KeyNumberTbleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KeyNumberTbleRowDeleting != null)) {
                    this.KeyNumberTbleRowDeleting(this, new KeyNumberTbleRowChangeEvent(((KeyNumberTbleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKeyNumberTbleRow(KeyNumberTbleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KeyNumberTbleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentTermsTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTermsID;
            
            private global::System.Data.DataColumn columnTerms;
            
            private global::System.Data.DataColumn columnTermsDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblDataTable() {
                this.TableName = "PaymentTermsTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentTermsTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentTermsTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsIDColumn {
                get {
                    return this.columnTermsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsColumn {
                get {
                    return this.columnTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsDescColumn {
                get {
                    return this.columnTermsDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblRow this[int index] {
                get {
                    return ((PaymentTermsTblRow)(this.Rows[index]));
                }
            }
            
            public event PaymentTermsTblRowChangeEventHandler PaymentTermsTblRowChanging;
            
            public event PaymentTermsTblRowChangeEventHandler PaymentTermsTblRowChanged;
            
            public event PaymentTermsTblRowChangeEventHandler PaymentTermsTblRowDeleting;
            
            public event PaymentTermsTblRowChangeEventHandler PaymentTermsTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentTermsTblRow(PaymentTermsTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblRow AddPaymentTermsTblRow(int TermsID, string Terms, string TermsDesc) {
                PaymentTermsTblRow rowPaymentTermsTblRow = ((PaymentTermsTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TermsID,
                        Terms,
                        TermsDesc};
                rowPaymentTermsTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentTermsTblRow);
                return rowPaymentTermsTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblRow FindByTermsID(int TermsID) {
                return ((PaymentTermsTblRow)(this.Rows.Find(new object[] {
                            TermsID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentTermsTblDataTable cln = ((PaymentTermsTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentTermsTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTermsID = base.Columns["TermsID"];
                this.columnTerms = base.Columns["Terms"];
                this.columnTermsDesc = base.Columns["TermsDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTermsID = new global::System.Data.DataColumn("TermsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermsID);
                this.columnTerms = new global::System.Data.DataColumn("Terms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerms);
                this.columnTermsDesc = new global::System.Data.DataColumn("TermsDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermsDesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey2", new global::System.Data.DataColumn[] {
                                this.columnTermsID}, true));
                this.columnTermsID.AllowDBNull = false;
                this.columnTermsID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblRow NewPaymentTermsTblRow() {
                return ((PaymentTermsTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentTermsTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentTermsTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentTermsTblRowChanged != null)) {
                    this.PaymentTermsTblRowChanged(this, new PaymentTermsTblRowChangeEvent(((PaymentTermsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentTermsTblRowChanging != null)) {
                    this.PaymentTermsTblRowChanging(this, new PaymentTermsTblRowChangeEvent(((PaymentTermsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentTermsTblRowDeleted != null)) {
                    this.PaymentTermsTblRowDeleted(this, new PaymentTermsTblRowChangeEvent(((PaymentTermsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentTermsTblRowDeleting != null)) {
                    this.PaymentTermsTblRowDeleting(this, new PaymentTermsTblRowChangeEvent(((PaymentTermsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentTermsTblRow(PaymentTermsTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentTermsTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShippingCodeTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnShipCodeID;
            
            private global::System.Data.DataColumn columnShipCode;
            
            private global::System.Data.DataColumn columnShipDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblDataTable() {
                this.TableName = "ShippingCodeTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ShippingCodeTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ShippingCodeTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipCodeIDColumn {
                get {
                    return this.columnShipCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipCodeColumn {
                get {
                    return this.columnShipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipDescColumn {
                get {
                    return this.columnShipDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblRow this[int index] {
                get {
                    return ((ShippingCodeTblRow)(this.Rows[index]));
                }
            }
            
            public event ShippingCodeTblRowChangeEventHandler ShippingCodeTblRowChanging;
            
            public event ShippingCodeTblRowChangeEventHandler ShippingCodeTblRowChanged;
            
            public event ShippingCodeTblRowChangeEventHandler ShippingCodeTblRowDeleting;
            
            public event ShippingCodeTblRowChangeEventHandler ShippingCodeTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddShippingCodeTblRow(ShippingCodeTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblRow AddShippingCodeTblRow(int ShipCodeID, string ShipCode, string ShipDesc) {
                ShippingCodeTblRow rowShippingCodeTblRow = ((ShippingCodeTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShipCodeID,
                        ShipCode,
                        ShipDesc};
                rowShippingCodeTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShippingCodeTblRow);
                return rowShippingCodeTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblRow FindByShipCodeID(int ShipCodeID) {
                return ((ShippingCodeTblRow)(this.Rows.Find(new object[] {
                            ShipCodeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ShippingCodeTblDataTable cln = ((ShippingCodeTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShippingCodeTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnShipCodeID = base.Columns["ShipCodeID"];
                this.columnShipCode = base.Columns["ShipCode"];
                this.columnShipDesc = base.Columns["ShipDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnShipCodeID = new global::System.Data.DataColumn("ShipCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipCodeID);
                this.columnShipCode = new global::System.Data.DataColumn("ShipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipCode);
                this.columnShipDesc = new global::System.Data.DataColumn("ShipDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipDesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey3", new global::System.Data.DataColumn[] {
                                this.columnShipCodeID}, true));
                this.columnShipCodeID.AllowDBNull = false;
                this.columnShipCodeID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblRow NewShippingCodeTblRow() {
                return ((ShippingCodeTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShippingCodeTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ShippingCodeTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShippingCodeTblRowChanged != null)) {
                    this.ShippingCodeTblRowChanged(this, new ShippingCodeTblRowChangeEvent(((ShippingCodeTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShippingCodeTblRowChanging != null)) {
                    this.ShippingCodeTblRowChanging(this, new ShippingCodeTblRowChangeEvent(((ShippingCodeTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShippingCodeTblRowDeleted != null)) {
                    this.ShippingCodeTblRowDeleted(this, new ShippingCodeTblRowChangeEvent(((ShippingCodeTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShippingCodeTblRowDeleting != null)) {
                    this.ShippingCodeTblRowDeleting(this, new ShippingCodeTblRowChangeEvent(((ShippingCodeTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveShippingCodeTblRow(ShippingCodeTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShippingCodeTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnCompID;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnCustRate;
            
            private global::System.Data.DataColumn columnCommRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblDataTable() {
                this.TableName = "ItemTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompIDColumn {
                get {
                    return this.columnCompID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustRateColumn {
                get {
                    return this.columnCustRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommRateColumn {
                get {
                    return this.columnCommRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRow this[int index] {
                get {
                    return ((ItemTblRow)(this.Rows[index]));
                }
            }
            
            public event ItemTblRowChangeEventHandler ItemTblRowChanging;
            
            public event ItemTblRowChangeEventHandler ItemTblRowChanged;
            
            public event ItemTblRowChangeEventHandler ItemTblRowDeleting;
            
            public event ItemTblRowChangeEventHandler ItemTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemTblRow(ItemTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRow AddItemTblRow(int ItemID, int CompID, string ItemName, string ItemDesc, decimal CustRate, decimal CommRate) {
                ItemTblRow rowItemTblRow = ((ItemTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemID,
                        CompID,
                        ItemName,
                        ItemDesc,
                        CustRate,
                        CommRate};
                rowItemTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemTblRow);
                return rowItemTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRow FindByItemID(int ItemID) {
                return ((ItemTblRow)(this.Rows.Find(new object[] {
                            ItemID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemTblDataTable cln = ((ItemTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemID = base.Columns["ItemID"];
                this.columnCompID = base.Columns["CompID"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnCustRate = base.Columns["CustRate"];
                this.columnCommRate = base.Columns["CommRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnCompID = new global::System.Data.DataColumn("CompID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnCustRate = new global::System.Data.DataColumn("CustRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustRate);
                this.columnCommRate = new global::System.Data.DataColumn("CommRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey8", new global::System.Data.DataColumn[] {
                                this.columnItemID}, true));
                this.columnItemID.AllowDBNull = false;
                this.columnItemID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRow NewItemTblRow() {
                return ((ItemTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemTblRowChanged != null)) {
                    this.ItemTblRowChanged(this, new ItemTblRowChangeEvent(((ItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemTblRowChanging != null)) {
                    this.ItemTblRowChanging(this, new ItemTblRowChangeEvent(((ItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemTblRowDeleted != null)) {
                    this.ItemTblRowDeleted(this, new ItemTblRowChangeEvent(((ItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemTblRowDeleting != null)) {
                    this.ItemTblRowDeleting(this, new ItemTblRowChangeEvent(((ItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemTblRow(ItemTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POFileTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOID;
            
            private global::System.Data.DataColumn columnFileID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblDataTable() {
                this.TableName = "POFileTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POFileTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POFileTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileIDColumn {
                get {
                    return this.columnFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRow this[int index] {
                get {
                    return ((POFileTblRow)(this.Rows[index]));
                }
            }
            
            public event POFileTblRowChangeEventHandler POFileTblRowChanging;
            
            public event POFileTblRowChangeEventHandler POFileTblRowChanged;
            
            public event POFileTblRowChangeEventHandler POFileTblRowDeleting;
            
            public event POFileTblRowChangeEventHandler POFileTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOFileTblRow(POFileTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRow AddPOFileTblRow(int POID, FileTblRow parentFileTblRowByFileTblPOFileTbl) {
                POFileTblRow rowPOFileTblRow = ((POFileTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        POID,
                        null};
                if ((parentFileTblRowByFileTblPOFileTbl != null)) {
                    columnValuesArray[1] = parentFileTblRowByFileTblPOFileTbl[0];
                }
                rowPOFileTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOFileTblRow);
                return rowPOFileTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRow FindByPOIDFileID(int POID, int FileID) {
                return ((POFileTblRow)(this.Rows.Find(new object[] {
                            POID,
                            FileID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POFileTblDataTable cln = ((POFileTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POFileTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOID = base.Columns["POID"];
                this.columnFileID = base.Columns["FileID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOID = new global::System.Data.DataColumn("POID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnFileID = new global::System.Data.DataColumn("FileID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey9", new global::System.Data.DataColumn[] {
                                this.columnPOID,
                                this.columnFileID}, true));
                this.columnPOID.AllowDBNull = false;
                this.columnFileID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRow NewPOFileTblRow() {
                return ((POFileTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POFileTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POFileTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POFileTblRowChanged != null)) {
                    this.POFileTblRowChanged(this, new POFileTblRowChangeEvent(((POFileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POFileTblRowChanging != null)) {
                    this.POFileTblRowChanging(this, new POFileTblRowChangeEvent(((POFileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POFileTblRowDeleted != null)) {
                    this.POFileTblRowDeleted(this, new POFileTblRowChangeEvent(((POFileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POFileTblRowDeleting != null)) {
                    this.POFileTblRowDeleting(this, new POFileTblRowChangeEvent(((POFileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOFileTblRow(POFileTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POFileTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FileTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFileID;
            
            private global::System.Data.DataColumn columnFileName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblDataTable() {
                this.TableName = "FileTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FileTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FileTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileIDColumn {
                get {
                    return this.columnFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileNameColumn {
                get {
                    return this.columnFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRow this[int index] {
                get {
                    return ((FileTblRow)(this.Rows[index]));
                }
            }
            
            public event FileTblRowChangeEventHandler FileTblRowChanging;
            
            public event FileTblRowChangeEventHandler FileTblRowChanged;
            
            public event FileTblRowChangeEventHandler FileTblRowDeleting;
            
            public event FileTblRowChangeEventHandler FileTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFileTblRow(FileTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRow AddFileTblRow(int FileID, string FileName) {
                FileTblRow rowFileTblRow = ((FileTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FileID,
                        FileName};
                rowFileTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFileTblRow);
                return rowFileTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRow FindByFileID(int FileID) {
                return ((FileTblRow)(this.Rows.Find(new object[] {
                            FileID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FileTblDataTable cln = ((FileTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FileTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFileID = base.Columns["FileID"];
                this.columnFileName = base.Columns["FileName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFileID = new global::System.Data.DataColumn("FileID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileID);
                this.columnFileName = new global::System.Data.DataColumn("FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey10", new global::System.Data.DataColumn[] {
                                this.columnFileID}, true));
                this.columnFileID.AllowDBNull = false;
                this.columnFileID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRow NewFileTblRow() {
                return ((FileTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FileTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FileTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FileTblRowChanged != null)) {
                    this.FileTblRowChanged(this, new FileTblRowChangeEvent(((FileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FileTblRowChanging != null)) {
                    this.FileTblRowChanging(this, new FileTblRowChangeEvent(((FileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FileTblRowDeleted != null)) {
                    this.FileTblRowDeleted(this, new FileTblRowChangeEvent(((FileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FileTblRowDeleting != null)) {
                    this.FileTblRowDeleting(this, new FileTblRowChangeEvent(((FileTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFileTblRow(FileTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FileTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CountryTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnCountryName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblDataTable() {
                this.TableName = "CountryTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CountryTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CountryTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryNameColumn {
                get {
                    return this.columnCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRow this[int index] {
                get {
                    return ((CountryTblRow)(this.Rows[index]));
                }
            }
            
            public event CountryTblRowChangeEventHandler CountryTblRowChanging;
            
            public event CountryTblRowChangeEventHandler CountryTblRowChanged;
            
            public event CountryTblRowChangeEventHandler CountryTblRowDeleting;
            
            public event CountryTblRowChangeEventHandler CountryTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCountryTblRow(CountryTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRow AddCountryTblRow(int CountryID, string CountryName) {
                CountryTblRow rowCountryTblRow = ((CountryTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CountryID,
                        CountryName};
                rowCountryTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCountryTblRow);
                return rowCountryTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRow FindByCountryID(int CountryID) {
                return ((CountryTblRow)(this.Rows.Find(new object[] {
                            CountryID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CountryTblDataTable cln = ((CountryTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CountryTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCountryID = base.Columns["CountryID"];
                this.columnCountryName = base.Columns["CountryName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnCountryName = new global::System.Data.DataColumn("CountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey14", new global::System.Data.DataColumn[] {
                                this.columnCountryID}, true));
                this.columnCountryID.AllowDBNull = false;
                this.columnCountryID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRow NewCountryTblRow() {
                return ((CountryTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CountryTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CountryTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CountryTblRowChanged != null)) {
                    this.CountryTblRowChanged(this, new CountryTblRowChangeEvent(((CountryTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CountryTblRowChanging != null)) {
                    this.CountryTblRowChanging(this, new CountryTblRowChangeEvent(((CountryTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CountryTblRowDeleted != null)) {
                    this.CountryTblRowDeleted(this, new CountryTblRowChangeEvent(((CountryTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CountryTblRowDeleting != null)) {
                    this.CountryTblRowDeleting(this, new CountryTblRowChangeEvent(((CountryTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCountryTblRow(CountryTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CountryTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContactsTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnContactID;
            
            private global::System.Data.DataColumn columnCompID;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEMail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblDataTable() {
                this.TableName = "ContactsTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContactsTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContactsTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactIDColumn {
                get {
                    return this.columnContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompIDColumn {
                get {
                    return this.columnCompID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblRow this[int index] {
                get {
                    return ((ContactsTblRow)(this.Rows[index]));
                }
            }
            
            public event ContactsTblRowChangeEventHandler ContactsTblRowChanging;
            
            public event ContactsTblRowChangeEventHandler ContactsTblRowChanged;
            
            public event ContactsTblRowChangeEventHandler ContactsTblRowDeleting;
            
            public event ContactsTblRowChangeEventHandler ContactsTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContactsTblRow(ContactsTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblRow AddContactsTblRow(int ContactID, int CompID, string LastName, string FirstName, string Phone, string Fax, string EMail) {
                ContactsTblRow rowContactsTblRow = ((ContactsTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ContactID,
                        CompID,
                        LastName,
                        FirstName,
                        Phone,
                        Fax,
                        EMail};
                rowContactsTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContactsTblRow);
                return rowContactsTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblRow FindByContactID(int ContactID) {
                return ((ContactsTblRow)(this.Rows.Find(new object[] {
                            ContactID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContactsTblDataTable cln = ((ContactsTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContactsTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnContactID = base.Columns["ContactID"];
                this.columnCompID = base.Columns["CompID"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnPhone = base.Columns["Phone"];
                this.columnFax = base.Columns["Fax"];
                this.columnEMail = base.Columns["EMail"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnContactID = new global::System.Data.DataColumn("ContactID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactID);
                this.columnCompID = new global::System.Data.DataColumn("CompID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompID);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey20", new global::System.Data.DataColumn[] {
                                this.columnContactID}, true));
                this.columnContactID.AllowDBNull = false;
                this.columnContactID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblRow NewContactsTblRow() {
                return ((ContactsTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContactsTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContactsTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContactsTblRowChanged != null)) {
                    this.ContactsTblRowChanged(this, new ContactsTblRowChangeEvent(((ContactsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContactsTblRowChanging != null)) {
                    this.ContactsTblRowChanging(this, new ContactsTblRowChangeEvent(((ContactsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContactsTblRowDeleted != null)) {
                    this.ContactsTblRowDeleted(this, new ContactsTblRowChangeEvent(((ContactsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContactsTblRowDeleting != null)) {
                    this.ContactsTblRowDeleting(this, new ContactsTblRowChangeEvent(((ContactsTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContactsTblRow(ContactsTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContactsTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContainerTemplateTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnContainerTemplateID;
            
            private global::System.Data.DataColumn columnExcelFile;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblDataTable() {
                this.TableName = "ContainerTemplateTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContainerTemplateTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContainerTemplateTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerTemplateIDColumn {
                get {
                    return this.columnContainerTemplateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcelFileColumn {
                get {
                    return this.columnExcelFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblRow this[int index] {
                get {
                    return ((ContainerTemplateTblRow)(this.Rows[index]));
                }
            }
            
            public event ContainerTemplateTblRowChangeEventHandler ContainerTemplateTblRowChanging;
            
            public event ContainerTemplateTblRowChangeEventHandler ContainerTemplateTblRowChanged;
            
            public event ContainerTemplateTblRowChangeEventHandler ContainerTemplateTblRowDeleting;
            
            public event ContainerTemplateTblRowChangeEventHandler ContainerTemplateTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContainerTemplateTblRow(ContainerTemplateTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblRow AddContainerTemplateTblRow(int ContainerTemplateID, string ExcelFile, string Description) {
                ContainerTemplateTblRow rowContainerTemplateTblRow = ((ContainerTemplateTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ContainerTemplateID,
                        ExcelFile,
                        Description};
                rowContainerTemplateTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContainerTemplateTblRow);
                return rowContainerTemplateTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblRow FindByContainerTemplateID(int ContainerTemplateID) {
                return ((ContainerTemplateTblRow)(this.Rows.Find(new object[] {
                            ContainerTemplateID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContainerTemplateTblDataTable cln = ((ContainerTemplateTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContainerTemplateTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnContainerTemplateID = base.Columns["ContainerTemplateID"];
                this.columnExcelFile = base.Columns["ExcelFile"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnContainerTemplateID = new global::System.Data.DataColumn("ContainerTemplateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerTemplateID);
                this.columnExcelFile = new global::System.Data.DataColumn("ExcelFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcelFile);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey28", new global::System.Data.DataColumn[] {
                                this.columnContainerTemplateID}, true));
                this.columnContainerTemplateID.AllowDBNull = false;
                this.columnContainerTemplateID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblRow NewContainerTemplateTblRow() {
                return ((ContainerTemplateTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContainerTemplateTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContainerTemplateTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContainerTemplateTblRowChanged != null)) {
                    this.ContainerTemplateTblRowChanged(this, new ContainerTemplateTblRowChangeEvent(((ContainerTemplateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContainerTemplateTblRowChanging != null)) {
                    this.ContainerTemplateTblRowChanging(this, new ContainerTemplateTblRowChangeEvent(((ContainerTemplateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContainerTemplateTblRowDeleted != null)) {
                    this.ContainerTemplateTblRowDeleted(this, new ContainerTemplateTblRowChangeEvent(((ContainerTemplateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContainerTemplateTblRowDeleting != null)) {
                    this.ContainerTemplateTblRowDeleting(this, new ContainerTemplateTblRowChangeEvent(((ContainerTemplateTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContainerTemplateTblRow(ContainerTemplateTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContainerTemplateTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BOLItemTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBOLID;
            
            private global::System.Data.DataColumn columnContainerBundleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblDataTable() {
                this.TableName = "BOLItemTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOLItemTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BOLItemTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOLIDColumn {
                get {
                    return this.columnBOLID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerBundleIDColumn {
                get {
                    return this.columnContainerBundleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRow this[int index] {
                get {
                    return ((BOLItemTblRow)(this.Rows[index]));
                }
            }
            
            public event BOLItemTblRowChangeEventHandler BOLItemTblRowChanging;
            
            public event BOLItemTblRowChangeEventHandler BOLItemTblRowChanged;
            
            public event BOLItemTblRowChangeEventHandler BOLItemTblRowDeleting;
            
            public event BOLItemTblRowChangeEventHandler BOLItemTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBOLItemTblRow(BOLItemTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRow AddBOLItemTblRow(BOLTblRow parentBOLTblRowByBOLTblBOLItemTbl, int ContainerBundleID) {
                BOLItemTblRow rowBOLItemTblRow = ((BOLItemTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ContainerBundleID};
                if ((parentBOLTblRowByBOLTblBOLItemTbl != null)) {
                    columnValuesArray[0] = parentBOLTblRowByBOLTblBOLItemTbl[0];
                }
                rowBOLItemTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBOLItemTblRow);
                return rowBOLItemTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRow FindByBOLIDContainerBundleID(int BOLID, int ContainerBundleID) {
                return ((BOLItemTblRow)(this.Rows.Find(new object[] {
                            BOLID,
                            ContainerBundleID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BOLItemTblDataTable cln = ((BOLItemTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BOLItemTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOLID = base.Columns["BOLID"];
                this.columnContainerBundleID = base.Columns["ContainerBundleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOLID = new global::System.Data.DataColumn("BOLID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOLID);
                this.columnContainerBundleID = new global::System.Data.DataColumn("ContainerBundleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerBundleID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey30", new global::System.Data.DataColumn[] {
                                this.columnBOLID,
                                this.columnContainerBundleID}, true));
                this.columnBOLID.AllowDBNull = false;
                this.columnContainerBundleID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRow NewBOLItemTblRow() {
                return ((BOLItemTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BOLItemTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BOLItemTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BOLItemTblRowChanged != null)) {
                    this.BOLItemTblRowChanged(this, new BOLItemTblRowChangeEvent(((BOLItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BOLItemTblRowChanging != null)) {
                    this.BOLItemTblRowChanging(this, new BOLItemTblRowChangeEvent(((BOLItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BOLItemTblRowDeleted != null)) {
                    this.BOLItemTblRowDeleted(this, new BOLItemTblRowChangeEvent(((BOLItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BOLItemTblRowDeleting != null)) {
                    this.BOLItemTblRowDeleting(this, new BOLItemTblRowChangeEvent(((BOLItemTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBOLItemTblRow(BOLItemTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BOLItemTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FinishTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFinishID;
            
            private global::System.Data.DataColumn columnFinishType;
            
            private global::System.Data.DataColumn columnCommissionRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblDataTable() {
                this.TableName = "FinishTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinishTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FinishTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinishIDColumn {
                get {
                    return this.columnFinishID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinishTypeColumn {
                get {
                    return this.columnFinishType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommissionRateColumn {
                get {
                    return this.columnCommissionRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblRow this[int index] {
                get {
                    return ((FinishTblRow)(this.Rows[index]));
                }
            }
            
            public event FinishTblRowChangeEventHandler FinishTblRowChanging;
            
            public event FinishTblRowChangeEventHandler FinishTblRowChanged;
            
            public event FinishTblRowChangeEventHandler FinishTblRowDeleting;
            
            public event FinishTblRowChangeEventHandler FinishTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFinishTblRow(FinishTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblRow AddFinishTblRow(int FinishID, string FinishType, decimal CommissionRate) {
                FinishTblRow rowFinishTblRow = ((FinishTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FinishID,
                        FinishType,
                        CommissionRate};
                rowFinishTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinishTblRow);
                return rowFinishTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblRow FindByFinishID(int FinishID) {
                return ((FinishTblRow)(this.Rows.Find(new object[] {
                            FinishID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FinishTblDataTable cln = ((FinishTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FinishTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFinishID = base.Columns["FinishID"];
                this.columnFinishType = base.Columns["FinishType"];
                this.columnCommissionRate = base.Columns["CommissionRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFinishID = new global::System.Data.DataColumn("FinishID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishID);
                this.columnFinishType = new global::System.Data.DataColumn("FinishType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishType);
                this.columnCommissionRate = new global::System.Data.DataColumn("CommissionRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommissionRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey34", new global::System.Data.DataColumn[] {
                                this.columnFinishID}, true));
                this.columnFinishID.AllowDBNull = false;
                this.columnFinishID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblRow NewFinishTblRow() {
                return ((FinishTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FinishTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FinishTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FinishTblRowChanged != null)) {
                    this.FinishTblRowChanged(this, new FinishTblRowChangeEvent(((FinishTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FinishTblRowChanging != null)) {
                    this.FinishTblRowChanging(this, new FinishTblRowChangeEvent(((FinishTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FinishTblRowDeleted != null)) {
                    this.FinishTblRowDeleted(this, new FinishTblRowChangeEvent(((FinishTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FinishTblRowDeleting != null)) {
                    this.FinishTblRowDeleting(this, new FinishTblRowChangeEvent(((FinishTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFinishTblRow(FinishTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FinishTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CurrencyTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblDataTable() {
                this.TableName = "CurrencyTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CurrencyTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CurrencyTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblRow this[int index] {
                get {
                    return ((CurrencyTblRow)(this.Rows[index]));
                }
            }
            
            public event CurrencyTblRowChangeEventHandler CurrencyTblRowChanging;
            
            public event CurrencyTblRowChangeEventHandler CurrencyTblRowChanged;
            
            public event CurrencyTblRowChangeEventHandler CurrencyTblRowDeleting;
            
            public event CurrencyTblRowChangeEventHandler CurrencyTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCurrencyTblRow(CurrencyTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblRow AddCurrencyTblRow(int CurrencyID, string CurrencyName) {
                CurrencyTblRow rowCurrencyTblRow = ((CurrencyTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CurrencyID,
                        CurrencyName};
                rowCurrencyTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCurrencyTblRow);
                return rowCurrencyTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblRow FindByCurrencyID(int CurrencyID) {
                return ((CurrencyTblRow)(this.Rows.Find(new object[] {
                            CurrencyID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CurrencyTblDataTable cln = ((CurrencyTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CurrencyTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey41", new global::System.Data.DataColumn[] {
                                this.columnCurrencyID}, true));
                this.columnCurrencyID.AllowDBNull = false;
                this.columnCurrencyID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblRow NewCurrencyTblRow() {
                return ((CurrencyTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CurrencyTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CurrencyTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CurrencyTblRowChanged != null)) {
                    this.CurrencyTblRowChanged(this, new CurrencyTblRowChangeEvent(((CurrencyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CurrencyTblRowChanging != null)) {
                    this.CurrencyTblRowChanging(this, new CurrencyTblRowChangeEvent(((CurrencyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CurrencyTblRowDeleted != null)) {
                    this.CurrencyTblRowDeleted(this, new CurrencyTblRowChangeEvent(((CurrencyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CurrencyTblRowDeleting != null)) {
                    this.CurrencyTblRowDeleting(this, new CurrencyTblRowChangeEvent(((CurrencyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCurrencyTblRow(CurrencyTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CurrencyTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TreatmentTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTreatmentID;
            
            private global::System.Data.DataColumn columnTreatmentType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblDataTable() {
                this.TableName = "TreatmentTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TreatmentTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TreatmentTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TreatmentIDColumn {
                get {
                    return this.columnTreatmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TreatmentTypeColumn {
                get {
                    return this.columnTreatmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblRow this[int index] {
                get {
                    return ((TreatmentTblRow)(this.Rows[index]));
                }
            }
            
            public event TreatmentTblRowChangeEventHandler TreatmentTblRowChanging;
            
            public event TreatmentTblRowChangeEventHandler TreatmentTblRowChanged;
            
            public event TreatmentTblRowChangeEventHandler TreatmentTblRowDeleting;
            
            public event TreatmentTblRowChangeEventHandler TreatmentTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTreatmentTblRow(TreatmentTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblRow AddTreatmentTblRow(int TreatmentID, string TreatmentType) {
                TreatmentTblRow rowTreatmentTblRow = ((TreatmentTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TreatmentID,
                        TreatmentType};
                rowTreatmentTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTreatmentTblRow);
                return rowTreatmentTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblRow FindByTreatmentID(int TreatmentID) {
                return ((TreatmentTblRow)(this.Rows.Find(new object[] {
                            TreatmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TreatmentTblDataTable cln = ((TreatmentTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TreatmentTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTreatmentID = base.Columns["TreatmentID"];
                this.columnTreatmentType = base.Columns["TreatmentType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTreatmentID = new global::System.Data.DataColumn("TreatmentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatmentID);
                this.columnTreatmentType = new global::System.Data.DataColumn("TreatmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatmentType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey46", new global::System.Data.DataColumn[] {
                                this.columnTreatmentID}, true));
                this.columnTreatmentID.AllowDBNull = false;
                this.columnTreatmentID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblRow NewTreatmentTblRow() {
                return ((TreatmentTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TreatmentTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TreatmentTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TreatmentTblRowChanged != null)) {
                    this.TreatmentTblRowChanged(this, new TreatmentTblRowChangeEvent(((TreatmentTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TreatmentTblRowChanging != null)) {
                    this.TreatmentTblRowChanging(this, new TreatmentTblRowChangeEvent(((TreatmentTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TreatmentTblRowDeleted != null)) {
                    this.TreatmentTblRowDeleted(this, new TreatmentTblRowChangeEvent(((TreatmentTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TreatmentTblRowDeleting != null)) {
                    this.TreatmentTblRowDeleting(this, new TreatmentTblRowChangeEvent(((TreatmentTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTreatmentTblRow(TreatmentTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TreatmentTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BOLTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBOLID;
            
            private global::System.Data.DataColumn columnBOLNumber;
            
            private global::System.Data.DataColumn columnPickupDate;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblDataTable() {
                this.TableName = "BOLTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOLTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BOLTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOLIDColumn {
                get {
                    return this.columnBOLID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOLNumberColumn {
                get {
                    return this.columnBOLNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickupDateColumn {
                get {
                    return this.columnPickupDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRow this[int index] {
                get {
                    return ((BOLTblRow)(this.Rows[index]));
                }
            }
            
            public event BOLTblRowChangeEventHandler BOLTblRowChanging;
            
            public event BOLTblRowChangeEventHandler BOLTblRowChanged;
            
            public event BOLTblRowChangeEventHandler BOLTblRowDeleting;
            
            public event BOLTblRowChangeEventHandler BOLTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBOLTblRow(BOLTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRow AddBOLTblRow(int BOLID, string BOLNumber, System.DateTime PickupDate, string Status) {
                BOLTblRow rowBOLTblRow = ((BOLTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOLID,
                        BOLNumber,
                        PickupDate,
                        Status};
                rowBOLTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBOLTblRow);
                return rowBOLTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRow FindByBOLID(int BOLID) {
                return ((BOLTblRow)(this.Rows.Find(new object[] {
                            BOLID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BOLTblDataTable cln = ((BOLTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BOLTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOLID = base.Columns["BOLID"];
                this.columnBOLNumber = base.Columns["BOLNumber"];
                this.columnPickupDate = base.Columns["PickupDate"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOLID = new global::System.Data.DataColumn("BOLID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOLID);
                this.columnBOLNumber = new global::System.Data.DataColumn("BOLNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOLNumber);
                this.columnPickupDate = new global::System.Data.DataColumn("PickupDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickupDate);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EMDataSetKey29", new global::System.Data.DataColumn[] {
                                this.columnBOLID}, true));
                this.columnBOLID.AllowDBNull = false;
                this.columnBOLID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRow NewBOLTblRow() {
                return ((BOLTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BOLTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BOLTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BOLTblRowChanged != null)) {
                    this.BOLTblRowChanged(this, new BOLTblRowChangeEvent(((BOLTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BOLTblRowChanging != null)) {
                    this.BOLTblRowChanging(this, new BOLTblRowChangeEvent(((BOLTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BOLTblRowDeleted != null)) {
                    this.BOLTblRowDeleted(this, new BOLTblRowChangeEvent(((BOLTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BOLTblRowDeleting != null)) {
                    this.BOLTblRowDeleting(this, new BOLTblRowChangeEvent(((BOLTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBOLTblRow(BOLTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BOLTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LocationTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLocID;
            
            private global::System.Data.DataColumn columnCompID;
            
            private global::System.Data.DataColumn columnLocName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnExcelFile;
            
            private global::System.Data.DataColumn columnATTNString;
            
            private global::System.Data.DataColumn columnCCString;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblDataTable() {
                this.TableName = "LocationTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocationTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LocationTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocIDColumn {
                get {
                    return this.columnLocID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompIDColumn {
                get {
                    return this.columnCompID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocNameColumn {
                get {
                    return this.columnLocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExcelFileColumn {
                get {
                    return this.columnExcelFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTNStringColumn {
                get {
                    return this.columnATTNString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCStringColumn {
                get {
                    return this.columnCCString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow this[int index] {
                get {
                    return ((LocationTblRow)(this.Rows[index]));
                }
            }
            
            public event LocationTblRowChangeEventHandler LocationTblRowChanging;
            
            public event LocationTblRowChangeEventHandler LocationTblRowChanged;
            
            public event LocationTblRowChangeEventHandler LocationTblRowDeleting;
            
            public event LocationTblRowChangeEventHandler LocationTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLocationTblRow(LocationTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow AddLocationTblRow(int LocID, CompanyTblRow parentCompanyTblRowByCompanyTbl_LocationTbl, string LocName, string Address, CountryTblRow parentCountryTblRowByCountryTblLocationTbl, string ExcelFile, string ATTNString, string CCString) {
                LocationTblRow rowLocationTblRow = ((LocationTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LocID,
                        null,
                        LocName,
                        Address,
                        null,
                        ExcelFile,
                        ATTNString,
                        CCString};
                if ((parentCompanyTblRowByCompanyTbl_LocationTbl != null)) {
                    columnValuesArray[1] = parentCompanyTblRowByCompanyTbl_LocationTbl[0];
                }
                if ((parentCountryTblRowByCountryTblLocationTbl != null)) {
                    columnValuesArray[4] = parentCountryTblRowByCountryTblLocationTbl[0];
                }
                rowLocationTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLocationTblRow);
                return rowLocationTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow FindByLocID(int LocID) {
                return ((LocationTblRow)(this.Rows.Find(new object[] {
                            LocID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LocationTblDataTable cln = ((LocationTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LocationTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLocID = base.Columns["LocID"];
                this.columnCompID = base.Columns["CompID"];
                this.columnLocName = base.Columns["LocName"];
                this.columnAddress = base.Columns["Address"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnExcelFile = base.Columns["ExcelFile"];
                this.columnATTNString = base.Columns["ATTNString"];
                this.columnCCString = base.Columns["CCString"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLocID = new global::System.Data.DataColumn("LocID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocID);
                this.columnCompID = new global::System.Data.DataColumn("CompID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompID);
                this.columnLocName = new global::System.Data.DataColumn("LocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnExcelFile = new global::System.Data.DataColumn("ExcelFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcelFile);
                this.columnATTNString = new global::System.Data.DataColumn("ATTNString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTNString);
                this.columnCCString = new global::System.Data.DataColumn("CCString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCString);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("LocationKey", new global::System.Data.DataColumn[] {
                                this.columnLocID}, true));
                this.columnLocID.AllowDBNull = false;
                this.columnLocID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow NewLocationTblRow() {
                return ((LocationTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LocationTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LocationTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LocationTblRowChanged != null)) {
                    this.LocationTblRowChanged(this, new LocationTblRowChangeEvent(((LocationTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LocationTblRowChanging != null)) {
                    this.LocationTblRowChanging(this, new LocationTblRowChangeEvent(((LocationTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LocationTblRowDeleted != null)) {
                    this.LocationTblRowDeleted(this, new LocationTblRowChangeEvent(((LocationTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LocationTblRowDeleting != null)) {
                    this.LocationTblRowDeleting(this, new LocationTblRowChangeEvent(((LocationTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLocationTblRow(LocationTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LocationTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderLogTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMillName;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnPONumber;
            
            private global::System.Data.DataColumn columnMillAcknowledgeNumber;
            
            private global::System.Data.DataColumn columnSheetTons;
            
            private global::System.Data.DataColumn columnSheetDollars;
            
            private global::System.Data.DataColumn columnHRTons;
            
            private global::System.Data.DataColumn columnHRDollars;
            
            private global::System.Data.DataColumn columnCFTons;
            
            private global::System.Data.DataColumn columnCFDollars;
            
            private global::System.Data.DataColumn columnTotalDollars;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnOtherTons;
            
            private global::System.Data.DataColumn columnOtherDollars;
            
            private global::System.Data.DataColumn columnCoilTons;
            
            private global::System.Data.DataColumn columnCoilDollars;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderLogTblDataTable() {
                this.TableName = "OrderLogTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderLogTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderLogTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillNameColumn {
                get {
                    return this.columnMillName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONumberColumn {
                get {
                    return this.columnPONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MillAcknowledgeNumberColumn {
                get {
                    return this.columnMillAcknowledgeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SheetTonsColumn {
                get {
                    return this.columnSheetTons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SheetDollarsColumn {
                get {
                    return this.columnSheetDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRTonsColumn {
                get {
                    return this.columnHRTons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRDollarsColumn {
                get {
                    return this.columnHRDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CFTonsColumn {
                get {
                    return this.columnCFTons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CFDollarsColumn {
                get {
                    return this.columnCFDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDollarsColumn {
                get {
                    return this.columnTotalDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherTonsColumn {
                get {
                    return this.columnOtherTons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherDollarsColumn {
                get {
                    return this.columnOtherDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoilTonsColumn {
                get {
                    return this.columnCoilTons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoilDollarsColumn {
                get {
                    return this.columnCoilDollars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderLogTblRow this[int index] {
                get {
                    return ((OrderLogTblRow)(this.Rows[index]));
                }
            }
            
            public event OrderLogTblRowChangeEventHandler OrderLogTblRowChanging;
            
            public event OrderLogTblRowChangeEventHandler OrderLogTblRowChanged;
            
            public event OrderLogTblRowChangeEventHandler OrderLogTblRowDeleting;
            
            public event OrderLogTblRowChangeEventHandler OrderLogTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderLogTblRow(OrderLogTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderLogTblRow AddOrderLogTblRow(
                        int ID, 
                        string MillName, 
                        System.DateTime Date, 
                        string CustomerName, 
                        string PONumber, 
                        string MillAcknowledgeNumber, 
                        decimal SheetTons, 
                        decimal SheetDollars, 
                        decimal HRTons, 
                        decimal HRDollars, 
                        decimal CFTons, 
                        decimal CFDollars, 
                        decimal TotalDollars, 
                        string InvoiceNumber, 
                        decimal OtherTons, 
                        decimal OtherDollars, 
                        decimal CoilTons, 
                        decimal CoilDollars) {
                OrderLogTblRow rowOrderLogTblRow = ((OrderLogTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        MillName,
                        Date,
                        CustomerName,
                        PONumber,
                        MillAcknowledgeNumber,
                        SheetTons,
                        SheetDollars,
                        HRTons,
                        HRDollars,
                        CFTons,
                        CFDollars,
                        TotalDollars,
                        InvoiceNumber,
                        OtherTons,
                        OtherDollars,
                        CoilTons,
                        CoilDollars};
                rowOrderLogTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderLogTblRow);
                return rowOrderLogTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderLogTblDataTable cln = ((OrderLogTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderLogTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMillName = base.Columns["MillName"];
                this.columnDate = base.Columns["Date"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnPONumber = base.Columns["PONumber"];
                this.columnMillAcknowledgeNumber = base.Columns["MillAcknowledgeNumber"];
                this.columnSheetTons = base.Columns["SheetTons"];
                this.columnSheetDollars = base.Columns["SheetDollars"];
                this.columnHRTons = base.Columns["HRTons"];
                this.columnHRDollars = base.Columns["HRDollars"];
                this.columnCFTons = base.Columns["CFTons"];
                this.columnCFDollars = base.Columns["CFDollars"];
                this.columnTotalDollars = base.Columns["TotalDollars"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnOtherTons = base.Columns["OtherTons"];
                this.columnOtherDollars = base.Columns["OtherDollars"];
                this.columnCoilTons = base.Columns["CoilTons"];
                this.columnCoilDollars = base.Columns["CoilDollars"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMillName = new global::System.Data.DataColumn("MillName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillName);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnPONumber = new global::System.Data.DataColumn("PONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONumber);
                this.columnMillAcknowledgeNumber = new global::System.Data.DataColumn("MillAcknowledgeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMillAcknowledgeNumber);
                this.columnSheetTons = new global::System.Data.DataColumn("SheetTons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSheetTons);
                this.columnSheetDollars = new global::System.Data.DataColumn("SheetDollars", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSheetDollars);
                this.columnHRTons = new global::System.Data.DataColumn("HRTons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRTons);
                this.columnHRDollars = new global::System.Data.DataColumn("HRDollars", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRDollars);
                this.columnCFTons = new global::System.Data.DataColumn("CFTons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCFTons);
                this.columnCFDollars = new global::System.Data.DataColumn("CFDollars", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCFDollars);
                this.columnTotalDollars = new global::System.Data.DataColumn("TotalDollars", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDollars);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnOtherTons = new global::System.Data.DataColumn("OtherTons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTons);
                this.columnOtherDollars = new global::System.Data.DataColumn("OtherDollars", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDollars);
                this.columnCoilTons = new global::System.Data.DataColumn("CoilTons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilTons);
                this.columnCoilDollars = new global::System.Data.DataColumn("CoilDollars", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoilDollars);
                this.columnMillName.AllowDBNull = false;
                this.columnCustomerName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderLogTblRow NewOrderLogTblRow() {
                return ((OrderLogTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderLogTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderLogTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderLogTblRowChanged != null)) {
                    this.OrderLogTblRowChanged(this, new OrderLogTblRowChangeEvent(((OrderLogTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderLogTblRowChanging != null)) {
                    this.OrderLogTblRowChanging(this, new OrderLogTblRowChangeEvent(((OrderLogTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderLogTblRowDeleted != null)) {
                    this.OrderLogTblRowDeleted(this, new OrderLogTblRowChangeEvent(((OrderLogTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderLogTblRowDeleting != null)) {
                    this.OrderLogTblRowDeleting(this, new OrderLogTblRowChangeEvent(((OrderLogTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderLogTblRow(OrderLogTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderLogTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCompID;
            
            private global::System.Data.DataColumn columnCompName;
            
            private global::System.Data.DataColumn columnCompType;
            
            private global::System.Data.DataColumn columnContainerExcelFile;
            
            private global::System.Data.DataColumn columnCompNameAbbreviation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblDataTable() {
                this.TableName = "CompanyTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompIDColumn {
                get {
                    return this.columnCompID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompNameColumn {
                get {
                    return this.columnCompName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompTypeColumn {
                get {
                    return this.columnCompType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContainerExcelFileColumn {
                get {
                    return this.columnContainerExcelFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompNameAbbreviationColumn {
                get {
                    return this.columnCompNameAbbreviation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRow this[int index] {
                get {
                    return ((CompanyTblRow)(this.Rows[index]));
                }
            }
            
            public event CompanyTblRowChangeEventHandler CompanyTblRowChanging;
            
            public event CompanyTblRowChangeEventHandler CompanyTblRowChanged;
            
            public event CompanyTblRowChangeEventHandler CompanyTblRowDeleting;
            
            public event CompanyTblRowChangeEventHandler CompanyTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyTblRow(CompanyTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRow AddCompanyTblRow(int CompID, string CompName, string CompType, string ContainerExcelFile, string CompNameAbbreviation) {
                CompanyTblRow rowCompanyTblRow = ((CompanyTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompID,
                        CompName,
                        CompType,
                        ContainerExcelFile,
                        CompNameAbbreviation};
                rowCompanyTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyTblRow);
                return rowCompanyTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRow FindByCompID(int CompID) {
                return ((CompanyTblRow)(this.Rows.Find(new object[] {
                            CompID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyTblDataTable cln = ((CompanyTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompID = base.Columns["CompID"];
                this.columnCompName = base.Columns["CompName"];
                this.columnCompType = base.Columns["CompType"];
                this.columnContainerExcelFile = base.Columns["ContainerExcelFile"];
                this.columnCompNameAbbreviation = base.Columns["CompNameAbbreviation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompID = new global::System.Data.DataColumn("CompID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompID);
                this.columnCompName = new global::System.Data.DataColumn("CompName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompName);
                this.columnCompType = new global::System.Data.DataColumn("CompType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompType);
                this.columnContainerExcelFile = new global::System.Data.DataColumn("ContainerExcelFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerExcelFile);
                this.columnCompNameAbbreviation = new global::System.Data.DataColumn("CompNameAbbreviation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompNameAbbreviation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompID}, true));
                this.columnCompID.AllowDBNull = false;
                this.columnCompID.Unique = true;
                this.columnCompName.MaxLength = 50;
                this.columnCompType.MaxLength = 15;
                this.columnContainerExcelFile.MaxLength = 50;
                this.columnCompNameAbbreviation.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRow NewCompanyTblRow() {
                return ((CompanyTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyTblRowChanged != null)) {
                    this.CompanyTblRowChanged(this, new CompanyTblRowChangeEvent(((CompanyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyTblRowChanging != null)) {
                    this.CompanyTblRowChanging(this, new CompanyTblRowChangeEvent(((CompanyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyTblRowDeleted != null)) {
                    this.CompanyTblRowDeleted(this, new CompanyTblRowChangeEvent(((CompanyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyTblRowDeleting != null)) {
                    this.CompanyTblRowDeleting(this, new CompanyTblRowChangeEvent(((CompanyTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyTblRow(CompanyTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EMDataSet ds = new EMDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BalanceRptPORow : EMDataRow {
            
            private BalanceRptPODataTable tableBalanceRptPO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceRptPORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBalanceRptPO = ((BalanceRptPODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POID {
                get {
                    return ((int)(this[this.tableBalanceRptPO.POIDColumn]));
                }
                set {
                    this[this.tableBalanceRptPO.POIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONumber {
                get {
                    try {
                        return ((string)(this[this.tableBalanceRptPO.PONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONumber\' in table \'BalanceRptPO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRptPO.PONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalCount {
                get {
                    try {
                        return ((int)(this[this.tableBalanceRptPO.TotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCount\' in table \'BalanceRptPO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRptPO.TotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClosedCount {
                get {
                    try {
                        return ((int)(this[this.tableBalanceRptPO.ClosedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosedCount\' in table \'BalanceRptPO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRptPO.ClosedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FinishedPO {
                get {
                    try {
                        return ((int)(this[this.tableBalanceRptPO.FinishedPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishedPO\' in table \'BalanceRptPO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRptPO.FinishedPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONumberNull() {
                return this.IsNull(this.tableBalanceRptPO.PONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONumberNull() {
                this[this.tableBalanceRptPO.PONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCountNull() {
                return this.IsNull(this.tableBalanceRptPO.TotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCountNull() {
                this[this.tableBalanceRptPO.TotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosedCountNull() {
                return this.IsNull(this.tableBalanceRptPO.ClosedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosedCountNull() {
                this[this.tableBalanceRptPO.ClosedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinishedPONull() {
                return this.IsNull(this.tableBalanceRptPO.FinishedPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinishedPONull() {
                this[this.tableBalanceRptPO.FinishedPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRow[] GetBalanceRtpPOItemRows() {
                if ((this.Table.ChildRelations["BalanceRptPO_BalanceRtpPOItem"] == null)) {
                    return new BalanceRtpPOItemRow[0];
                }
                else {
                    return ((BalanceRtpPOItemRow[])(base.GetChildRows(this.Table.ChildRelations["BalanceRptPO_BalanceRtpPOItem"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BalanceRtpPOItemRow : EMDataRow {
            
            private BalanceRtpPOItemDataTable tableBalanceRtpPOItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceRtpPOItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBalanceRtpPOItem = ((BalanceRtpPOItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POID {
                get {
                    return ((int)(this[this.tableBalanceRtpPOItem.POIDColumn]));
                }
                set {
                    this[this.tableBalanceRtpPOItem.POIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POItemNumber {
                get {
                    return ((int)(this[this.tableBalanceRtpPOItem.POItemNumberColumn]));
                }
                set {
                    this[this.tableBalanceRtpPOItem.POItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grade {
                get {
                    try {
                        return ((string)(this[this.tableBalanceRtpPOItem.GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grade\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ClosedCount {
                get {
                    try {
                        return ((decimal)(this[this.tableBalanceRtpPOItem.ClosedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosedCount\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.ClosedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCount {
                get {
                    try {
                        return ((decimal)(this[this.tableBalanceRtpPOItem.TotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCount\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.TotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ClosedPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableBalanceRtpPOItem.ClosedPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosedPercent\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.ClosedPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SequenceNumber {
                get {
                    try {
                        return ((int)(this[this.tableBalanceRtpPOItem.SequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNumber\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.SequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FinishedItem {
                get {
                    try {
                        return ((int)(this[this.tableBalanceRtpPOItem.FinishedItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishedItem\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.FinishedItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UM {
                get {
                    try {
                        return ((string)(this[this.tableBalanceRtpPOItem.UMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UM\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.UMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeOfItem {
                get {
                    try {
                        return ((string)(this[this.tableBalanceRtpPOItem.SizeOfItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeOfItem\' in table \'BalanceRtpPOItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBalanceRtpPOItem.SizeOfItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORow BalanceRptPORow {
                get {
                    return ((BalanceRptPORow)(this.GetParentRow(this.Table.ParentRelations["BalanceRptPO_BalanceRtpPOItem"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BalanceRptPO_BalanceRtpPOItem"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGradeNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGradeNull() {
                this[this.tableBalanceRtpPOItem.GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosedCountNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.ClosedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosedCountNull() {
                this[this.tableBalanceRtpPOItem.ClosedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCountNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.TotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCountNull() {
                this[this.tableBalanceRtpPOItem.TotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosedPercentNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.ClosedPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosedPercentNull() {
                this[this.tableBalanceRtpPOItem.ClosedPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSequenceNumberNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.SequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSequenceNumberNull() {
                this[this.tableBalanceRtpPOItem.SequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinishedItemNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.FinishedItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinishedItemNull() {
                this[this.tableBalanceRtpPOItem.FinishedItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.UMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMNull() {
                this[this.tableBalanceRtpPOItem.UMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeOfItemNull() {
                return this.IsNull(this.tableBalanceRtpPOItem.SizeOfItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeOfItemNull() {
                this[this.tableBalanceRtpPOItem.SizeOfItemColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POItemTblRow : EMDataRow {
            
            private POItemTblDataTable tablePOItemTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POItemTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOItemTbl = ((POItemTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POItemNumber {
                get {
                    return ((int)(this[this.tablePOItemTbl.POItemNumberColumn]));
                }
                set {
                    this[this.tablePOItemTbl.POItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POID {
                get {
                    try {
                        return ((int)(this[this.tablePOItemTbl.POIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POID\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.POIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SeqNumber {
                get {
                    try {
                        return ((int)(this[this.tablePOItemTbl.SeqNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeqNumber\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.SeqNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNameObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.ItemNameObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNameObsolete\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.ItemNameObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Length {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeOfItem {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.SizeOfItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeOfItem\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.SizeOfItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemAccessCode {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.ItemAccessCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemAccessCode\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.ItemAccessCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tablePOItemTbl.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UM {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.UMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UM\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.UMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateRequired {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOItemTbl.DateRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateRequired\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.DateRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AcknowledgeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOItemTbl.AcknowledgeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcknowledgeDate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.AcknowledgeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MillShipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOItemTbl.MillShipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillShipDate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.MillShipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CancelDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOItemTbl.CancelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelDate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.CancelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePOItemTbl.CustRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustRate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.CustRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePOItemTbl.CommRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommRate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.CommRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePOItemTbl.CustAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustAmount\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.CustAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePOItemTbl.CommAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommAmount\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.CommAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FinishID {
                get {
                    try {
                        return ((int)(this[this.tablePOItemTbl.FinishIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishID\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.FinishIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemID {
                get {
                    try {
                        return ((int)(this[this.tablePOItemTbl.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TreatmentID {
                get {
                    try {
                        return ((int)(this[this.tablePOItemTbl.TreatmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TreatmentID\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.TreatmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MillConfirmationNumber {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.MillConfirmationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillConfirmationNumber\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.MillConfirmationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MillAcknowledgeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOItemTbl.MillAcknowledgeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillAcknowledgeDate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.MillAcknowledgeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tablePOItemTbl.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOItemTbl.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'POItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemTbl.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRow ItemTblRow {
                get {
                    return ((ItemTblRow)(this.GetParentRow(this.Table.ParentRelations["ItemTbl_POItemTbl"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ItemTbl_POItemTbl"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRow POHeaderTblRow {
                get {
                    return ((POHeaderTblRow)(this.GetParentRow(this.Table.ParentRelations["tblPOHeader2tblPOItem2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tblPOHeader2tblPOItem2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOIDNull() {
                return this.IsNull(this.tablePOItemTbl.POIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOIDNull() {
                this[this.tablePOItemTbl.POIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeqNumberNull() {
                return this.IsNull(this.tablePOItemTbl.SeqNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeqNumberNull() {
                this[this.tablePOItemTbl.SeqNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameObsoleteNull() {
                return this.IsNull(this.tablePOItemTbl.ItemNameObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameObsoleteNull() {
                this[this.tablePOItemTbl.ItemNameObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tablePOItemTbl.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tablePOItemTbl.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLengthNull() {
                return this.IsNull(this.tablePOItemTbl.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLengthNull() {
                this[this.tablePOItemTbl.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeOfItemNull() {
                return this.IsNull(this.tablePOItemTbl.SizeOfItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeOfItemNull() {
                this[this.tablePOItemTbl.SizeOfItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemAccessCodeNull() {
                return this.IsNull(this.tablePOItemTbl.ItemAccessCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemAccessCodeNull() {
                this[this.tablePOItemTbl.ItemAccessCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablePOItemTbl.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablePOItemTbl.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMNull() {
                return this.IsNull(this.tablePOItemTbl.UMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMNull() {
                this[this.tablePOItemTbl.UMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateRequiredNull() {
                return this.IsNull(this.tablePOItemTbl.DateRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateRequiredNull() {
                this[this.tablePOItemTbl.DateRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcknowledgeDateNull() {
                return this.IsNull(this.tablePOItemTbl.AcknowledgeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcknowledgeDateNull() {
                this[this.tablePOItemTbl.AcknowledgeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillShipDateNull() {
                return this.IsNull(this.tablePOItemTbl.MillShipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillShipDateNull() {
                this[this.tablePOItemTbl.MillShipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelDateNull() {
                return this.IsNull(this.tablePOItemTbl.CancelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelDateNull() {
                this[this.tablePOItemTbl.CancelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustRateNull() {
                return this.IsNull(this.tablePOItemTbl.CustRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustRateNull() {
                this[this.tablePOItemTbl.CustRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommRateNull() {
                return this.IsNull(this.tablePOItemTbl.CommRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommRateNull() {
                this[this.tablePOItemTbl.CommRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAmountNull() {
                return this.IsNull(this.tablePOItemTbl.CustAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAmountNull() {
                this[this.tablePOItemTbl.CustAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommAmountNull() {
                return this.IsNull(this.tablePOItemTbl.CommAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommAmountNull() {
                this[this.tablePOItemTbl.CommAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablePOItemTbl.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tablePOItemTbl.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinishIDNull() {
                return this.IsNull(this.tablePOItemTbl.FinishIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinishIDNull() {
                this[this.tablePOItemTbl.FinishIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tablePOItemTbl.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tablePOItemTbl.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTreatmentIDNull() {
                return this.IsNull(this.tablePOItemTbl.TreatmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTreatmentIDNull() {
                this[this.tablePOItemTbl.TreatmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillConfirmationNumberNull() {
                return this.IsNull(this.tablePOItemTbl.MillConfirmationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillConfirmationNumberNull() {
                this[this.tablePOItemTbl.MillConfirmationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillAcknowledgeDateNull() {
                return this.IsNull(this.tablePOItemTbl.MillAcknowledgeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillAcknowledgeDateNull() {
                this[this.tablePOItemTbl.MillAcknowledgeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tablePOItemTbl.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tablePOItemTbl.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tablePOItemTbl.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tablePOItemTbl.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow[] GetContBundleTblRows() {
                if ((this.Table.ChildRelations["tblPOItem2tblContPOItem2"] == null)) {
                    return new ContBundleTblRow[0];
                }
                else {
                    return ((ContBundleTblRow[])(base.GetChildRows(this.Table.ChildRelations["tblPOItem2tblContPOItem2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POHeaderTblRow : EMDataRow {
            
            private POHeaderTblDataTable tablePOHeaderTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POHeaderTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOHeaderTbl = ((POHeaderTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POID {
                get {
                    return ((int)(this[this.tablePOHeaderTbl.POIDColumn]));
                }
                set {
                    this[this.tablePOHeaderTbl.POIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONumber {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.PONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONumber\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.PONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOHeaderTbl.PODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODate\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.PODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendCompany {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendCompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendCompany\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendNameObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendNameObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendNameObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendNameObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendPhone {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendPhone\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendFax {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendFax\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendContact {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendContact\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendEMail {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendEMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendEMail\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendEMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendAddressObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendAddressObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendAddressObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendAddressObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendCountryObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendCountryObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendCountryObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendCountryObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToCompanyObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToCompanyObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToCompanyObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToCompanyObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToNameObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToNameObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToNameObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToNameObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToPhone {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToPhone\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToFax {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToFax\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToContact {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToContact\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToEMail {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToEMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToEMail\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToEMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToAddressObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToAddressObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToAddressObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToAddressObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToCountryObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToCountryObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToCountryObsolete\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToCountryObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Terms {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.TermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Terms\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.TermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipCode {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipCode\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOB {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.FOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOB\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.FOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablePOHeaderTbl.USTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTotal\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.USTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablePOHeaderTbl.OtherTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTotal\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.OtherTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePOHeaderTbl.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CancelDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOHeaderTbl.CancelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelDate\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.CancelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendLocationNameObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.VendLocationNameObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendLocationNameObsolete\' in table \'POHeaderTbl\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendLocationNameObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToLocationNameObsolete {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.ShipToLocationNameObsoleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToLocationNameObsolete\' in table \'POHeaderTbl\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToLocationNameObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MillConfirmationNumber {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.MillConfirmationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillConfirmationNumber\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.MillConfirmationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MillAcknowledgeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOHeaderTbl.MillAcknowledgeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillAcknowledgeDate\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.MillAcknowledgeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ExchangeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOHeaderTbl.ExchangeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeDate\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ExchangeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrencyID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerLocationID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.CustomerLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerLocationID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.CustomerLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MillID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.MillIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.MillIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MillLocationID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.MillLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillLocationID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.MillLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SurchargesInEffect {
                get {
                    try {
                        return ((bool)(this[this.tablePOHeaderTbl.SurchargesInEffectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurchargesInEffect\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.SurchargesInEffectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tablePOHeaderTbl.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOHeaderTbl.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MillAcknowledgeDateRevised {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePOHeaderTbl.MillAcknowledgeDateRevisedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillAcknowledgeDateRevised\' in table \'POHeaderTbl\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.MillAcknowledgeDateRevisedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VendContactID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.VendContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendContactID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.VendContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShipToContactID {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.ShipToContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToContactID\' in table \'POHeaderTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.ShipToContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MillConfirmationAppliesToEntirePO {
                get {
                    try {
                        return ((int)(this[this.tablePOHeaderTbl.MillConfirmationAppliesToEntirePOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillConfirmationAppliesToEntirePO\' in table \'POHeaderTbl\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOHeaderTbl.MillConfirmationAppliesToEntirePOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONumberNull() {
                return this.IsNull(this.tablePOHeaderTbl.PONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONumberNull() {
                this[this.tablePOHeaderTbl.PONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODateNull() {
                return this.IsNull(this.tablePOHeaderTbl.PODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODateNull() {
                this[this.tablePOHeaderTbl.PODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendCompanyNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendCompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendCompanyNull() {
                this[this.tablePOHeaderTbl.VendCompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendNameObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendNameObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendNameObsoleteNull() {
                this[this.tablePOHeaderTbl.VendNameObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendPhoneNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendPhoneNull() {
                this[this.tablePOHeaderTbl.VendPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendFaxNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendFaxNull() {
                this[this.tablePOHeaderTbl.VendFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendContactNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendContactNull() {
                this[this.tablePOHeaderTbl.VendContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendEMailNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendEMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendEMailNull() {
                this[this.tablePOHeaderTbl.VendEMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendAddressObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendAddressObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendAddressObsoleteNull() {
                this[this.tablePOHeaderTbl.VendAddressObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendCountryObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendCountryObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendCountryObsoleteNull() {
                this[this.tablePOHeaderTbl.VendCountryObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToCompanyObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToCompanyObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToCompanyObsoleteNull() {
                this[this.tablePOHeaderTbl.ShipToCompanyObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToNameObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToNameObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToNameObsoleteNull() {
                this[this.tablePOHeaderTbl.ShipToNameObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToPhoneNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToPhoneNull() {
                this[this.tablePOHeaderTbl.ShipToPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToFaxNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToFaxNull() {
                this[this.tablePOHeaderTbl.ShipToFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToContactNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToContactNull() {
                this[this.tablePOHeaderTbl.ShipToContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToEMailNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToEMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToEMailNull() {
                this[this.tablePOHeaderTbl.ShipToEMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToAddressObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToAddressObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToAddressObsoleteNull() {
                this[this.tablePOHeaderTbl.ShipToAddressObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToCountryObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToCountryObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToCountryObsoleteNull() {
                this[this.tablePOHeaderTbl.ShipToCountryObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermsNull() {
                return this.IsNull(this.tablePOHeaderTbl.TermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermsNull() {
                this[this.tablePOHeaderTbl.TermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipCodeNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipCodeNull() {
                this[this.tablePOHeaderTbl.ShipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOBNull() {
                return this.IsNull(this.tablePOHeaderTbl.FOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOBNull() {
                this[this.tablePOHeaderTbl.FOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tablePOHeaderTbl.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tablePOHeaderTbl.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTotalNull() {
                return this.IsNull(this.tablePOHeaderTbl.USTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTotalNull() {
                this[this.tablePOHeaderTbl.USTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherTotalNull() {
                return this.IsNull(this.tablePOHeaderTbl.OtherTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherTotalNull() {
                this[this.tablePOHeaderTbl.OtherTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tablePOHeaderTbl.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchangeRateNull() {
                this[this.tablePOHeaderTbl.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancelDateNull() {
                return this.IsNull(this.tablePOHeaderTbl.CancelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancelDateNull() {
                this[this.tablePOHeaderTbl.CancelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablePOHeaderTbl.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tablePOHeaderTbl.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendLocationNameObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendLocationNameObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendLocationNameObsoleteNull() {
                this[this.tablePOHeaderTbl.VendLocationNameObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToLocationNameObsoleteNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToLocationNameObsoleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToLocationNameObsoleteNull() {
                this[this.tablePOHeaderTbl.ShipToLocationNameObsoleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillConfirmationNumberNull() {
                return this.IsNull(this.tablePOHeaderTbl.MillConfirmationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillConfirmationNumberNull() {
                this[this.tablePOHeaderTbl.MillConfirmationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillAcknowledgeDateNull() {
                return this.IsNull(this.tablePOHeaderTbl.MillAcknowledgeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillAcknowledgeDateNull() {
                this[this.tablePOHeaderTbl.MillAcknowledgeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchangeDateNull() {
                return this.IsNull(this.tablePOHeaderTbl.ExchangeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchangeDateNull() {
                this[this.tablePOHeaderTbl.ExchangeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyIDNull() {
                this[this.tablePOHeaderTbl.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablePOHeaderTbl.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerLocationIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.CustomerLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerLocationIDNull() {
                this[this.tablePOHeaderTbl.CustomerLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.MillIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillIDNull() {
                this[this.tablePOHeaderTbl.MillIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillLocationIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.MillLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillLocationIDNull() {
                this[this.tablePOHeaderTbl.MillLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurchargesInEffectNull() {
                return this.IsNull(this.tablePOHeaderTbl.SurchargesInEffectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurchargesInEffectNull() {
                this[this.tablePOHeaderTbl.SurchargesInEffectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tablePOHeaderTbl.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tablePOHeaderTbl.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tablePOHeaderTbl.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tablePOHeaderTbl.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillAcknowledgeDateRevisedNull() {
                return this.IsNull(this.tablePOHeaderTbl.MillAcknowledgeDateRevisedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillAcknowledgeDateRevisedNull() {
                this[this.tablePOHeaderTbl.MillAcknowledgeDateRevisedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendContactIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.VendContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendContactIDNull() {
                this[this.tablePOHeaderTbl.VendContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToContactIDNull() {
                return this.IsNull(this.tablePOHeaderTbl.ShipToContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToContactIDNull() {
                this[this.tablePOHeaderTbl.ShipToContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillConfirmationAppliesToEntirePONull() {
                return this.IsNull(this.tablePOHeaderTbl.MillConfirmationAppliesToEntirePOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillConfirmationAppliesToEntirePONull() {
                this[this.tablePOHeaderTbl.MillConfirmationAppliesToEntirePOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow[] GetPOItemTblRows() {
                if ((this.Table.ChildRelations["tblPOHeader2tblPOItem2"] == null)) {
                    return new POItemTblRow[0];
                }
                else {
                    return ((POItemTblRow[])(base.GetChildRows(this.Table.ChildRelations["tblPOHeader2tblPOItem2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContainerTblRow : EMDataRow {
            
            private ContainerTblDataTable tableContainerTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContainerTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContainerTbl = ((ContainerTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContID {
                get {
                    return ((int)(this[this.tableContainerTbl.ContIDColumn]));
                }
                set {
                    this[this.tableContainerTbl.ContIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContNumber {
                get {
                    try {
                        return ((string)(this[this.tableContainerTbl.ContNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContNumber\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ContNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContainerTbl.ShipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipDate\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ShipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ETA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContainerTbl.ETAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETA\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ETAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableContainerTbl.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableContainerTbl.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableContainerTbl.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerLocationID {
                get {
                    try {
                        return ((int)(this[this.tableContainerTbl.CustomerLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerLocationID\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.CustomerLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyClosingToEntireContainer {
                get {
                    try {
                        return ((int)(this[this.tableContainerTbl.ApplyClosingToEntireContainerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApplyClosingToEntireContainer\' in table \'ContainerTbl\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ApplyClosingToEntireContainerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ContainerPickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContainerTbl.ContainerPickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContainerPickupDate\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ContainerPickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContainerPickupTerminal {
                get {
                    try {
                        return ((string)(this[this.tableContainerTbl.ContainerPickupTerminalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContainerPickupTerminal\' in table \'ContainerTbl\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ContainerPickupTerminalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContainerProofOfDelivery {
                get {
                    try {
                        return ((string)(this[this.tableContainerTbl.ContainerProofOfDeliveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContainerProofOfDelivery\' in table \'ContainerTbl\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ContainerProofOfDeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReleaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContainerTbl.ReleaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReleaseDate\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.ReleaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MillID {
                get {
                    try {
                        return ((int)(this[this.tableContainerTbl.MillIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillID\' in table \'ContainerTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTbl.MillIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContNumberNull() {
                return this.IsNull(this.tableContainerTbl.ContNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContNumberNull() {
                this[this.tableContainerTbl.ContNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipDateNull() {
                return this.IsNull(this.tableContainerTbl.ShipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipDateNull() {
                this[this.tableContainerTbl.ShipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETANull() {
                return this.IsNull(this.tableContainerTbl.ETAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETANull() {
                this[this.tableContainerTbl.ETAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableContainerTbl.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableContainerTbl.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableContainerTbl.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableContainerTbl.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableContainerTbl.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableContainerTbl.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerLocationIDNull() {
                return this.IsNull(this.tableContainerTbl.CustomerLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerLocationIDNull() {
                this[this.tableContainerTbl.CustomerLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyClosingToEntireContainerNull() {
                return this.IsNull(this.tableContainerTbl.ApplyClosingToEntireContainerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyClosingToEntireContainerNull() {
                this[this.tableContainerTbl.ApplyClosingToEntireContainerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContainerPickupDateNull() {
                return this.IsNull(this.tableContainerTbl.ContainerPickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContainerPickupDateNull() {
                this[this.tableContainerTbl.ContainerPickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContainerPickupTerminalNull() {
                return this.IsNull(this.tableContainerTbl.ContainerPickupTerminalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContainerPickupTerminalNull() {
                this[this.tableContainerTbl.ContainerPickupTerminalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContainerProofOfDeliveryNull() {
                return this.IsNull(this.tableContainerTbl.ContainerProofOfDeliveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContainerProofOfDeliveryNull() {
                this[this.tableContainerTbl.ContainerProofOfDeliveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReleaseDateNull() {
                return this.IsNull(this.tableContainerTbl.ReleaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReleaseDateNull() {
                this[this.tableContainerTbl.ReleaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillIDNull() {
                return this.IsNull(this.tableContainerTbl.MillIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillIDNull() {
                this[this.tableContainerTbl.MillIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow[] GetContBundleTblRows() {
                if ((this.Table.ChildRelations["tblContainertblContPOItem2"] == null)) {
                    return new ContBundleTblRow[0];
                }
                else {
                    return ((ContBundleTblRow[])(base.GetChildRows(this.Table.ChildRelations["tblContainertblContPOItem2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SurchargeRateTblRow : EMDataRow {
            
            private SurchargeRateTblDataTable tableSurchargeRateTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SurchargeRateTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSurchargeRateTbl = ((SurchargeRateTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SurchargeID {
                get {
                    return ((int)(this[this.tableSurchargeRateTbl.SurchargeIDColumn]));
                }
                set {
                    this[this.tableSurchargeRateTbl.SurchargeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemID {
                get {
                    try {
                        return ((int)(this[this.tableSurchargeRateTbl.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'SurchargeRateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSurchargeRateTbl.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FinishID {
                get {
                    try {
                        return ((int)(this[this.tableSurchargeRateTbl.FinishIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishID\' in table \'SurchargeRateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSurchargeRateTbl.FinishIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SurchargeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSurchargeRateTbl.SurchargeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurchargeRate\' in table \'SurchargeRateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSurchargeRateTbl.SurchargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SurchargeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSurchargeRateTbl.SurchargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurchargeDate\' in table \'SurchargeRateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSurchargeRateTbl.SurchargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SurchargeMonth {
                get {
                    try {
                        return ((int)(this[this.tableSurchargeRateTbl.SurchargeMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurchargeMonth\' in table \'SurchargeRateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSurchargeRateTbl.SurchargeMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableSurchargeRateTbl.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableSurchargeRateTbl.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinishIDNull() {
                return this.IsNull(this.tableSurchargeRateTbl.FinishIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinishIDNull() {
                this[this.tableSurchargeRateTbl.FinishIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurchargeRateNull() {
                return this.IsNull(this.tableSurchargeRateTbl.SurchargeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurchargeRateNull() {
                this[this.tableSurchargeRateTbl.SurchargeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurchargeDateNull() {
                return this.IsNull(this.tableSurchargeRateTbl.SurchargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurchargeDateNull() {
                this[this.tableSurchargeRateTbl.SurchargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurchargeMonthNull() {
                return this.IsNull(this.tableSurchargeRateTbl.SurchargeMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurchargeMonthNull() {
                this[this.tableSurchargeRateTbl.SurchargeMonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContBundleTblRow : EMDataRow {
            
            private ContBundleTblDataTable tableContBundleTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContBundleTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContBundleTbl = ((ContBundleTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContainerBundleID {
                get {
                    return ((int)(this[this.tableContBundleTbl.ContainerBundleIDColumn]));
                }
                set {
                    this[this.tableContBundleTbl.ContainerBundleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContID {
                get {
                    try {
                        return ((int)(this[this.tableContBundleTbl.ContIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContID\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.ContIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POItemNumber {
                get {
                    try {
                        return ((int)(this[this.tableContBundleTbl.POItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POItemNumber\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.POItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BundleSeqNumber {
                get {
                    try {
                        return ((int)(this[this.tableContBundleTbl.BundleSeqNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleSeqNumber\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.BundleSeqNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EnglishShipQty {
                get {
                    try {
                        return ((decimal)(this[this.tableContBundleTbl.EnglishShipQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnglishShipQty\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.EnglishShipQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableContBundleTbl.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Heat {
                get {
                    try {
                        return ((string)(this[this.tableContBundleTbl.HeatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heat\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.HeatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MetricShipQty {
                get {
                    try {
                        return ((decimal)(this[this.tableContBundleTbl.MetricShipQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MetricShipQty\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.MetricShipQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BayNumber {
                get {
                    try {
                        return ((string)(this[this.tableContBundleTbl.BayNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BayNumber\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.BayNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContBundleTbl.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickupTerminal {
                get {
                    try {
                        return ((string)(this[this.tableContBundleTbl.PickupTerminalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupTerminal\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.PickupTerminalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProofOfDelivery {
                get {
                    try {
                        return ((string)(this[this.tableContBundleTbl.ProofOfDeliveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProofOfDelivery\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.ProofOfDeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMInvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableContBundleTbl.EMInvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMInvoiceNumber\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.EMInvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuxKey1 {
                get {
                    try {
                        return ((int)(this[this.tableContBundleTbl.AuxKey1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuxKey1\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.AuxKey1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuxKey2 {
                get {
                    try {
                        return ((int)(this[this.tableContBundleTbl.AuxKey2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuxKey2\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.AuxKey2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MillInvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContBundleTbl.MillInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillInvoiceDate\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.MillInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BundleAlloySurcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableContBundleTbl.BundleAlloySurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleAlloySurcharge\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.BundleAlloySurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BundleScrapSurcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableContBundleTbl.BundleScrapSurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleScrapSurcharge\' in table \'ContBundleTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContBundleTbl.BundleScrapSurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRow ContainerTblRow {
                get {
                    return ((ContainerTblRow)(this.GetParentRow(this.Table.ParentRelations["tblContainertblContPOItem2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tblContainertblContPOItem2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow POItemTblRow {
                get {
                    return ((POItemTblRow)(this.GetParentRow(this.Table.ParentRelations["tblPOItem2tblContPOItem2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tblPOItem2tblContPOItem2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContIDNull() {
                return this.IsNull(this.tableContBundleTbl.ContIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContIDNull() {
                this[this.tableContBundleTbl.ContIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOItemNumberNull() {
                return this.IsNull(this.tableContBundleTbl.POItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOItemNumberNull() {
                this[this.tableContBundleTbl.POItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundleSeqNumberNull() {
                return this.IsNull(this.tableContBundleTbl.BundleSeqNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundleSeqNumberNull() {
                this[this.tableContBundleTbl.BundleSeqNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnglishShipQtyNull() {
                return this.IsNull(this.tableContBundleTbl.EnglishShipQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnglishShipQtyNull() {
                this[this.tableContBundleTbl.EnglishShipQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tableContBundleTbl.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tableContBundleTbl.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeatNull() {
                return this.IsNull(this.tableContBundleTbl.HeatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeatNull() {
                this[this.tableContBundleTbl.HeatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMetricShipQtyNull() {
                return this.IsNull(this.tableContBundleTbl.MetricShipQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMetricShipQtyNull() {
                this[this.tableContBundleTbl.MetricShipQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBayNumberNull() {
                return this.IsNull(this.tableContBundleTbl.BayNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBayNumberNull() {
                this[this.tableContBundleTbl.BayNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableContBundleTbl.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableContBundleTbl.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupTerminalNull() {
                return this.IsNull(this.tableContBundleTbl.PickupTerminalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupTerminalNull() {
                this[this.tableContBundleTbl.PickupTerminalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProofOfDeliveryNull() {
                return this.IsNull(this.tableContBundleTbl.ProofOfDeliveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProofOfDeliveryNull() {
                this[this.tableContBundleTbl.ProofOfDeliveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMInvoiceNumberNull() {
                return this.IsNull(this.tableContBundleTbl.EMInvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMInvoiceNumberNull() {
                this[this.tableContBundleTbl.EMInvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuxKey1Null() {
                return this.IsNull(this.tableContBundleTbl.AuxKey1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuxKey1Null() {
                this[this.tableContBundleTbl.AuxKey1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuxKey2Null() {
                return this.IsNull(this.tableContBundleTbl.AuxKey2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuxKey2Null() {
                this[this.tableContBundleTbl.AuxKey2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillInvoiceDateNull() {
                return this.IsNull(this.tableContBundleTbl.MillInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillInvoiceDateNull() {
                this[this.tableContBundleTbl.MillInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundleAlloySurchargeNull() {
                return this.IsNull(this.tableContBundleTbl.BundleAlloySurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundleAlloySurchargeNull() {
                this[this.tableContBundleTbl.BundleAlloySurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBundleScrapSurchargeNull() {
                return this.IsNull(this.tableContBundleTbl.BundleScrapSurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBundleScrapSurchargeNull() {
                this[this.tableContBundleTbl.BundleScrapSurchargeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KeyNumberTbleRow : EMDataRow {
            
            private KeyNumberTbleDataTable tableKeyNumberTble;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KeyNumberTbleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKeyNumberTble = ((KeyNumberTbleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tblName {
                get {
                    return ((string)(this[this.tableKeyNumberTble.tblNameColumn]));
                }
                set {
                    this[this.tableKeyNumberTble.tblNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nextKeyNumber {
                get {
                    try {
                        return ((int)(this[this.tableKeyNumberTble.nextKeyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nextKeyNumber\' in table \'KeyNumberTble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeyNumberTble.nextKeyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnextKeyNumberNull() {
                return this.IsNull(this.tableKeyNumberTble.nextKeyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnextKeyNumberNull() {
                this[this.tableKeyNumberTble.nextKeyNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentTermsTblRow : EMDataRow {
            
            private PaymentTermsTblDataTable tablePaymentTermsTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentTermsTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentTermsTbl = ((PaymentTermsTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TermsID {
                get {
                    return ((int)(this[this.tablePaymentTermsTbl.TermsIDColumn]));
                }
                set {
                    this[this.tablePaymentTermsTbl.TermsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Terms {
                get {
                    try {
                        return ((string)(this[this.tablePaymentTermsTbl.TermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Terms\' in table \'PaymentTermsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentTermsTbl.TermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TermsDesc {
                get {
                    try {
                        return ((string)(this[this.tablePaymentTermsTbl.TermsDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermsDesc\' in table \'PaymentTermsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentTermsTbl.TermsDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermsNull() {
                return this.IsNull(this.tablePaymentTermsTbl.TermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermsNull() {
                this[this.tablePaymentTermsTbl.TermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermsDescNull() {
                return this.IsNull(this.tablePaymentTermsTbl.TermsDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermsDescNull() {
                this[this.tablePaymentTermsTbl.TermsDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ShippingCodeTblRow : EMDataRow {
            
            private ShippingCodeTblDataTable tableShippingCodeTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ShippingCodeTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShippingCodeTbl = ((ShippingCodeTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShipCodeID {
                get {
                    return ((int)(this[this.tableShippingCodeTbl.ShipCodeIDColumn]));
                }
                set {
                    this[this.tableShippingCodeTbl.ShipCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipCode {
                get {
                    try {
                        return ((string)(this[this.tableShippingCodeTbl.ShipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipCode\' in table \'ShippingCodeTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingCodeTbl.ShipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipDesc {
                get {
                    try {
                        return ((string)(this[this.tableShippingCodeTbl.ShipDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipDesc\' in table \'ShippingCodeTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingCodeTbl.ShipDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipCodeNull() {
                return this.IsNull(this.tableShippingCodeTbl.ShipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipCodeNull() {
                this[this.tableShippingCodeTbl.ShipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipDescNull() {
                return this.IsNull(this.tableShippingCodeTbl.ShipDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipDescNull() {
                this[this.tableShippingCodeTbl.ShipDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemTblRow : EMDataRow {
            
            private ItemTblDataTable tableItemTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemTbl = ((ItemTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemID {
                get {
                    return ((int)(this[this.tableItemTbl.ItemIDColumn]));
                }
                set {
                    this[this.tableItemTbl.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompID {
                get {
                    try {
                        return ((int)(this[this.tableItemTbl.CompIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompID\' in table \'ItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemTbl.CompIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemTbl.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemTbl.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableItemTbl.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'ItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemTbl.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustRate {
                get {
                    try {
                        return ((decimal)(this[this.tableItemTbl.CustRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustRate\' in table \'ItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemTbl.CustRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommRate {
                get {
                    try {
                        return ((decimal)(this[this.tableItemTbl.CommRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommRate\' in table \'ItemTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemTbl.CommRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompIDNull() {
                return this.IsNull(this.tableItemTbl.CompIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompIDNull() {
                this[this.tableItemTbl.CompIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemTbl.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemTbl.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableItemTbl.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableItemTbl.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustRateNull() {
                return this.IsNull(this.tableItemTbl.CustRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustRateNull() {
                this[this.tableItemTbl.CustRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommRateNull() {
                return this.IsNull(this.tableItemTbl.CommRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommRateNull() {
                this[this.tableItemTbl.CommRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow[] GetPOItemTblRows() {
                if ((this.Table.ChildRelations["ItemTbl_POItemTbl"] == null)) {
                    return new POItemTblRow[0];
                }
                else {
                    return ((POItemTblRow[])(base.GetChildRows(this.Table.ChildRelations["ItemTbl_POItemTbl"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POFileTblRow : EMDataRow {
            
            private POFileTblDataTable tablePOFileTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POFileTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOFileTbl = ((POFileTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POID {
                get {
                    return ((int)(this[this.tablePOFileTbl.POIDColumn]));
                }
                set {
                    this[this.tablePOFileTbl.POIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FileID {
                get {
                    return ((int)(this[this.tablePOFileTbl.FileIDColumn]));
                }
                set {
                    this[this.tablePOFileTbl.FileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRow FileTblRow {
                get {
                    return ((FileTblRow)(this.GetParentRow(this.Table.ParentRelations["FileTblPOFileTbl"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FileTblPOFileTbl"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FileTblRow : EMDataRow {
            
            private FileTblDataTable tableFileTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FileTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFileTbl = ((FileTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FileID {
                get {
                    return ((int)(this[this.tableFileTbl.FileIDColumn]));
                }
                set {
                    this[this.tableFileTbl.FileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileName {
                get {
                    try {
                        return ((string)(this[this.tableFileTbl.FileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileName\' in table \'FileTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFileTbl.FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileNameNull() {
                return this.IsNull(this.tableFileTbl.FileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileNameNull() {
                this[this.tableFileTbl.FileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRow[] GetPOFileTblRows() {
                if ((this.Table.ChildRelations["FileTblPOFileTbl"] == null)) {
                    return new POFileTblRow[0];
                }
                else {
                    return ((POFileTblRow[])(base.GetChildRows(this.Table.ChildRelations["FileTblPOFileTbl"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CountryTblRow : EMDataRow {
            
            private CountryTblDataTable tableCountryTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CountryTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCountryTbl = ((CountryTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountryID {
                get {
                    return ((int)(this[this.tableCountryTbl.CountryIDColumn]));
                }
                set {
                    this[this.tableCountryTbl.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryName {
                get {
                    try {
                        return ((string)(this[this.tableCountryTbl.CountryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryName\' in table \'CountryTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCountryTbl.CountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNameNull() {
                return this.IsNull(this.tableCountryTbl.CountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNameNull() {
                this[this.tableCountryTbl.CountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow[] GetLocationTblRows() {
                if ((this.Table.ChildRelations["CountryTblLocationTbl"] == null)) {
                    return new LocationTblRow[0];
                }
                else {
                    return ((LocationTblRow[])(base.GetChildRows(this.Table.ChildRelations["CountryTblLocationTbl"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContactsTblRow : EMDataRow {
            
            private ContactsTblDataTable tableContactsTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContactsTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContactsTbl = ((ContactsTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactID {
                get {
                    return ((int)(this[this.tableContactsTbl.ContactIDColumn]));
                }
                set {
                    this[this.tableContactsTbl.ContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompID {
                get {
                    try {
                        return ((int)(this[this.tableContactsTbl.CompIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompID\' in table \'ContactsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactsTbl.CompIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableContactsTbl.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'ContactsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactsTbl.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableContactsTbl.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'ContactsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactsTbl.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableContactsTbl.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'ContactsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactsTbl.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableContactsTbl.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'ContactsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactsTbl.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail {
                get {
                    try {
                        return ((string)(this[this.tableContactsTbl.EMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMail\' in table \'ContactsTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContactsTbl.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompIDNull() {
                return this.IsNull(this.tableContactsTbl.CompIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompIDNull() {
                this[this.tableContactsTbl.CompIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableContactsTbl.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableContactsTbl.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableContactsTbl.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableContactsTbl.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableContactsTbl.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableContactsTbl.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableContactsTbl.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableContactsTbl.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMailNull() {
                return this.IsNull(this.tableContactsTbl.EMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMailNull() {
                this[this.tableContactsTbl.EMailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContainerTemplateTblRow : EMDataRow {
            
            private ContainerTemplateTblDataTable tableContainerTemplateTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContainerTemplateTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContainerTemplateTbl = ((ContainerTemplateTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContainerTemplateID {
                get {
                    return ((int)(this[this.tableContainerTemplateTbl.ContainerTemplateIDColumn]));
                }
                set {
                    this[this.tableContainerTemplateTbl.ContainerTemplateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExcelFile {
                get {
                    try {
                        return ((string)(this[this.tableContainerTemplateTbl.ExcelFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExcelFile\' in table \'ContainerTemplateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTemplateTbl.ExcelFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableContainerTemplateTbl.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ContainerTemplateTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContainerTemplateTbl.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExcelFileNull() {
                return this.IsNull(this.tableContainerTemplateTbl.ExcelFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExcelFileNull() {
                this[this.tableContainerTemplateTbl.ExcelFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableContainerTemplateTbl.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableContainerTemplateTbl.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BOLItemTblRow : EMDataRow {
            
            private BOLItemTblDataTable tableBOLItemTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOLItemTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBOLItemTbl = ((BOLItemTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOLID {
                get {
                    return ((int)(this[this.tableBOLItemTbl.BOLIDColumn]));
                }
                set {
                    this[this.tableBOLItemTbl.BOLIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContainerBundleID {
                get {
                    return ((int)(this[this.tableBOLItemTbl.ContainerBundleIDColumn]));
                }
                set {
                    this[this.tableBOLItemTbl.ContainerBundleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRow BOLTblRow {
                get {
                    return ((BOLTblRow)(this.GetParentRow(this.Table.ParentRelations["BOLTblBOLItemTbl"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOLTblBOLItemTbl"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FinishTblRow : EMDataRow {
            
            private FinishTblDataTable tableFinishTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinishTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinishTbl = ((FinishTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FinishID {
                get {
                    return ((int)(this[this.tableFinishTbl.FinishIDColumn]));
                }
                set {
                    this[this.tableFinishTbl.FinishIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FinishType {
                get {
                    try {
                        return ((string)(this[this.tableFinishTbl.FinishTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishType\' in table \'FinishTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinishTbl.FinishTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommissionRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFinishTbl.CommissionRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionRate\' in table \'FinishTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinishTbl.CommissionRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinishTypeNull() {
                return this.IsNull(this.tableFinishTbl.FinishTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinishTypeNull() {
                this[this.tableFinishTbl.FinishTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommissionRateNull() {
                return this.IsNull(this.tableFinishTbl.CommissionRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommissionRateNull() {
                this[this.tableFinishTbl.CommissionRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CurrencyTblRow : EMDataRow {
            
            private CurrencyTblDataTable tableCurrencyTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CurrencyTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCurrencyTbl = ((CurrencyTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrencyID {
                get {
                    return ((int)(this[this.tableCurrencyTbl.CurrencyIDColumn]));
                }
                set {
                    this[this.tableCurrencyTbl.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tableCurrencyTbl.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'CurrencyTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCurrencyTbl.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tableCurrencyTbl.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNameNull() {
                this[this.tableCurrencyTbl.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TreatmentTblRow : EMDataRow {
            
            private TreatmentTblDataTable tableTreatmentTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TreatmentTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTreatmentTbl = ((TreatmentTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TreatmentID {
                get {
                    return ((int)(this[this.tableTreatmentTbl.TreatmentIDColumn]));
                }
                set {
                    this[this.tableTreatmentTbl.TreatmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TreatmentType {
                get {
                    try {
                        return ((string)(this[this.tableTreatmentTbl.TreatmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TreatmentType\' in table \'TreatmentTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTreatmentTbl.TreatmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTreatmentTypeNull() {
                return this.IsNull(this.tableTreatmentTbl.TreatmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTreatmentTypeNull() {
                this[this.tableTreatmentTbl.TreatmentTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BOLTblRow : EMDataRow {
            
            private BOLTblDataTable tableBOLTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOLTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBOLTbl = ((BOLTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOLID {
                get {
                    return ((int)(this[this.tableBOLTbl.BOLIDColumn]));
                }
                set {
                    this[this.tableBOLTbl.BOLIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOLNumber {
                get {
                    try {
                        return ((string)(this[this.tableBOLTbl.BOLNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOLNumber\' in table \'BOLTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOLTbl.BOLNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PickupDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOLTbl.PickupDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickupDate\' in table \'BOLTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOLTbl.PickupDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableBOLTbl.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'BOLTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOLTbl.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOLNumberNull() {
                return this.IsNull(this.tableBOLTbl.BOLNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOLNumberNull() {
                this[this.tableBOLTbl.BOLNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickupDateNull() {
                return this.IsNull(this.tableBOLTbl.PickupDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickupDateNull() {
                this[this.tableBOLTbl.PickupDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableBOLTbl.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableBOLTbl.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRow[] GetBOLItemTblRows() {
                if ((this.Table.ChildRelations["BOLTblBOLItemTbl"] == null)) {
                    return new BOLItemTblRow[0];
                }
                else {
                    return ((BOLItemTblRow[])(base.GetChildRows(this.Table.ChildRelations["BOLTblBOLItemTbl"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LocationTblRow : EMDataRow {
            
            private LocationTblDataTable tableLocationTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocationTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLocationTbl = ((LocationTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LocID {
                get {
                    return ((int)(this[this.tableLocationTbl.LocIDColumn]));
                }
                set {
                    this[this.tableLocationTbl.LocIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompID {
                get {
                    try {
                        return ((int)(this[this.tableLocationTbl.CompIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompID\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.CompIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocName {
                get {
                    try {
                        return ((string)(this[this.tableLocationTbl.LocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocName\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.LocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableLocationTbl.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tableLocationTbl.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExcelFile {
                get {
                    try {
                        return ((string)(this[this.tableLocationTbl.ExcelFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExcelFile\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.ExcelFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTNString {
                get {
                    try {
                        return ((string)(this[this.tableLocationTbl.ATTNStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTNString\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.ATTNStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCString {
                get {
                    try {
                        return ((string)(this[this.tableLocationTbl.CCStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCString\' in table \'LocationTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocationTbl.CCStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRow CountryTblRow {
                get {
                    return ((CountryTblRow)(this.GetParentRow(this.Table.ParentRelations["CountryTblLocationTbl"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CountryTblLocationTbl"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRow CompanyTblRow {
                get {
                    return ((CompanyTblRow)(this.GetParentRow(this.Table.ParentRelations["CompanyTbl_LocationTbl"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CompanyTbl_LocationTbl"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompIDNull() {
                return this.IsNull(this.tableLocationTbl.CompIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompIDNull() {
                this[this.tableLocationTbl.CompIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocNameNull() {
                return this.IsNull(this.tableLocationTbl.LocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocNameNull() {
                this[this.tableLocationTbl.LocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableLocationTbl.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableLocationTbl.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tableLocationTbl.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryIDNull() {
                this[this.tableLocationTbl.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExcelFileNull() {
                return this.IsNull(this.tableLocationTbl.ExcelFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExcelFileNull() {
                this[this.tableLocationTbl.ExcelFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTNStringNull() {
                return this.IsNull(this.tableLocationTbl.ATTNStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTNStringNull() {
                this[this.tableLocationTbl.ATTNStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCStringNull() {
                return this.IsNull(this.tableLocationTbl.CCStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCStringNull() {
                this[this.tableLocationTbl.CCStringColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderLogTblRow : EMDataRow {
            
            private OrderLogTblDataTable tableOrderLogTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderLogTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderLogTbl = ((OrderLogTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableOrderLogTbl.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MillName {
                get {
                    return ((string)(this[this.tableOrderLogTbl.MillNameColumn]));
                }
                set {
                    this[this.tableOrderLogTbl.MillNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrderLogTbl.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    return ((string)(this[this.tableOrderLogTbl.CustomerNameColumn]));
                }
                set {
                    this[this.tableOrderLogTbl.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONumber {
                get {
                    try {
                        return ((string)(this[this.tableOrderLogTbl.PONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONumber\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.PONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MillAcknowledgeNumber {
                get {
                    try {
                        return ((string)(this[this.tableOrderLogTbl.MillAcknowledgeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MillAcknowledgeNumber\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.MillAcknowledgeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SheetTons {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.SheetTonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SheetTons\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.SheetTonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SheetDollars {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.SheetDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SheetDollars\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.SheetDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HRTons {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.HRTonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HRTons\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.HRTonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HRDollars {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.HRDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HRDollars\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.HRDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CFTons {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.CFTonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CFTons\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.CFTonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CFDollars {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.CFDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CFDollars\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.CFDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalDollars {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.TotalDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDollars\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.TotalDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tableOrderLogTbl.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherTons {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.OtherTonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTons\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.OtherTonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherDollars {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.OtherDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDollars\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.OtherDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CoilTons {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.CoilTonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilTons\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.CoilTonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CoilDollars {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderLogTbl.CoilDollarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoilDollars\' in table \'OrderLogTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLogTbl.CoilDollarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableOrderLogTbl.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableOrderLogTbl.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableOrderLogTbl.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableOrderLogTbl.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONumberNull() {
                return this.IsNull(this.tableOrderLogTbl.PONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONumberNull() {
                this[this.tableOrderLogTbl.PONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMillAcknowledgeNumberNull() {
                return this.IsNull(this.tableOrderLogTbl.MillAcknowledgeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMillAcknowledgeNumberNull() {
                this[this.tableOrderLogTbl.MillAcknowledgeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSheetTonsNull() {
                return this.IsNull(this.tableOrderLogTbl.SheetTonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSheetTonsNull() {
                this[this.tableOrderLogTbl.SheetTonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSheetDollarsNull() {
                return this.IsNull(this.tableOrderLogTbl.SheetDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSheetDollarsNull() {
                this[this.tableOrderLogTbl.SheetDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRTonsNull() {
                return this.IsNull(this.tableOrderLogTbl.HRTonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRTonsNull() {
                this[this.tableOrderLogTbl.HRTonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRDollarsNull() {
                return this.IsNull(this.tableOrderLogTbl.HRDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRDollarsNull() {
                this[this.tableOrderLogTbl.HRDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCFTonsNull() {
                return this.IsNull(this.tableOrderLogTbl.CFTonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCFTonsNull() {
                this[this.tableOrderLogTbl.CFTonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCFDollarsNull() {
                return this.IsNull(this.tableOrderLogTbl.CFDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCFDollarsNull() {
                this[this.tableOrderLogTbl.CFDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDollarsNull() {
                return this.IsNull(this.tableOrderLogTbl.TotalDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDollarsNull() {
                this[this.tableOrderLogTbl.TotalDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tableOrderLogTbl.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tableOrderLogTbl.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherTonsNull() {
                return this.IsNull(this.tableOrderLogTbl.OtherTonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherTonsNull() {
                this[this.tableOrderLogTbl.OtherTonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherDollarsNull() {
                return this.IsNull(this.tableOrderLogTbl.OtherDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherDollarsNull() {
                this[this.tableOrderLogTbl.OtherDollarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoilTonsNull() {
                return this.IsNull(this.tableOrderLogTbl.CoilTonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoilTonsNull() {
                this[this.tableOrderLogTbl.CoilTonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoilDollarsNull() {
                return this.IsNull(this.tableOrderLogTbl.CoilDollarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoilDollarsNull() {
                this[this.tableOrderLogTbl.CoilDollarsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyTblRow : EMDataRow {
            
            private CompanyTblDataTable tableCompanyTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompanyTbl = ((CompanyTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompID {
                get {
                    return ((int)(this[this.tableCompanyTbl.CompIDColumn]));
                }
                set {
                    this[this.tableCompanyTbl.CompIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompName {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTbl.CompNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompName\' in table \'CompanyTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTbl.CompNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompType {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTbl.CompTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompType\' in table \'CompanyTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTbl.CompTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContainerExcelFile {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTbl.ContainerExcelFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContainerExcelFile\' in table \'CompanyTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTbl.ContainerExcelFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompNameAbbreviation {
                get {
                    try {
                        return ((string)(this[this.tableCompanyTbl.CompNameAbbreviationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompNameAbbreviation\' in table \'CompanyTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyTbl.CompNameAbbreviationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompNameNull() {
                return this.IsNull(this.tableCompanyTbl.CompNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompNameNull() {
                this[this.tableCompanyTbl.CompNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompTypeNull() {
                return this.IsNull(this.tableCompanyTbl.CompTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompTypeNull() {
                this[this.tableCompanyTbl.CompTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContainerExcelFileNull() {
                return this.IsNull(this.tableCompanyTbl.ContainerExcelFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContainerExcelFileNull() {
                this[this.tableCompanyTbl.ContainerExcelFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompNameAbbreviationNull() {
                return this.IsNull(this.tableCompanyTbl.CompNameAbbreviationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompNameAbbreviationNull() {
                this[this.tableCompanyTbl.CompNameAbbreviationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow[] GetLocationTblRows() {
                if ((this.Table.ChildRelations["CompanyTbl_LocationTbl"] == null)) {
                    return new LocationTblRow[0];
                }
                else {
                    return ((LocationTblRow[])(base.GetChildRows(this.Table.ChildRelations["CompanyTbl_LocationTbl"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BalanceRptPORowChangeEvent : global::System.EventArgs {
            
            private BalanceRptPORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORowChangeEvent(BalanceRptPORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRptPORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BalanceRtpPOItemRowChangeEvent : global::System.EventArgs {
            
            private BalanceRtpPOItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRowChangeEvent(BalanceRtpPOItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceRtpPOItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POItemTblRowChangeEvent : global::System.EventArgs {
            
            private POItemTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRowChangeEvent(POItemTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POItemTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POHeaderTblRowChangeEvent : global::System.EventArgs {
            
            private POHeaderTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRowChangeEvent(POHeaderTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POHeaderTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContainerTblRowChangeEvent : global::System.EventArgs {
            
            private ContainerTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRowChangeEvent(ContainerTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SurchargeRateTblRowChangeEvent : global::System.EventArgs {
            
            private SurchargeRateTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblRowChangeEvent(SurchargeRateTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SurchargeRateTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContBundleTblRowChangeEvent : global::System.EventArgs {
            
            private ContBundleTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRowChangeEvent(ContBundleTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContBundleTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KeyNumberTbleRowChangeEvent : global::System.EventArgs {
            
            private KeyNumberTbleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleRowChangeEvent(KeyNumberTbleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KeyNumberTbleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentTermsTblRowChangeEvent : global::System.EventArgs {
            
            private PaymentTermsTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblRowChangeEvent(PaymentTermsTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentTermsTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ShippingCodeTblRowChangeEvent : global::System.EventArgs {
            
            private ShippingCodeTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblRowChangeEvent(ShippingCodeTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShippingCodeTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemTblRowChangeEvent : global::System.EventArgs {
            
            private ItemTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRowChangeEvent(ItemTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POFileTblRowChangeEvent : global::System.EventArgs {
            
            private POFileTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRowChangeEvent(POFileTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POFileTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FileTblRowChangeEvent : global::System.EventArgs {
            
            private FileTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRowChangeEvent(FileTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FileTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CountryTblRowChangeEvent : global::System.EventArgs {
            
            private CountryTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRowChangeEvent(CountryTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CountryTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContactsTblRowChangeEvent : global::System.EventArgs {
            
            private ContactsTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblRowChangeEvent(ContactsTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContainerTemplateTblRowChangeEvent : global::System.EventArgs {
            
            private ContainerTemplateTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblRowChangeEvent(ContainerTemplateTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContainerTemplateTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BOLItemTblRowChangeEvent : global::System.EventArgs {
            
            private BOLItemTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRowChangeEvent(BOLItemTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLItemTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FinishTblRowChangeEvent : global::System.EventArgs {
            
            private FinishTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblRowChangeEvent(FinishTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinishTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CurrencyTblRowChangeEvent : global::System.EventArgs {
            
            private CurrencyTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblRowChangeEvent(CurrencyTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurrencyTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TreatmentTblRowChangeEvent : global::System.EventArgs {
            
            private TreatmentTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblRowChangeEvent(TreatmentTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TreatmentTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BOLTblRowChangeEvent : global::System.EventArgs {
            
            private BOLTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRowChangeEvent(BOLTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOLTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LocationTblRowChangeEvent : global::System.EventArgs {
            
            private LocationTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRowChangeEvent(LocationTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocationTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderLogTblRowChangeEvent : global::System.EventArgs {
            
            private OrderLogTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderLogTblRowChangeEvent(OrderLogTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderLogTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyTblRowChangeEvent : global::System.EventArgs {
            
            private CompanyTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRowChangeEvent(CompanyTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EM.EMDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BalanceRptPOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BalanceRptPOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BalanceRptPO";
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("PONumber", "PONumber");
            tableMapping.ColumnMappings.Add("OpenCount", "TotalCount");
            tableMapping.ColumnMappings.Add("ClosedCount", "ClosedCount");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `BalanceRptPO` WHERE ((`POID` = ?) AND ((? = 1 AND `PONumber` IS NULL" +
                ") OR (`PONumber` = ?)) AND ((? = 1 AND `OpenCount` IS NULL) OR (`OpenCount` = ?)" +
                ") AND ((? = 1 AND `ClosedCount` IS NULL) OR (`ClosedCount` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PONumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OpenCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OpenCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OpenCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OpenCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `BalanceRptPO` (`POID`, `PONumber`, `OpenCount`, `ClosedCount`) VALUE" +
                "S (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OpenCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OpenCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `BalanceRptPO` SET `POID` = ?, `PONumber` = ?, `OpenCount` = ?, `ClosedCount` = ? WHERE ((`POID` = ?) AND ((? = 1 AND `PONumber` IS NULL) OR (`PONumber` = ?)) AND ((? = 1 AND `OpenCount` IS NULL) OR (`OpenCount` = ?)) AND ((? = 1 AND `ClosedCount` IS NULL) OR (`ClosedCount` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OpenCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OpenCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PONumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OpenCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OpenCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OpenCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OpenCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT POID, PONumber, OpenCount, ClosedCount FROM BalanceRptPO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.BalanceRptPODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.BalanceRptPODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.BalanceRptPODataTable dataTable = new EMDataSet.BalanceRptPODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.BalanceRptPODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BalanceRptPO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_POID, string Original_PONumber, global::System.Nullable<int> Original_OpenCount, global::System.Nullable<int> Original_ClosedCount) {
            if ((Original_POID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_PONumber == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PONumber));
            }
            if ((Original_OpenCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_OpenCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ClosedCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ClosedCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> POID, string PONumber, global::System.Nullable<int> OpenCount, global::System.Nullable<int> ClosedCount) {
            if ((POID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PONumber == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PONumber));
            }
            if ((OpenCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(OpenCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ClosedCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ClosedCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> POID, string PONumber, global::System.Nullable<int> OpenCount, global::System.Nullable<int> ClosedCount, global::System.Nullable<int> Original_POID, string Original_PONumber, global::System.Nullable<int> Original_OpenCount, global::System.Nullable<int> Original_ClosedCount) {
            if ((POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PONumber));
            }
            if ((OpenCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(OpenCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ClosedCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ClosedCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_PONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_PONumber));
            }
            if ((Original_OpenCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_OpenCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ClosedCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ClosedCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PONumber, global::System.Nullable<int> OpenCount, global::System.Nullable<int> ClosedCount, global::System.Nullable<int> Original_POID, string Original_PONumber, global::System.Nullable<int> Original_OpenCount, global::System.Nullable<int> Original_ClosedCount) {
            return this.Update(Original_POID, PONumber, OpenCount, ClosedCount, Original_POID, Original_PONumber, Original_OpenCount, Original_ClosedCount);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BalanceRtpPOItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BalanceRtpPOItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BalanceRtpPOItem";
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("POItemNumber", "POItemNumber");
            tableMapping.ColumnMappings.Add("Grade", "Grade");
            tableMapping.ColumnMappings.Add("ClosedCount", "ClosedCount");
            tableMapping.ColumnMappings.Add("TotalCount", "TotalCount");
            tableMapping.ColumnMappings.Add("ClosedPercent", "ClosedPercent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `BalanceRtpPOItem` WHERE ((`POID` = ?) AND ((? = 1 AND `POItemNumber` IS NULL) OR (`POItemNumber` = ?)) AND ((? = 1 AND `Grade` IS NULL) OR (`Grade` = ?)) AND ((? = 1 AND `ClosedCount` IS NULL) OR (`ClosedCount` = ?)) AND ((? = 1 AND `TotalCount` IS NULL) OR (`TotalCount` = ?)) AND ((? = 1 AND `ClosedPercent` IS NULL) OR (`ClosedPercent` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Grade", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Grade", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Grade", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Grade", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ClosedCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TotalCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TotalCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TotalCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TotalCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ClosedPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedPercent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ClosedPercent", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedPercent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `BalanceRtpPOItem` (`POID`, `POItemNumber`, `Grade`, `ClosedCount`, `" +
                "TotalCount`, `ClosedPercent`) VALUES (?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Grade", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Grade", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ClosedCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TotalCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TotalCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ClosedPercent", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedPercent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `BalanceRtpPOItem` SET `POID` = ?, `POItemNumber` = ?, `Grade` = ?, `ClosedCount` = ?, `TotalCount` = ?, `ClosedPercent` = ? WHERE ((`POID` = ?) AND ((? = 1 AND `POItemNumber` IS NULL) OR (`POItemNumber` = ?)) AND ((? = 1 AND `Grade` IS NULL) OR (`Grade` = ?)) AND ((? = 1 AND `ClosedCount` IS NULL) OR (`ClosedCount` = ?)) AND ((? = 1 AND `TotalCount` IS NULL) OR (`TotalCount` = ?)) AND ((? = 1 AND `ClosedPercent` IS NULL) OR (`ClosedPercent` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Grade", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Grade", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ClosedCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TotalCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TotalCount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ClosedPercent", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedPercent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Grade", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Grade", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Grade", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Grade", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ClosedCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ClosedCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TotalCount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TotalCount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TotalCount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TotalCount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ClosedPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedPercent", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ClosedPercent", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ClosedPercent", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT POID, POItemNumber, Grade, ClosedCount, TotalCount, ClosedPercent FROM Bal" +
                "anceRtpPOItem";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.BalanceRtpPOItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.BalanceRtpPOItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.BalanceRtpPOItemDataTable dataTable = new EMDataSet.BalanceRtpPOItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.BalanceRtpPOItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BalanceRtpPOItem");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_POID, int Original_POItemNumber, string Original_Grade, global::System.Nullable<decimal> Original_ClosedCount, global::System.Nullable<decimal> Original_TotalCount, global::System.Nullable<decimal> Original_ClosedPercent) {
            if ((Original_POID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_POItemNumber));
            if ((Original_Grade == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Grade));
            }
            if ((Original_ClosedCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_ClosedCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_TotalCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ClosedPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_ClosedPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> POID, int POItemNumber, string Grade, global::System.Nullable<decimal> ClosedCount, global::System.Nullable<decimal> TotalCount, global::System.Nullable<decimal> ClosedPercent) {
            if ((POID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(POItemNumber));
            if ((Grade == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Grade));
            }
            if ((ClosedCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ClosedCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TotalCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TotalCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ClosedPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ClosedPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> POID, int POItemNumber, string Grade, global::System.Nullable<decimal> ClosedCount, global::System.Nullable<decimal> TotalCount, global::System.Nullable<decimal> ClosedPercent, global::System.Nullable<int> Original_POID, int Original_POItemNumber, string Original_Grade, global::System.Nullable<decimal> Original_ClosedCount, global::System.Nullable<decimal> Original_TotalCount, global::System.Nullable<decimal> Original_ClosedPercent) {
            if ((POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(POItemNumber));
            if ((Grade == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Grade));
            }
            if ((ClosedCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ClosedCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TotalCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TotalCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ClosedPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ClosedPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_POItemNumber));
            if ((Original_Grade == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Grade));
            }
            if ((Original_ClosedCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_ClosedCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_TotalCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ClosedPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_ClosedPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> POID, string Grade, global::System.Nullable<decimal> ClosedCount, global::System.Nullable<decimal> TotalCount, global::System.Nullable<decimal> ClosedPercent, global::System.Nullable<int> Original_POID, int Original_POItemNumber, string Original_Grade, global::System.Nullable<decimal> Original_ClosedCount, global::System.Nullable<decimal> Original_TotalCount, global::System.Nullable<decimal> Original_ClosedPercent) {
            return this.Update(POID, Original_POItemNumber, Grade, ClosedCount, TotalCount, ClosedPercent, Original_POID, Original_POItemNumber, Original_Grade, Original_ClosedCount, Original_TotalCount, Original_ClosedPercent);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class POItemTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POItemTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "POItemTbl";
            tableMapping.ColumnMappings.Add("POItemNumber", "POItemNumber");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("SeqNumber", "SeqNumber");
            tableMapping.ColumnMappings.Add("ItemNameObsolete", "ItemNameObsolete");
            tableMapping.ColumnMappings.Add("ItemDesc", "ItemDesc");
            tableMapping.ColumnMappings.Add("Length", "Length");
            tableMapping.ColumnMappings.Add("SizeOfItem", "SizeOfItem");
            tableMapping.ColumnMappings.Add("ItemAccessCode", "ItemAccessCode");
            tableMapping.ColumnMappings.Add("Qty", "Qty");
            tableMapping.ColumnMappings.Add("UM", "UM");
            tableMapping.ColumnMappings.Add("DateRequired", "DateRequired");
            tableMapping.ColumnMappings.Add("AcknowledgeDate", "AcknowledgeDate");
            tableMapping.ColumnMappings.Add("MillShipDate", "MillShipDate");
            tableMapping.ColumnMappings.Add("CancelDate", "CancelDate");
            tableMapping.ColumnMappings.Add("CustRate", "CustRate");
            tableMapping.ColumnMappings.Add("CommRate", "CommRate");
            tableMapping.ColumnMappings.Add("CustAmount", "CustAmount");
            tableMapping.ColumnMappings.Add("CommAmount", "CommAmount");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("FinishID", "FinishID");
            tableMapping.ColumnMappings.Add("ItemID", "ItemID");
            tableMapping.ColumnMappings.Add("TreatmentID", "TreatmentID");
            tableMapping.ColumnMappings.Add("MillConfirmationNumber", "MillConfirmationNumber");
            tableMapping.ColumnMappings.Add("MillAcknowledgeDate", "MillAcknowledgeDate");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tblPOItem2` WHERE ((`POItemNumber` = ?) AND ((? = 1 AND `POID` IS NULL) OR (`POID` = ?)) AND ((? = 1 AND `SeqNumber` IS NULL) OR (`SeqNumber` = ?)) AND ((? = 1 AND `ItemNameObsolete` IS NULL) OR (`ItemNameObsolete` = ?)) AND ((? = 1 AND `Length` IS NULL) OR (`Length` = ?)) AND ((? = 1 AND `SizeOfItem` IS NULL) OR (`SizeOfItem` = ?)) AND ((? = 1 AND `ItemAccessCode` IS NULL) OR (`ItemAccessCode` = ?)) AND ((? = 1 AND `Qty` IS NULL) OR (`Qty` = ?)) AND ((? = 1 AND `UM` IS NULL) OR (`UM` = ?)) AND ((? = 1 AND `DateRequired` IS NULL) OR (`DateRequired` = ?)) AND ((? = 1 AND `AcknowledgeDate` IS NULL) OR (`AcknowledgeDate` = ?)) AND ((? = 1 AND `MillShipDate` IS NULL) OR (`MillShipDate` = ?)) AND ((? = 1 AND `CancelDate` IS NULL) OR (`CancelDate` = ?)) AND ((? = 1 AND `CustRate` IS NULL) OR (`CustRate` = ?)) AND ((? = 1 AND `CommRate` IS NULL) OR (`CommRate` = ?)) AND ((? = 1 AND `CustAmount` IS NULL) OR (`CustAmount` = ?)) AND ((? = 1 AND `CommAmount` IS NULL) OR (`CommAmount` = ?)) AND ((? = 1 AND `FinishID` IS NULL) OR (`FinishID` = ?)) AND ((? = 1 AND `ItemID` IS NULL) OR (`ItemID` = ?)) AND ((? = 1 AND `TreatmentID` IS NULL) OR (`TreatmentID` = ?)) AND ((? = 1 AND `MillConfirmationNumber` IS NULL) OR (`MillConfirmationNumber` = ?)) AND ((? = 1 AND `MillAcknowledgeDate` IS NULL) OR (`MillAcknowledgeDate` = ?)) AND ((? = 1 AND `InvoiceNumber` IS NULL) OR (`InvoiceNumber` = ?)) AND ((? = 1 AND `InvoiceDate` IS NULL) OR (`InvoiceDate` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SeqNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SeqNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Length", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Length", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SizeOfItem", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SizeOfItem", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SizeOfItem", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SizeOfItem", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemAccessCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemAccessCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemAccessCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemAccessCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DateRequired", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateRequired", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DateRequired", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateRequired", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AcknowledgeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AcknowledgeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AcknowledgeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillShipDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillShipDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillShipDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CancelDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CommRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CommRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustAmount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustAmount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustAmount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CommAmount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommAmount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CommAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommAmount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TreatmentID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TreatmentID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TreatmentID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TreatmentID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tblPOItem2` (`POItemNumber`, `POID`, `SeqNumber`, `ItemNameObsolete`, `ItemDesc`, `Length`, `SizeOfItem`, `ItemAccessCode`, `Qty`, `UM`, `DateRequired`, `AcknowledgeDate`, `MillShipDate`, `CancelDate`, `CustRate`, `CommRate`, `CustAmount`, `CommAmount`, `Comments`, `FinishID`, `ItemID`, `TreatmentID`, `MillConfirmationNumber`, `MillAcknowledgeDate`, `InvoiceNumber`, `InvoiceDate`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SeqNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Length", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SizeOfItem", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SizeOfItem", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemAccessCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemAccessCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DateRequired", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateRequired", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AcknowledgeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillShipDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CommRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustAmount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CommAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommAmount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TreatmentID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TreatmentID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tblPOItem2` SET `POItemNumber` = ?, `POID` = ?, `SeqNumber` = ?, `ItemNam" +
                "eObsolete` = ?, `ItemDesc` = ?, `Length` = ?, `SizeOfItem` = ?, `ItemAccessCode`" +
                " = ?, `Qty` = ?, `UM` = ?, `DateRequired` = ?, `AcknowledgeDate` = ?, `MillShipD" +
                "ate` = ?, `CancelDate` = ?, `CustRate` = ?, `CommRate` = ?, `CustAmount` = ?, `C" +
                "ommAmount` = ?, `Comments` = ?, `FinishID` = ?, `ItemID` = ?, `TreatmentID` = ?," +
                " `MillConfirmationNumber` = ?, `MillAcknowledgeDate` = ?, `InvoiceNumber` = ?, `" +
                "InvoiceDate` = ? WHERE ((`POItemNumber` = ?) AND ((? = 1 AND `POID` IS NULL) OR " +
                "(`POID` = ?)) AND ((? = 1 AND `SeqNumber` IS NULL) OR (`SeqNumber` = ?)) AND ((?" +
                " = 1 AND `ItemNameObsolete` IS NULL) OR (`ItemNameObsolete` = ?)) AND ((? = 1 AN" +
                "D `Length` IS NULL) OR (`Length` = ?)) AND ((? = 1 AND `SizeOfItem` IS NULL) OR " +
                "(`SizeOfItem` = ?)) AND ((? = 1 AND `ItemAccessCode` IS NULL) OR (`ItemAccessCod" +
                "e` = ?)) AND ((? = 1 AND `Qty` IS NULL) OR (`Qty` = ?)) AND ((? = 1 AND `UM` IS " +
                "NULL) OR (`UM` = ?)) AND ((? = 1 AND `DateRequired` IS NULL) OR (`DateRequired` " +
                "= ?)) AND ((? = 1 AND `AcknowledgeDate` IS NULL) OR (`AcknowledgeDate` = ?)) AND" +
                " ((? = 1 AND `MillShipDate` IS NULL) OR (`MillShipDate` = ?)) AND ((? = 1 AND `C" +
                "ancelDate` IS NULL) OR (`CancelDate` = ?)) AND ((? = 1 AND `CustRate` IS NULL) O" +
                "R (`CustRate` = ?)) AND ((? = 1 AND `CommRate` IS NULL) OR (`CommRate` = ?)) AND" +
                " ((? = 1 AND `CustAmount` IS NULL) OR (`CustAmount` = ?)) AND ((? = 1 AND `CommA" +
                "mount` IS NULL) OR (`CommAmount` = ?)) AND ((? = 1 AND `FinishID` IS NULL) OR (`" +
                "FinishID` = ?)) AND ((? = 1 AND `ItemID` IS NULL) OR (`ItemID` = ?)) AND ((? = 1" +
                " AND `TreatmentID` IS NULL) OR (`TreatmentID` = ?)) AND ((? = 1 AND `MillConfirm" +
                "ationNumber` IS NULL) OR (`MillConfirmationNumber` = ?)) AND ((? = 1 AND `MillAc" +
                "knowledgeDate` IS NULL) OR (`MillAcknowledgeDate` = ?)) AND ((? = 1 AND `Invoice" +
                "Number` IS NULL) OR (`InvoiceNumber` = ?)) AND ((? = 1 AND `InvoiceDate` IS NULL" +
                ") OR (`InvoiceDate` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SeqNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Length", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SizeOfItem", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SizeOfItem", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemAccessCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemAccessCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DateRequired", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateRequired", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AcknowledgeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillShipDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CommRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustAmount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CommAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommAmount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TreatmentID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TreatmentID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SeqNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SeqNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Length", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Length", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Length", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SizeOfItem", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SizeOfItem", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SizeOfItem", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SizeOfItem", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemAccessCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemAccessCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemAccessCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemAccessCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DateRequired", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateRequired", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DateRequired", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateRequired", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AcknowledgeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AcknowledgeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AcknowledgeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillShipDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillShipDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillShipDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CancelDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CommRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CommRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustAmount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustAmount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustAmount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CommAmount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommAmount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CommAmount", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CommAmount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TreatmentID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TreatmentID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TreatmentID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TreatmentID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT POItemNumber, POID, SeqNumber, ItemNameObsolete, ItemDesc, Length, SizeOfItem, ItemAccessCode, Qty, UM, DateRequired, AcknowledgeDate, MillShipDate, CancelDate, CustRate, CommRate, CustAmount, CommAmount, Comments, FinishID, ItemID, TreatmentID, MillConfirmationNumber, MillAcknowledgeDate, InvoiceNumber, InvoiceDate FROM tblPOItem2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.POItemTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.POItemTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.POItemTblDataTable dataTable = new EMDataSet.POItemTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.POItemTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "POItemTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    global::System.Nullable<int> Original_POItemNumber, 
                    global::System.Nullable<int> Original_POID, 
                    global::System.Nullable<int> Original_SeqNumber, 
                    string Original_ItemNameObsolete, 
                    string Original_Length, 
                    string Original_SizeOfItem, 
                    string Original_ItemAccessCode, 
                    global::System.Nullable<decimal> Original_Qty, 
                    string Original_UM, 
                    global::System.Nullable<global::System.DateTime> Original_DateRequired, 
                    global::System.Nullable<global::System.DateTime> Original_AcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> Original_MillShipDate, 
                    global::System.Nullable<global::System.DateTime> Original_CancelDate, 
                    global::System.Nullable<decimal> Original_CustRate, 
                    global::System.Nullable<decimal> Original_CommRate, 
                    global::System.Nullable<decimal> Original_CustAmount, 
                    global::System.Nullable<decimal> Original_CommAmount, 
                    global::System.Nullable<int> Original_FinishID, 
                    global::System.Nullable<int> Original_ItemID, 
                    global::System.Nullable<int> Original_TreatmentID, 
                    string Original_MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDate, 
                    string Original_InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate) {
            if ((Original_POItemNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_POItemNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_POID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_SeqNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SeqNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ItemNameObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ItemNameObsolete));
            }
            if ((Original_Length == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Length));
            }
            if ((Original_SizeOfItem == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SizeOfItem));
            }
            if ((Original_ItemAccessCode == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ItemAccessCode));
            }
            if ((Original_Qty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_Qty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_UM == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_UM));
            }
            if ((Original_DateRequired.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_DateRequired.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_AcknowledgeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_AcknowledgeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_MillShipDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_MillShipDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_CancelDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_CancelDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_CustRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_CustRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_CommRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_CommRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_CustAmount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_CustAmount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_CommAmount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_CommAmount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_FinishID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_FinishID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ItemID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_ItemID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_TreatmentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_TreatmentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_MillConfirmationNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_MillConfirmationNumber));
            }
            if ((Original_MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> POItemNumber, 
                    global::System.Nullable<int> POID, 
                    global::System.Nullable<int> SeqNumber, 
                    string ItemNameObsolete, 
                    string ItemDesc, 
                    string Length, 
                    string SizeOfItem, 
                    string ItemAccessCode, 
                    global::System.Nullable<decimal> Qty, 
                    string UM, 
                    global::System.Nullable<global::System.DateTime> DateRequired, 
                    global::System.Nullable<global::System.DateTime> AcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> MillShipDate, 
                    global::System.Nullable<global::System.DateTime> CancelDate, 
                    global::System.Nullable<decimal> CustRate, 
                    global::System.Nullable<decimal> CommRate, 
                    global::System.Nullable<decimal> CustAmount, 
                    global::System.Nullable<decimal> CommAmount, 
                    string Comments, 
                    global::System.Nullable<int> FinishID, 
                    global::System.Nullable<int> ItemID, 
                    global::System.Nullable<int> TreatmentID, 
                    string MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDate, 
                    string InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate) {
            if ((POItemNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(POItemNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((POID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SeqNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SeqNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ItemNameObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ItemNameObsolete));
            }
            if ((ItemDesc == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ItemDesc));
            }
            if ((Length == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Length));
            }
            if ((SizeOfItem == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SizeOfItem));
            }
            if ((ItemAccessCode == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ItemAccessCode));
            }
            if ((Qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((UM == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(UM));
            }
            if ((DateRequired.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DateRequired.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AcknowledgeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(AcknowledgeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MillShipDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(MillShipDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CancelDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(CancelDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CustRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(CustRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((CommRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(CommRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((CustAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(CustAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CommAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(CommAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Comments));
            }
            if ((FinishID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(FinishID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ItemID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(ItemID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((TreatmentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(TreatmentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MillConfirmationNumber == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(MillConfirmationNumber));
            }
            if ((MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNumber == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(InvoiceNumber));
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> POItemNumber, 
                    global::System.Nullable<int> POID, 
                    global::System.Nullable<int> SeqNumber, 
                    string ItemNameObsolete, 
                    string ItemDesc, 
                    string Length, 
                    string SizeOfItem, 
                    string ItemAccessCode, 
                    global::System.Nullable<decimal> Qty, 
                    string UM, 
                    global::System.Nullable<global::System.DateTime> DateRequired, 
                    global::System.Nullable<global::System.DateTime> AcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> MillShipDate, 
                    global::System.Nullable<global::System.DateTime> CancelDate, 
                    global::System.Nullable<decimal> CustRate, 
                    global::System.Nullable<decimal> CommRate, 
                    global::System.Nullable<decimal> CustAmount, 
                    global::System.Nullable<decimal> CommAmount, 
                    string Comments, 
                    global::System.Nullable<int> FinishID, 
                    global::System.Nullable<int> ItemID, 
                    global::System.Nullable<int> TreatmentID, 
                    string MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDate, 
                    string InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<int> Original_POItemNumber, 
                    global::System.Nullable<int> Original_POID, 
                    global::System.Nullable<int> Original_SeqNumber, 
                    string Original_ItemNameObsolete, 
                    string Original_Length, 
                    string Original_SizeOfItem, 
                    string Original_ItemAccessCode, 
                    global::System.Nullable<decimal> Original_Qty, 
                    string Original_UM, 
                    global::System.Nullable<global::System.DateTime> Original_DateRequired, 
                    global::System.Nullable<global::System.DateTime> Original_AcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> Original_MillShipDate, 
                    global::System.Nullable<global::System.DateTime> Original_CancelDate, 
                    global::System.Nullable<decimal> Original_CustRate, 
                    global::System.Nullable<decimal> Original_CommRate, 
                    global::System.Nullable<decimal> Original_CustAmount, 
                    global::System.Nullable<decimal> Original_CommAmount, 
                    global::System.Nullable<int> Original_FinishID, 
                    global::System.Nullable<int> Original_ItemID, 
                    global::System.Nullable<int> Original_TreatmentID, 
                    string Original_MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDate, 
                    string Original_InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate) {
            if ((POItemNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(POItemNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SeqNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SeqNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ItemNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ItemNameObsolete));
            }
            if ((ItemDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ItemDesc));
            }
            if ((Length == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Length));
            }
            if ((SizeOfItem == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SizeOfItem));
            }
            if ((ItemAccessCode == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ItemAccessCode));
            }
            if ((Qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((UM == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(UM));
            }
            if ((DateRequired.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DateRequired.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AcknowledgeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(AcknowledgeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((MillShipDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(MillShipDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CancelDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(CancelDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CustRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(CustRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((CommRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(CommRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((CustAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(CustAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CommAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(CommAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Comments));
            }
            if ((FinishID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(FinishID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ItemID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(ItemID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((TreatmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(TreatmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MillConfirmationNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(MillConfirmationNumber));
            }
            if ((MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(InvoiceNumber));
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_POItemNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_POItemNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_SeqNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_SeqNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_ItemNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ItemNameObsolete));
            }
            if ((Original_Length == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Length));
            }
            if ((Original_SizeOfItem == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_SizeOfItem));
            }
            if ((Original_ItemAccessCode == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_ItemAccessCode));
            }
            if ((Original_Qty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_Qty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_UM == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_UM));
            }
            if ((Original_DateRequired.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_DateRequired.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_AcknowledgeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_AcknowledgeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_MillShipDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_MillShipDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_CancelDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(Original_CancelDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_CustRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_CustRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_CommRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_CommRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_CustAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_CustAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_CommAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Original_CommAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_FinishID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_FinishID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ItemID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_ItemID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_TreatmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_TreatmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_MillConfirmationNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_MillConfirmationNumber));
            }
            if ((Original_MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(Original_MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> POID, 
                    global::System.Nullable<int> SeqNumber, 
                    string ItemNameObsolete, 
                    string ItemDesc, 
                    string Length, 
                    string SizeOfItem, 
                    string ItemAccessCode, 
                    global::System.Nullable<decimal> Qty, 
                    string UM, 
                    global::System.Nullable<global::System.DateTime> DateRequired, 
                    global::System.Nullable<global::System.DateTime> AcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> MillShipDate, 
                    global::System.Nullable<global::System.DateTime> CancelDate, 
                    global::System.Nullable<decimal> CustRate, 
                    global::System.Nullable<decimal> CommRate, 
                    global::System.Nullable<decimal> CustAmount, 
                    global::System.Nullable<decimal> CommAmount, 
                    string Comments, 
                    global::System.Nullable<int> FinishID, 
                    global::System.Nullable<int> ItemID, 
                    global::System.Nullable<int> TreatmentID, 
                    string MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDate, 
                    string InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<int> Original_POItemNumber, 
                    global::System.Nullable<int> Original_POID, 
                    global::System.Nullable<int> Original_SeqNumber, 
                    string Original_ItemNameObsolete, 
                    string Original_Length, 
                    string Original_SizeOfItem, 
                    string Original_ItemAccessCode, 
                    global::System.Nullable<decimal> Original_Qty, 
                    string Original_UM, 
                    global::System.Nullable<global::System.DateTime> Original_DateRequired, 
                    global::System.Nullable<global::System.DateTime> Original_AcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> Original_MillShipDate, 
                    global::System.Nullable<global::System.DateTime> Original_CancelDate, 
                    global::System.Nullable<decimal> Original_CustRate, 
                    global::System.Nullable<decimal> Original_CommRate, 
                    global::System.Nullable<decimal> Original_CustAmount, 
                    global::System.Nullable<decimal> Original_CommAmount, 
                    global::System.Nullable<int> Original_FinishID, 
                    global::System.Nullable<int> Original_ItemID, 
                    global::System.Nullable<int> Original_TreatmentID, 
                    string Original_MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDate, 
                    string Original_InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate) {
            return this.Update(Original_POItemNumber, POID, SeqNumber, ItemNameObsolete, ItemDesc, Length, SizeOfItem, ItemAccessCode, Qty, UM, DateRequired, AcknowledgeDate, MillShipDate, CancelDate, CustRate, CommRate, CustAmount, CommAmount, Comments, FinishID, ItemID, TreatmentID, MillConfirmationNumber, MillAcknowledgeDate, InvoiceNumber, InvoiceDate, Original_POItemNumber, Original_POID, Original_SeqNumber, Original_ItemNameObsolete, Original_Length, Original_SizeOfItem, Original_ItemAccessCode, Original_Qty, Original_UM, Original_DateRequired, Original_AcknowledgeDate, Original_MillShipDate, Original_CancelDate, Original_CustRate, Original_CommRate, Original_CustAmount, Original_CommAmount, Original_FinishID, Original_ItemID, Original_TreatmentID, Original_MillConfirmationNumber, Original_MillAcknowledgeDate, Original_InvoiceNumber, Original_InvoiceDate);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class POHeaderTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POHeaderTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "POHeaderTbl";
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("PONumber", "PONumber");
            tableMapping.ColumnMappings.Add("PODate", "PODate");
            tableMapping.ColumnMappings.Add("VendCompany", "VendCompany");
            tableMapping.ColumnMappings.Add("VendNameObsolete", "VendNameObsolete");
            tableMapping.ColumnMappings.Add("VendPhone", "VendPhone");
            tableMapping.ColumnMappings.Add("VendFax", "VendFax");
            tableMapping.ColumnMappings.Add("VendContact", "VendContact");
            tableMapping.ColumnMappings.Add("VendEMail", "VendEMail");
            tableMapping.ColumnMappings.Add("VendAddressObsolete", "VendAddressObsolete");
            tableMapping.ColumnMappings.Add("VendCountryObsolete", "VendCountryObsolete");
            tableMapping.ColumnMappings.Add("ShipToCompanyObsolete", "ShipToCompanyObsolete");
            tableMapping.ColumnMappings.Add("ShipToNameObsolete", "ShipToNameObsolete");
            tableMapping.ColumnMappings.Add("ShipToPhone", "ShipToPhone");
            tableMapping.ColumnMappings.Add("ShipToFax", "ShipToFax");
            tableMapping.ColumnMappings.Add("ShipToContact", "ShipToContact");
            tableMapping.ColumnMappings.Add("ShipToEMail", "ShipToEMail");
            tableMapping.ColumnMappings.Add("ShipToAddressObsolete", "ShipToAddressObsolete");
            tableMapping.ColumnMappings.Add("ShipToCountryObsolete", "ShipToCountryObsolete");
            tableMapping.ColumnMappings.Add("Terms", "Terms");
            tableMapping.ColumnMappings.Add("ShipCode", "ShipCode");
            tableMapping.ColumnMappings.Add("FOB", "FOB");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("USTotal", "USTotal");
            tableMapping.ColumnMappings.Add("OtherTotal", "OtherTotal");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("CancelDate", "CancelDate");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("VendLocationNameObsolete", "VendLocationNameObsolete");
            tableMapping.ColumnMappings.Add("ShipToLocationNameObsolete", "ShipToLocationNameObsolete");
            tableMapping.ColumnMappings.Add("MillConfirmationNumber", "MillConfirmationNumber");
            tableMapping.ColumnMappings.Add("MillAcknowledgeDate", "MillAcknowledgeDate");
            tableMapping.ColumnMappings.Add("ExchangeDate", "ExchangeDate");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("CustomerLocationID", "CustomerLocationID");
            tableMapping.ColumnMappings.Add("MillID", "MillID");
            tableMapping.ColumnMappings.Add("MillLocationID", "MillLocationID");
            tableMapping.ColumnMappings.Add("SurchargesInEffect", "SurchargesInEffect");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("MillAcknowledgeDateRevised", "MillAcknowledgeDateRevised");
            tableMapping.ColumnMappings.Add("VendContactID", "VendContactID");
            tableMapping.ColumnMappings.Add("ShipToContactID", "ShipToContactID");
            tableMapping.ColumnMappings.Add("MillConfirmationAppliesToEntirePO", "MillConfirmationAppliesToEntirePO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `tblPOHeader2` WHERE ((`POID` = ?) AND ((? = 1 AND `PONumber` IS NULL" +
                ") OR (`PONumber` = ?)) AND ((? = 1 AND `PODate` IS NULL) OR (`PODate` = ?)) AND " +
                "((? = 1 AND `VendCompany` IS NULL) OR (`VendCompany` = ?)) AND ((? = 1 AND `Vend" +
                "NameObsolete` IS NULL) OR (`VendNameObsolete` = ?)) AND ((? = 1 AND `VendPhone` " +
                "IS NULL) OR (`VendPhone` = ?)) AND ((? = 1 AND `VendFax` IS NULL) OR (`VendFax` " +
                "= ?)) AND ((? = 1 AND `VendContact` IS NULL) OR (`VendContact` = ?)) AND ((? = 1" +
                " AND `VendEMail` IS NULL) OR (`VendEMail` = ?)) AND ((? = 1 AND `VendCountryObso" +
                "lete` IS NULL) OR (`VendCountryObsolete` = ?)) AND ((? = 1 AND `ShipToCompanyObs" +
                "olete` IS NULL) OR (`ShipToCompanyObsolete` = ?)) AND ((? = 1 AND `ShipToNameObs" +
                "olete` IS NULL) OR (`ShipToNameObsolete` = ?)) AND ((? = 1 AND `ShipToPhone` IS " +
                "NULL) OR (`ShipToPhone` = ?)) AND ((? = 1 AND `ShipToFax` IS NULL) OR (`ShipToFa" +
                "x` = ?)) AND ((? = 1 AND `ShipToContact` IS NULL) OR (`ShipToContact` = ?)) AND " +
                "((? = 1 AND `ShipToEMail` IS NULL) OR (`ShipToEMail` = ?)) AND ((? = 1 AND `Ship" +
                "ToCountryObsolete` IS NULL) OR (`ShipToCountryObsolete` = ?)) AND ((? = 1 AND `T" +
                "erms` IS NULL) OR (`Terms` = ?)) AND ((? = 1 AND `ShipCode` IS NULL) OR (`ShipCo" +
                "de` = ?)) AND ((? = 1 AND `FOB` IS NULL) OR (`FOB` = ?)) AND ((? = 1 AND `Status" +
                "` IS NULL) OR (`Status` = ?)) AND ((? = 1 AND `USTotal` IS NULL) OR (`USTotal` =" +
                " ?)) AND ((? = 1 AND `OtherTotal` IS NULL) OR (`OtherTotal` = ?)) AND ((? = 1 AN" +
                "D `ExchangeRate` IS NULL) OR (`ExchangeRate` = ?)) AND ((? = 1 AND `CancelDate` " +
                "IS NULL) OR (`CancelDate` = ?)) AND ((? = 1 AND `VendLocationNameObsolete` IS NU" +
                "LL) OR (`VendLocationNameObsolete` = ?)) AND ((? = 1 AND `ShipToLocationNameObso" +
                "lete` IS NULL) OR (`ShipToLocationNameObsolete` = ?)) AND ((? = 1 AND `MillConfi" +
                "rmationNumber` IS NULL) OR (`MillConfirmationNumber` = ?)) AND ((? = 1 AND `Mill" +
                "AcknowledgeDate` IS NULL) OR (`MillAcknowledgeDate` = ?)) AND ((? = 1 AND `Excha" +
                "ngeDate` IS NULL) OR (`ExchangeDate` = ?)) AND ((? = 1 AND `CurrencyID` IS NULL)" +
                " OR (`CurrencyID` = ?)) AND ((? = 1 AND `CustomerID` IS NULL) OR (`CustomerID` =" +
                " ?)) AND ((? = 1 AND `CustomerLocationID` IS NULL) OR (`CustomerLocationID` = ?)" +
                ") AND ((? = 1 AND `MillID` IS NULL) OR (`MillID` = ?)) AND ((? = 1 AND `MillLoca" +
                "tionID` IS NULL) OR (`MillLocationID` = ?)) AND ((? = 1 AND `SurchargesInEffect`" +
                " IS NULL) OR (`SurchargesInEffect` = ?)) AND ((? = 1 AND `InvoiceNumber` IS NULL" +
                ") OR (`InvoiceNumber` = ?)) AND ((? = 1 AND `InvoiceDate` IS NULL) OR (`InvoiceD" +
                "ate` = ?)) AND ((? = 1 AND `MillAcknowledgeDateRevised` IS NULL) OR (`MillAcknow" +
                "ledgeDateRevised` = ?)) AND ((? = 1 AND `VendContactID` IS NULL) OR (`VendContac" +
                "tID` = ?)) AND ((? = 1 AND `ShipToContactID` IS NULL) OR (`ShipToContactID` = ?)" +
                ") AND ((? = 1 AND `MillConfirmationAppliesToEntirePO` IS NULL) OR (`MillConfirma" +
                "tionAppliesToEntirePO` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PONumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PODate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PODate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PODate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PODate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendCompany", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCompany", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendCompany", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCompany", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendPhone", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendPhone", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendPhone", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendFax", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendFax", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendFax", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendContact", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContact", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContact", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendEMail", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendEMail", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendEMail", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendCountryObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCountryObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCountryObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToCompanyObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCompanyObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToCompanyObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCompanyObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToPhone", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToPhone", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToPhone", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToFax", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToFax", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToFax", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToContact", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContact", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContact", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToEMail", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToEMail", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToEMail", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToCountryObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCountryObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCountryObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Terms", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Terms", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Terms", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Terms", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FOB", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FOB", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USTotal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USTotal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USTotal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OtherTotal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OtherTotal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OtherTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OtherTotal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ExchangeRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExchangeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CancelDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendLocationNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendLocationNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendLocationNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToLocationNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToLocationNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToLocationNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ExchangeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExchangeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CurrencyID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CurrencyID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CurrencyID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CurrencyID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillLocationID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillLocationID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargesInEffect", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargesInEffect", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargesInEffect", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargesInEffect", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillAcknowledgeDateRevised", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDateRevised", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillAcknowledgeDateRevised", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDateRevised", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContactID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContactID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContactID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContactID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillConfirmationAppliesToEntirePO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationAppliesToEntirePO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillConfirmationAppliesToEntirePO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationAppliesToEntirePO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tblPOHeader2` (`POID`, `PONumber`, `PODate`, `VendCompany`, `VendNameObsolete`, `VendPhone`, `VendFax`, `VendContact`, `VendEMail`, `VendAddressObsolete`, `VendCountryObsolete`, `ShipToCompanyObsolete`, `ShipToNameObsolete`, `ShipToPhone`, `ShipToFax`, `ShipToContact`, `ShipToEMail`, `ShipToAddressObsolete`, `ShipToCountryObsolete`, `Terms`, `ShipCode`, `FOB`, `Status`, `USTotal`, `OtherTotal`, `ExchangeRate`, `CancelDate`, `Comments`, `VendLocationNameObsolete`, `ShipToLocationNameObsolete`, `MillConfirmationNumber`, `MillAcknowledgeDate`, `ExchangeDate`, `CurrencyID`, `CustomerID`, `CustomerLocationID`, `MillID`, `MillLocationID`, `SurchargesInEffect`, `InvoiceNumber`, `InvoiceDate`, `MillAcknowledgeDateRevised`, `VendContactID`, `ShipToContactID`, `MillConfirmationAppliesToEntirePO`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PODate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PODate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendCompany", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCompany", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendPhone", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendFax", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContact", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendEMail", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendAddressObsolete", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendAddressObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCountryObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToCompanyObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCompanyObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToPhone", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToFax", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContact", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToEMail", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToAddressObsolete", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToAddressObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCountryObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Terms", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Terms", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FOB", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USTotal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OtherTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OtherTotal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExchangeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendLocationNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToLocationNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExchangeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CurrencyID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CurrencyID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillLocationID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargesInEffect", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargesInEffect", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillAcknowledgeDateRevised", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDateRevised", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContactID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContactID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillConfirmationAppliesToEntirePO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationAppliesToEntirePO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tblPOHeader2` SET `POID` = ?, `PONumber` = ?, `PODate` = ?, `VendCompany`" +
                " = ?, `VendNameObsolete` = ?, `VendPhone` = ?, `VendFax` = ?, `VendContact` = ?," +
                " `VendEMail` = ?, `VendAddressObsolete` = ?, `VendCountryObsolete` = ?, `ShipToC" +
                "ompanyObsolete` = ?, `ShipToNameObsolete` = ?, `ShipToPhone` = ?, `ShipToFax` = " +
                "?, `ShipToContact` = ?, `ShipToEMail` = ?, `ShipToAddressObsolete` = ?, `ShipToC" +
                "ountryObsolete` = ?, `Terms` = ?, `ShipCode` = ?, `FOB` = ?, `Status` = ?, `USTo" +
                "tal` = ?, `OtherTotal` = ?, `ExchangeRate` = ?, `CancelDate` = ?, `Comments` = ?" +
                ", `VendLocationNameObsolete` = ?, `ShipToLocationNameObsolete` = ?, `MillConfirm" +
                "ationNumber` = ?, `MillAcknowledgeDate` = ?, `ExchangeDate` = ?, `CurrencyID` = " +
                "?, `CustomerID` = ?, `CustomerLocationID` = ?, `MillID` = ?, `MillLocationID` = " +
                "?, `SurchargesInEffect` = ?, `InvoiceNumber` = ?, `InvoiceDate` = ?, `MillAcknow" +
                "ledgeDateRevised` = ?, `VendContactID` = ?, `ShipToContactID` = ?, `MillConfirma" +
                "tionAppliesToEntirePO` = ? WHERE ((`POID` = ?) AND ((? = 1 AND `PONumber` IS NUL" +
                "L) OR (`PONumber` = ?)) AND ((? = 1 AND `PODate` IS NULL) OR (`PODate` = ?)) AND" +
                " ((? = 1 AND `VendCompany` IS NULL) OR (`VendCompany` = ?)) AND ((? = 1 AND `Ven" +
                "dNameObsolete` IS NULL) OR (`VendNameObsolete` = ?)) AND ((? = 1 AND `VendPhone`" +
                " IS NULL) OR (`VendPhone` = ?)) AND ((? = 1 AND `VendFax` IS NULL) OR (`VendFax`" +
                " = ?)) AND ((? = 1 AND `VendContact` IS NULL) OR (`VendContact` = ?)) AND ((? = " +
                "1 AND `VendEMail` IS NULL) OR (`VendEMail` = ?)) AND ((? = 1 AND `VendCountryObs" +
                "olete` IS NULL) OR (`VendCountryObsolete` = ?)) AND ((? = 1 AND `ShipToCompanyOb" +
                "solete` IS NULL) OR (`ShipToCompanyObsolete` = ?)) AND ((? = 1 AND `ShipToNameOb" +
                "solete` IS NULL) OR (`ShipToNameObsolete` = ?)) AND ((? = 1 AND `ShipToPhone` IS" +
                " NULL) OR (`ShipToPhone` = ?)) AND ((? = 1 AND `ShipToFax` IS NULL) OR (`ShipToF" +
                "ax` = ?)) AND ((? = 1 AND `ShipToContact` IS NULL) OR (`ShipToContact` = ?)) AND" +
                " ((? = 1 AND `ShipToEMail` IS NULL) OR (`ShipToEMail` = ?)) AND ((? = 1 AND `Shi" +
                "pToCountryObsolete` IS NULL) OR (`ShipToCountryObsolete` = ?)) AND ((? = 1 AND `" +
                "Terms` IS NULL) OR (`Terms` = ?)) AND ((? = 1 AND `ShipCode` IS NULL) OR (`ShipC" +
                "ode` = ?)) AND ((? = 1 AND `FOB` IS NULL) OR (`FOB` = ?)) AND ((? = 1 AND `Statu" +
                "s` IS NULL) OR (`Status` = ?)) AND ((? = 1 AND `USTotal` IS NULL) OR (`USTotal` " +
                "= ?)) AND ((? = 1 AND `OtherTotal` IS NULL) OR (`OtherTotal` = ?)) AND ((? = 1 A" +
                "ND `ExchangeRate` IS NULL) OR (`ExchangeRate` = ?)) AND ((? = 1 AND `CancelDate`" +
                " IS NULL) OR (`CancelDate` = ?)) AND ((? = 1 AND `VendLocationNameObsolete` IS N" +
                "ULL) OR (`VendLocationNameObsolete` = ?)) AND ((? = 1 AND `ShipToLocationNameObs" +
                "olete` IS NULL) OR (`ShipToLocationNameObsolete` = ?)) AND ((? = 1 AND `MillConf" +
                "irmationNumber` IS NULL) OR (`MillConfirmationNumber` = ?)) AND ((? = 1 AND `Mil" +
                "lAcknowledgeDate` IS NULL) OR (`MillAcknowledgeDate` = ?)) AND ((? = 1 AND `Exch" +
                "angeDate` IS NULL) OR (`ExchangeDate` = ?)) AND ((? = 1 AND `CurrencyID` IS NULL" +
                ") OR (`CurrencyID` = ?)) AND ((? = 1 AND `CustomerID` IS NULL) OR (`CustomerID` " +
                "= ?)) AND ((? = 1 AND `CustomerLocationID` IS NULL) OR (`CustomerLocationID` = ?" +
                ")) AND ((? = 1 AND `MillID` IS NULL) OR (`MillID` = ?)) AND ((? = 1 AND `MillLoc" +
                "ationID` IS NULL) OR (`MillLocationID` = ?)) AND ((? = 1 AND `SurchargesInEffect" +
                "` IS NULL) OR (`SurchargesInEffect` = ?)) AND ((? = 1 AND `InvoiceNumber` IS NUL" +
                "L) OR (`InvoiceNumber` = ?)) AND ((? = 1 AND `InvoiceDate` IS NULL) OR (`Invoice" +
                "Date` = ?)) AND ((? = 1 AND `MillAcknowledgeDateRevised` IS NULL) OR (`MillAckno" +
                "wledgeDateRevised` = ?)) AND ((? = 1 AND `VendContactID` IS NULL) OR (`VendConta" +
                "ctID` = ?)) AND ((? = 1 AND `ShipToContactID` IS NULL) OR (`ShipToContactID` = ?" +
                ")) AND ((? = 1 AND `MillConfirmationAppliesToEntirePO` IS NULL) OR (`MillConfirm" +
                "ationAppliesToEntirePO` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PODate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PODate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendCompany", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCompany", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendPhone", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendFax", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContact", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendEMail", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendAddressObsolete", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendAddressObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCountryObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToCompanyObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCompanyObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToPhone", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToFax", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContact", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToEMail", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToAddressObsolete", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToAddressObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCountryObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Terms", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Terms", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FOB", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USTotal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OtherTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OtherTotal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExchangeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendLocationNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToLocationNameObsolete", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExchangeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CurrencyID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CurrencyID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillLocationID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargesInEffect", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargesInEffect", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillAcknowledgeDateRevised", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDateRevised", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VendContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContactID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipToContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContactID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillConfirmationAppliesToEntirePO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationAppliesToEntirePO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PONumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PONumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PONumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PODate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PODate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PODate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PODate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendCompany", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCompany", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendCompany", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCompany", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendPhone", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendPhone", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendPhone", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendFax", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendFax", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendFax", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendContact", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContact", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContact", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendEMail", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendEMail", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendEMail", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendCountryObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCountryObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendCountryObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToCompanyObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCompanyObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToCompanyObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCompanyObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToPhone", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToPhone", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToPhone", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToPhone", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToFax", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToFax", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToFax", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToFax", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToContact", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContact", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToContact", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContact", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToEMail", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToEMail", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToEMail", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToEMail", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToCountryObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCountryObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToCountryObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToCountryObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Terms", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Terms", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Terms", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Terms", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipCode", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FOB", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FOB", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USTotal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USTotal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USTotal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OtherTotal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OtherTotal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OtherTotal", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OtherTotal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ExchangeRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExchangeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CancelDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CancelDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CancelDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendLocationNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendLocationNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendLocationNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToLocationNameObsolete", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToLocationNameObsolete", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToLocationNameObsolete", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToLocationNameObsolete", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillConfirmationNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillAcknowledgeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ExchangeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExchangeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExchangeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CurrencyID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CurrencyID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CurrencyID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CurrencyID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillLocationID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillLocationID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargesInEffect", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargesInEffect", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargesInEffect", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargesInEffect", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillAcknowledgeDateRevised", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDateRevised", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillAcknowledgeDateRevised", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillAcknowledgeDateRevised", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VendContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContactID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VendContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VendContactID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipToContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContactID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipToContactID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipToContactID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillConfirmationAppliesToEntirePO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationAppliesToEntirePO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillConfirmationAppliesToEntirePO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillConfirmationAppliesToEntirePO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT POID, PONumber, PODate, VendCompany, VendNameObsolete, VendPhone, VendFax, VendContact, VendEMail, VendAddressObsolete, VendCountryObsolete, ShipToCompanyObsolete, ShipToNameObsolete, ShipToPhone, ShipToFax, ShipToContact, ShipToEMail, ShipToAddressObsolete, ShipToCountryObsolete, Terms, ShipCode, FOB, Status, USTotal, OtherTotal, ExchangeRate, CancelDate, Comments, VendLocationNameObsolete, ShipToLocationNameObsolete, MillConfirmationNumber, MillAcknowledgeDate, ExchangeDate, CurrencyID, CustomerID, CustomerLocationID, MillID, MillLocationID, SurchargesInEffect, InvoiceNumber, InvoiceDate, MillAcknowledgeDateRevised, VendContactID, ShipToContactID, MillConfirmationAppliesToEntirePO FROM tblPOHeader2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.POHeaderTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.POHeaderTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.POHeaderTblDataTable dataTable = new EMDataSet.POHeaderTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.POHeaderTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "POHeaderTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    global::System.Nullable<int> Original_POID, 
                    string Original_PONumber, 
                    global::System.Nullable<global::System.DateTime> Original_PODate, 
                    string Original_VendCompany, 
                    string Original_VendNameObsolete, 
                    string Original_VendPhone, 
                    string Original_VendFax, 
                    string Original_VendContact, 
                    string Original_VendEMail, 
                    string Original_VendCountryObsolete, 
                    string Original_ShipToCompanyObsolete, 
                    string Original_ShipToNameObsolete, 
                    string Original_ShipToPhone, 
                    string Original_ShipToFax, 
                    string Original_ShipToContact, 
                    string Original_ShipToEMail, 
                    string Original_ShipToCountryObsolete, 
                    string Original_Terms, 
                    string Original_ShipCode, 
                    string Original_FOB, 
                    string Original_Status, 
                    global::System.Nullable<decimal> Original_USTotal, 
                    global::System.Nullable<decimal> Original_OtherTotal, 
                    global::System.Nullable<decimal> Original_ExchangeRate, 
                    global::System.Nullable<global::System.DateTime> Original_CancelDate, 
                    string Original_VendLocationNameObsolete, 
                    string Original_ShipToLocationNameObsolete, 
                    string Original_MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> Original_ExchangeDate, 
                    global::System.Nullable<int> Original_CurrencyID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_CustomerLocationID, 
                    global::System.Nullable<int> Original_MillID, 
                    global::System.Nullable<int> Original_MillLocationID, 
                    bool Original_SurchargesInEffect, 
                    string Original_InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDateRevised, 
                    global::System.Nullable<int> Original_VendContactID, 
                    global::System.Nullable<int> Original_ShipToContactID, 
                    global::System.Nullable<int> Original_MillConfirmationAppliesToEntirePO) {
            if ((Original_POID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_PONumber == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PONumber));
            }
            if ((Original_PODate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_PODate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_VendCompany == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_VendCompany));
            }
            if ((Original_VendNameObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_VendNameObsolete));
            }
            if ((Original_VendPhone == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_VendPhone));
            }
            if ((Original_VendFax == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_VendFax));
            }
            if ((Original_VendContact == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_VendContact));
            }
            if ((Original_VendEMail == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_VendEMail));
            }
            if ((Original_VendCountryObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_VendCountryObsolete));
            }
            if ((Original_ShipToCompanyObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_ShipToCompanyObsolete));
            }
            if ((Original_ShipToNameObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_ShipToNameObsolete));
            }
            if ((Original_ShipToPhone == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ShipToPhone));
            }
            if ((Original_ShipToFax == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ShipToFax));
            }
            if ((Original_ShipToContact == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_ShipToContact));
            }
            if ((Original_ShipToEMail == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_ShipToEMail));
            }
            if ((Original_ShipToCountryObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_ShipToCountryObsolete));
            }
            if ((Original_Terms == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Terms));
            }
            if ((Original_ShipCode == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_ShipCode));
            }
            if ((Original_FOB == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_FOB));
            }
            if ((Original_Status == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_Status));
            }
            if ((Original_USTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_USTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_OtherTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_ExchangeRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_ExchangeRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_CancelDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_CancelDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_VendLocationNameObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_VendLocationNameObsolete));
            }
            if ((Original_ShipToLocationNameObsolete == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_ShipToLocationNameObsolete));
            }
            if ((Original_MillConfirmationNumber == null)) {
                throw new global::System.ArgumentNullException("Original_MillConfirmationNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_MillConfirmationNumber));
            }
            if ((Original_MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((System.DateTime)(Original_MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_ExchangeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((System.DateTime)(Original_ExchangeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrencyID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_CurrencyID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerLocationID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_CustomerLocationID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_MillID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_MillID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_MillLocationID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_MillLocationID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[70].Value = ((bool)(Original_SurchargesInEffect));
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_MillAcknowledgeDateRevised.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((System.DateTime)(Original_MillAcknowledgeDateRevised.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_VendContactID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_VendContactID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_ShipToContactID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((int)(Original_ShipToContactID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_MillConfirmationAppliesToEntirePO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_MillConfirmationAppliesToEntirePO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> POID, 
                    string PONumber, 
                    global::System.Nullable<global::System.DateTime> PODate, 
                    string VendCompany, 
                    string VendNameObsolete, 
                    string VendPhone, 
                    string VendFax, 
                    string VendContact, 
                    string VendEMail, 
                    string VendAddressObsolete, 
                    string VendCountryObsolete, 
                    string ShipToCompanyObsolete, 
                    string ShipToNameObsolete, 
                    string ShipToPhone, 
                    string ShipToFax, 
                    string ShipToContact, 
                    string ShipToEMail, 
                    string ShipToAddressObsolete, 
                    string ShipToCountryObsolete, 
                    string Terms, 
                    string ShipCode, 
                    string FOB, 
                    string Status, 
                    global::System.Nullable<decimal> USTotal, 
                    global::System.Nullable<decimal> OtherTotal, 
                    global::System.Nullable<decimal> ExchangeRate, 
                    global::System.Nullable<global::System.DateTime> CancelDate, 
                    string Comments, 
                    string VendLocationNameObsolete, 
                    string ShipToLocationNameObsolete, 
                    string MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> ExchangeDate, 
                    global::System.Nullable<int> CurrencyID, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> CustomerLocationID, 
                    global::System.Nullable<int> MillID, 
                    global::System.Nullable<int> MillLocationID, 
                    bool SurchargesInEffect, 
                    string InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDateRevised, 
                    global::System.Nullable<int> VendContactID, 
                    global::System.Nullable<int> ShipToContactID, 
                    global::System.Nullable<int> MillConfirmationAppliesToEntirePO) {
            if ((POID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PONumber == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PONumber));
            }
            if ((PODate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(PODate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((VendCompany == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(VendCompany));
            }
            if ((VendNameObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(VendNameObsolete));
            }
            if ((VendPhone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(VendPhone));
            }
            if ((VendFax == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(VendFax));
            }
            if ((VendContact == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(VendContact));
            }
            if ((VendEMail == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(VendEMail));
            }
            if ((VendAddressObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(VendAddressObsolete));
            }
            if ((VendCountryObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(VendCountryObsolete));
            }
            if ((ShipToCompanyObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ShipToCompanyObsolete));
            }
            if ((ShipToNameObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ShipToNameObsolete));
            }
            if ((ShipToPhone == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ShipToPhone));
            }
            if ((ShipToFax == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ShipToFax));
            }
            if ((ShipToContact == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ShipToContact));
            }
            if ((ShipToEMail == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ShipToEMail));
            }
            if ((ShipToAddressObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ShipToAddressObsolete));
            }
            if ((ShipToCountryObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ShipToCountryObsolete));
            }
            if ((Terms == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Terms));
            }
            if ((ShipCode == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ShipCode));
            }
            if ((FOB == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(FOB));
            }
            if ((Status == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Status));
            }
            if ((USTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(USTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((OtherTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(OtherTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ExchangeRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(ExchangeRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((CancelDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(CancelDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Comments));
            }
            if ((VendLocationNameObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(VendLocationNameObsolete));
            }
            if ((ShipToLocationNameObsolete == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(ShipToLocationNameObsolete));
            }
            if ((MillConfirmationNumber == null)) {
                throw new global::System.ArgumentNullException("MillConfirmationNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(MillConfirmationNumber));
            }
            if ((MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ExchangeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(ExchangeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CurrencyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(CurrencyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CustomerLocationID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(CustomerLocationID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((MillID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(MillID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((MillLocationID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(MillLocationID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(SurchargesInEffect));
            if ((InvoiceNumber == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(InvoiceNumber));
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((MillAcknowledgeDateRevised.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(MillAcknowledgeDateRevised.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((VendContactID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((int)(VendContactID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ShipToContactID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(ShipToContactID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((MillConfirmationAppliesToEntirePO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(MillConfirmationAppliesToEntirePO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> POID, 
                    string PONumber, 
                    global::System.Nullable<global::System.DateTime> PODate, 
                    string VendCompany, 
                    string VendNameObsolete, 
                    string VendPhone, 
                    string VendFax, 
                    string VendContact, 
                    string VendEMail, 
                    string VendAddressObsolete, 
                    string VendCountryObsolete, 
                    string ShipToCompanyObsolete, 
                    string ShipToNameObsolete, 
                    string ShipToPhone, 
                    string ShipToFax, 
                    string ShipToContact, 
                    string ShipToEMail, 
                    string ShipToAddressObsolete, 
                    string ShipToCountryObsolete, 
                    string Terms, 
                    string ShipCode, 
                    string FOB, 
                    string Status, 
                    global::System.Nullable<decimal> USTotal, 
                    global::System.Nullable<decimal> OtherTotal, 
                    global::System.Nullable<decimal> ExchangeRate, 
                    global::System.Nullable<global::System.DateTime> CancelDate, 
                    string Comments, 
                    string VendLocationNameObsolete, 
                    string ShipToLocationNameObsolete, 
                    string MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> ExchangeDate, 
                    global::System.Nullable<int> CurrencyID, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> CustomerLocationID, 
                    global::System.Nullable<int> MillID, 
                    global::System.Nullable<int> MillLocationID, 
                    bool SurchargesInEffect, 
                    string InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDateRevised, 
                    global::System.Nullable<int> VendContactID, 
                    global::System.Nullable<int> ShipToContactID, 
                    global::System.Nullable<int> MillConfirmationAppliesToEntirePO, 
                    global::System.Nullable<int> Original_POID, 
                    string Original_PONumber, 
                    global::System.Nullable<global::System.DateTime> Original_PODate, 
                    string Original_VendCompany, 
                    string Original_VendNameObsolete, 
                    string Original_VendPhone, 
                    string Original_VendFax, 
                    string Original_VendContact, 
                    string Original_VendEMail, 
                    string Original_VendCountryObsolete, 
                    string Original_ShipToCompanyObsolete, 
                    string Original_ShipToNameObsolete, 
                    string Original_ShipToPhone, 
                    string Original_ShipToFax, 
                    string Original_ShipToContact, 
                    string Original_ShipToEMail, 
                    string Original_ShipToCountryObsolete, 
                    string Original_Terms, 
                    string Original_ShipCode, 
                    string Original_FOB, 
                    string Original_Status, 
                    global::System.Nullable<decimal> Original_USTotal, 
                    global::System.Nullable<decimal> Original_OtherTotal, 
                    global::System.Nullable<decimal> Original_ExchangeRate, 
                    global::System.Nullable<global::System.DateTime> Original_CancelDate, 
                    string Original_VendLocationNameObsolete, 
                    string Original_ShipToLocationNameObsolete, 
                    string Original_MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> Original_ExchangeDate, 
                    global::System.Nullable<int> Original_CurrencyID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_CustomerLocationID, 
                    global::System.Nullable<int> Original_MillID, 
                    global::System.Nullable<int> Original_MillLocationID, 
                    bool Original_SurchargesInEffect, 
                    string Original_InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDateRevised, 
                    global::System.Nullable<int> Original_VendContactID, 
                    global::System.Nullable<int> Original_ShipToContactID, 
                    global::System.Nullable<int> Original_MillConfirmationAppliesToEntirePO) {
            if ((POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PONumber));
            }
            if ((PODate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(PODate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((VendCompany == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(VendCompany));
            }
            if ((VendNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(VendNameObsolete));
            }
            if ((VendPhone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(VendPhone));
            }
            if ((VendFax == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(VendFax));
            }
            if ((VendContact == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(VendContact));
            }
            if ((VendEMail == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(VendEMail));
            }
            if ((VendAddressObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(VendAddressObsolete));
            }
            if ((VendCountryObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(VendCountryObsolete));
            }
            if ((ShipToCompanyObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ShipToCompanyObsolete));
            }
            if ((ShipToNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ShipToNameObsolete));
            }
            if ((ShipToPhone == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ShipToPhone));
            }
            if ((ShipToFax == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ShipToFax));
            }
            if ((ShipToContact == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ShipToContact));
            }
            if ((ShipToEMail == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ShipToEMail));
            }
            if ((ShipToAddressObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ShipToAddressObsolete));
            }
            if ((ShipToCountryObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ShipToCountryObsolete));
            }
            if ((Terms == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Terms));
            }
            if ((ShipCode == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ShipCode));
            }
            if ((FOB == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(FOB));
            }
            if ((Status == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Status));
            }
            if ((USTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(USTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((OtherTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(OtherTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ExchangeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(ExchangeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((CancelDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(CancelDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Comments));
            }
            if ((VendLocationNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(VendLocationNameObsolete));
            }
            if ((ShipToLocationNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(ShipToLocationNameObsolete));
            }
            if ((MillConfirmationNumber == null)) {
                throw new global::System.ArgumentNullException("MillConfirmationNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(MillConfirmationNumber));
            }
            if ((MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ExchangeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(ExchangeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(CurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CustomerLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(CustomerLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((MillID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(MillID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((MillLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(MillLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(SurchargesInEffect));
            if ((InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(InvoiceNumber));
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((MillAcknowledgeDateRevised.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(MillAcknowledgeDateRevised.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((VendContactID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(VendContactID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ShipToContactID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(ShipToContactID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((MillConfirmationAppliesToEntirePO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(MillConfirmationAppliesToEntirePO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_POID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_POID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_PONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_PONumber));
            }
            if ((Original_PODate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_PODate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_VendCompany == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_VendCompany));
            }
            if ((Original_VendNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_VendNameObsolete));
            }
            if ((Original_VendPhone == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_VendPhone));
            }
            if ((Original_VendFax == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_VendFax));
            }
            if ((Original_VendContact == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_VendContact));
            }
            if ((Original_VendEMail == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_VendEMail));
            }
            if ((Original_VendCountryObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_VendCountryObsolete));
            }
            if ((Original_ShipToCompanyObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_ShipToCompanyObsolete));
            }
            if ((Original_ShipToNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_ShipToNameObsolete));
            }
            if ((Original_ShipToPhone == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_ShipToPhone));
            }
            if ((Original_ShipToFax == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_ShipToFax));
            }
            if ((Original_ShipToContact == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_ShipToContact));
            }
            if ((Original_ShipToEMail == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_ShipToEMail));
            }
            if ((Original_ShipToCountryObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_ShipToCountryObsolete));
            }
            if ((Original_Terms == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Terms));
            }
            if ((Original_ShipCode == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_ShipCode));
            }
            if ((Original_FOB == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_FOB));
            }
            if ((Original_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_Status));
            }
            if ((Original_USTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_USTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_OtherTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_ExchangeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_ExchangeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_CancelDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((System.DateTime)(Original_CancelDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_VendLocationNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_VendLocationNameObsolete));
            }
            if ((Original_ShipToLocationNameObsolete == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_ShipToLocationNameObsolete));
            }
            if ((Original_MillConfirmationNumber == null)) {
                throw new global::System.ArgumentNullException("Original_MillConfirmationNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_MillConfirmationNumber));
            }
            if ((Original_MillAcknowledgeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((System.DateTime)(Original_MillAcknowledgeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_ExchangeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((System.DateTime)(Original_ExchangeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_CurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_CurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Original_CustomerLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_MillID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_MillID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_MillLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_MillLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((bool)(Original_SurchargesInEffect));
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_MillAcknowledgeDateRevised.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((System.DateTime)(Original_MillAcknowledgeDateRevised.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_VendContactID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(Original_VendContactID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_ShipToContactID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((int)(Original_ShipToContactID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_MillConfirmationAppliesToEntirePO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((int)(Original_MillConfirmationAppliesToEntirePO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PONumber, 
                    global::System.Nullable<global::System.DateTime> PODate, 
                    string VendCompany, 
                    string VendNameObsolete, 
                    string VendPhone, 
                    string VendFax, 
                    string VendContact, 
                    string VendEMail, 
                    string VendAddressObsolete, 
                    string VendCountryObsolete, 
                    string ShipToCompanyObsolete, 
                    string ShipToNameObsolete, 
                    string ShipToPhone, 
                    string ShipToFax, 
                    string ShipToContact, 
                    string ShipToEMail, 
                    string ShipToAddressObsolete, 
                    string ShipToCountryObsolete, 
                    string Terms, 
                    string ShipCode, 
                    string FOB, 
                    string Status, 
                    global::System.Nullable<decimal> USTotal, 
                    global::System.Nullable<decimal> OtherTotal, 
                    global::System.Nullable<decimal> ExchangeRate, 
                    global::System.Nullable<global::System.DateTime> CancelDate, 
                    string Comments, 
                    string VendLocationNameObsolete, 
                    string ShipToLocationNameObsolete, 
                    string MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> ExchangeDate, 
                    global::System.Nullable<int> CurrencyID, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> CustomerLocationID, 
                    global::System.Nullable<int> MillID, 
                    global::System.Nullable<int> MillLocationID, 
                    bool SurchargesInEffect, 
                    string InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> MillAcknowledgeDateRevised, 
                    global::System.Nullable<int> VendContactID, 
                    global::System.Nullable<int> ShipToContactID, 
                    global::System.Nullable<int> MillConfirmationAppliesToEntirePO, 
                    global::System.Nullable<int> Original_POID, 
                    string Original_PONumber, 
                    global::System.Nullable<global::System.DateTime> Original_PODate, 
                    string Original_VendCompany, 
                    string Original_VendNameObsolete, 
                    string Original_VendPhone, 
                    string Original_VendFax, 
                    string Original_VendContact, 
                    string Original_VendEMail, 
                    string Original_VendCountryObsolete, 
                    string Original_ShipToCompanyObsolete, 
                    string Original_ShipToNameObsolete, 
                    string Original_ShipToPhone, 
                    string Original_ShipToFax, 
                    string Original_ShipToContact, 
                    string Original_ShipToEMail, 
                    string Original_ShipToCountryObsolete, 
                    string Original_Terms, 
                    string Original_ShipCode, 
                    string Original_FOB, 
                    string Original_Status, 
                    global::System.Nullable<decimal> Original_USTotal, 
                    global::System.Nullable<decimal> Original_OtherTotal, 
                    global::System.Nullable<decimal> Original_ExchangeRate, 
                    global::System.Nullable<global::System.DateTime> Original_CancelDate, 
                    string Original_VendLocationNameObsolete, 
                    string Original_ShipToLocationNameObsolete, 
                    string Original_MillConfirmationNumber, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDate, 
                    global::System.Nullable<global::System.DateTime> Original_ExchangeDate, 
                    global::System.Nullable<int> Original_CurrencyID, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_CustomerLocationID, 
                    global::System.Nullable<int> Original_MillID, 
                    global::System.Nullable<int> Original_MillLocationID, 
                    bool Original_SurchargesInEffect, 
                    string Original_InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> Original_MillAcknowledgeDateRevised, 
                    global::System.Nullable<int> Original_VendContactID, 
                    global::System.Nullable<int> Original_ShipToContactID, 
                    global::System.Nullable<int> Original_MillConfirmationAppliesToEntirePO) {
            return this.Update(Original_POID, PONumber, PODate, VendCompany, VendNameObsolete, VendPhone, VendFax, VendContact, VendEMail, VendAddressObsolete, VendCountryObsolete, ShipToCompanyObsolete, ShipToNameObsolete, ShipToPhone, ShipToFax, ShipToContact, ShipToEMail, ShipToAddressObsolete, ShipToCountryObsolete, Terms, ShipCode, FOB, Status, USTotal, OtherTotal, ExchangeRate, CancelDate, Comments, VendLocationNameObsolete, ShipToLocationNameObsolete, MillConfirmationNumber, MillAcknowledgeDate, ExchangeDate, CurrencyID, CustomerID, CustomerLocationID, MillID, MillLocationID, SurchargesInEffect, InvoiceNumber, InvoiceDate, MillAcknowledgeDateRevised, VendContactID, ShipToContactID, MillConfirmationAppliesToEntirePO, Original_POID, Original_PONumber, Original_PODate, Original_VendCompany, Original_VendNameObsolete, Original_VendPhone, Original_VendFax, Original_VendContact, Original_VendEMail, Original_VendCountryObsolete, Original_ShipToCompanyObsolete, Original_ShipToNameObsolete, Original_ShipToPhone, Original_ShipToFax, Original_ShipToContact, Original_ShipToEMail, Original_ShipToCountryObsolete, Original_Terms, Original_ShipCode, Original_FOB, Original_Status, Original_USTotal, Original_OtherTotal, Original_ExchangeRate, Original_CancelDate, Original_VendLocationNameObsolete, Original_ShipToLocationNameObsolete, Original_MillConfirmationNumber, Original_MillAcknowledgeDate, Original_ExchangeDate, Original_CurrencyID, Original_CustomerID, Original_CustomerLocationID, Original_MillID, Original_MillLocationID, Original_SurchargesInEffect, Original_InvoiceNumber, Original_InvoiceDate, Original_MillAcknowledgeDateRevised, Original_VendContactID, Original_ShipToContactID, Original_MillConfirmationAppliesToEntirePO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContainerTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContainerTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ContainerTbl";
            tableMapping.ColumnMappings.Add("ContID", "ContID");
            tableMapping.ColumnMappings.Add("ContNumber", "ContNumber");
            tableMapping.ColumnMappings.Add("ShipDate", "ShipDate");
            tableMapping.ColumnMappings.Add("ETA", "ETA");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("CustomerLocationID", "CustomerLocationID");
            tableMapping.ColumnMappings.Add("ApplyClosingToEntireContainer", "ApplyClosingToEntireContainer");
            tableMapping.ColumnMappings.Add("ContainerPickupDate", "ContainerPickupDate");
            tableMapping.ColumnMappings.Add("ContainerPickupTerminal", "ContainerPickupTerminal");
            tableMapping.ColumnMappings.Add("ContainerProofOfDelivery", "ContainerProofOfDelivery");
            tableMapping.ColumnMappings.Add("ReleaseDate", "ReleaseDate");
            tableMapping.ColumnMappings.Add("MillID", "MillID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tblContainer` WHERE ((`ContID` = ?) AND ((? = 1 AND `ContNumber` IS NULL) OR (`ContNumber` = ?)) AND ((? = 1 AND `ShipDate` IS NULL) OR (`ShipDate` = ?)) AND ((? = 1 AND `ETA` IS NULL) OR (`ETA` = ?)) AND ((? = 1 AND `Status` IS NULL) OR (`Status` = ?)) AND ((? = 1 AND `CustomerID` IS NULL) OR (`CustomerID` = ?)) AND ((? = 1 AND `CustomerLocationID` IS NULL) OR (`CustomerLocationID` = ?)) AND ((? = 1 AND `ApplyClosingToEntireContainer` IS NULL) OR (`ApplyClosingToEntireContainer` = ?)) AND ((? = 1 AND `ContainerPickupDate` IS NULL) OR (`ContainerPickupDate` = ?)) AND ((? = 1 AND `ContainerPickupTerminal` IS NULL) OR (`ContainerPickupTerminal` = ?)) AND ((? = 1 AND `ContainerProofOfDelivery` IS NULL) OR (`ContainerProofOfDelivery` = ?)) AND ((? = 1 AND `ReleaseDate` IS NULL) OR (`ReleaseDate` = ?)) AND ((? = 1 AND `MillID` IS NULL) OR (`MillID` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ETA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ETA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ETA", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ETA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ApplyClosingToEntireContainer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ApplyClosingToEntireContainer", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ApplyClosingToEntireContainer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ApplyClosingToEntireContainer", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContainerPickupDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerPickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContainerPickupTerminal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupTerminal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerPickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupTerminal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContainerProofOfDelivery", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerProofOfDelivery", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerProofOfDelivery", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ReleaseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReleaseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ReleaseDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReleaseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tblContainer` (`ContID`, `ContNumber`, `ShipDate`, `ETA`, `Comments`, `Status`, `CustomerID`, `CustomerLocationID`, `ApplyClosingToEntireContainer`, `ContainerPickupDate`, `ContainerPickupTerminal`, `ContainerProofOfDelivery`, `ReleaseDate`, `MillID`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ETA", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ETA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ApplyClosingToEntireContainer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ApplyClosingToEntireContainer", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerPickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerPickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupTerminal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerProofOfDelivery", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ReleaseDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReleaseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tblContainer` SET `ContID` = ?, `ContNumber` = ?, `ShipDate` = ?, `ETA` = ?, `Comments` = ?, `Status` = ?, `CustomerID` = ?, `CustomerLocationID` = ?, `ApplyClosingToEntireContainer` = ?, `ContainerPickupDate` = ?, `ContainerPickupTerminal` = ?, `ContainerProofOfDelivery` = ?, `ReleaseDate` = ?, `MillID` = ? WHERE ((`ContID` = ?) AND ((? = 1 AND `ContNumber` IS NULL) OR (`ContNumber` = ?)) AND ((? = 1 AND `ShipDate` IS NULL) OR (`ShipDate` = ?)) AND ((? = 1 AND `ETA` IS NULL) OR (`ETA` = ?)) AND ((? = 1 AND `Status` IS NULL) OR (`Status` = ?)) AND ((? = 1 AND `CustomerID` IS NULL) OR (`CustomerID` = ?)) AND ((? = 1 AND `CustomerLocationID` IS NULL) OR (`CustomerLocationID` = ?)) AND ((? = 1 AND `ApplyClosingToEntireContainer` IS NULL) OR (`ApplyClosingToEntireContainer` = ?)) AND ((? = 1 AND `ContainerPickupDate` IS NULL) OR (`ContainerPickupDate` = ?)) AND ((? = 1 AND `ContainerPickupTerminal` IS NULL) OR (`ContainerPickupTerminal` = ?)) AND ((? = 1 AND `ContainerProofOfDelivery` IS NULL) OR (`ContainerProofOfDelivery` = ?)) AND ((? = 1 AND `ReleaseDate` IS NULL) OR (`ReleaseDate` = ?)) AND ((? = 1 AND `MillID` IS NULL) OR (`MillID` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ETA", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ETA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Comments", global::System.Data.OleDb.OleDbType.LongVarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Comments", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ApplyClosingToEntireContainer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ApplyClosingToEntireContainer", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerPickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerPickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupTerminal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerProofOfDelivery", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ReleaseDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReleaseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ETA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ETA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ETA", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ETA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerLocationID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerLocationID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ApplyClosingToEntireContainer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ApplyClosingToEntireContainer", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ApplyClosingToEntireContainer", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ApplyClosingToEntireContainer", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContainerPickupDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerPickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContainerPickupTerminal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupTerminal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerPickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerPickupTerminal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContainerProofOfDelivery", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerProofOfDelivery", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerProofOfDelivery", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ReleaseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReleaseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ReleaseDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReleaseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ContID, ContNumber, ShipDate, ETA, Comments, Status, CustomerID, CustomerL" +
                "ocationID, ApplyClosingToEntireContainer, ContainerPickupDate, ContainerPickupTe" +
                "rminal, ContainerProofOfDelivery, ReleaseDate, MillID FROM tblContainer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.ContainerTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.ContainerTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.ContainerTblDataTable dataTable = new EMDataSet.ContainerTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.ContainerTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ContainerTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_ContID, string Original_ContNumber, global::System.Nullable<global::System.DateTime> Original_ShipDate, global::System.Nullable<global::System.DateTime> Original_ETA, string Original_Status, global::System.Nullable<int> Original_CustomerID, global::System.Nullable<int> Original_CustomerLocationID, global::System.Nullable<int> Original_ApplyClosingToEntireContainer, global::System.Nullable<global::System.DateTime> Original_ContainerPickupDate, string Original_ContainerPickupTerminal, string Original_ContainerProofOfDelivery, global::System.Nullable<global::System.DateTime> Original_ReleaseDate, global::System.Nullable<int> Original_MillID) {
            if ((Original_ContID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ContID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_ContNumber == null)) {
                throw new global::System.ArgumentNullException("Original_ContNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ContNumber));
            }
            if ((Original_ShipDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_ShipDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ETA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ETA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Status == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Status));
            }
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerLocationID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_CustomerLocationID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ApplyClosingToEntireContainer.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ApplyClosingToEntireContainer.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ContainerPickupDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_ContainerPickupDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ContainerPickupTerminal == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ContainerPickupTerminal));
            }
            if ((Original_ContainerProofOfDelivery == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_ContainerProofOfDelivery));
            }
            if ((Original_ReleaseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_ReleaseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_MillID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_MillID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ContID, string ContNumber, global::System.Nullable<global::System.DateTime> ShipDate, global::System.Nullable<global::System.DateTime> ETA, string Comments, string Status, global::System.Nullable<int> CustomerID, global::System.Nullable<int> CustomerLocationID, global::System.Nullable<int> ApplyClosingToEntireContainer, global::System.Nullable<global::System.DateTime> ContainerPickupDate, string ContainerPickupTerminal, string ContainerProofOfDelivery, global::System.Nullable<global::System.DateTime> ReleaseDate, global::System.Nullable<int> MillID) {
            if ((ContID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ContID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ContNumber == null)) {
                throw new global::System.ArgumentNullException("ContNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ContNumber));
            }
            if ((ShipDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ShipDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ETA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ETA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Comments));
            }
            if ((Status == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Status));
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CustomerLocationID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(CustomerLocationID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ApplyClosingToEntireContainer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ApplyClosingToEntireContainer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ContainerPickupDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ContainerPickupDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ContainerPickupTerminal == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ContainerPickupTerminal));
            }
            if ((ContainerProofOfDelivery == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ContainerProofOfDelivery));
            }
            if ((ReleaseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(ReleaseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MillID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(MillID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ContID, 
                    string ContNumber, 
                    global::System.Nullable<global::System.DateTime> ShipDate, 
                    global::System.Nullable<global::System.DateTime> ETA, 
                    string Comments, 
                    string Status, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> CustomerLocationID, 
                    global::System.Nullable<int> ApplyClosingToEntireContainer, 
                    global::System.Nullable<global::System.DateTime> ContainerPickupDate, 
                    string ContainerPickupTerminal, 
                    string ContainerProofOfDelivery, 
                    global::System.Nullable<global::System.DateTime> ReleaseDate, 
                    global::System.Nullable<int> MillID, 
                    global::System.Nullable<int> Original_ContID, 
                    string Original_ContNumber, 
                    global::System.Nullable<global::System.DateTime> Original_ShipDate, 
                    global::System.Nullable<global::System.DateTime> Original_ETA, 
                    string Original_Status, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_CustomerLocationID, 
                    global::System.Nullable<int> Original_ApplyClosingToEntireContainer, 
                    global::System.Nullable<global::System.DateTime> Original_ContainerPickupDate, 
                    string Original_ContainerPickupTerminal, 
                    string Original_ContainerProofOfDelivery, 
                    global::System.Nullable<global::System.DateTime> Original_ReleaseDate, 
                    global::System.Nullable<int> Original_MillID) {
            if ((ContID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ContID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ContNumber == null)) {
                throw new global::System.ArgumentNullException("ContNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ContNumber));
            }
            if ((ShipDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ShipDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ETA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ETA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Comments == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Comments));
            }
            if ((Status == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Status));
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CustomerLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(CustomerLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ApplyClosingToEntireContainer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ApplyClosingToEntireContainer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ContainerPickupDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ContainerPickupDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ContainerPickupTerminal == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ContainerPickupTerminal));
            }
            if ((ContainerProofOfDelivery == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ContainerProofOfDelivery));
            }
            if ((ReleaseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(ReleaseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MillID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(MillID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ContID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ContID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ContNumber == null)) {
                throw new global::System.ArgumentNullException("Original_ContNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ContNumber));
            }
            if ((Original_ShipDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_ShipDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ETA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_ETA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Status));
            }
            if ((Original_CustomerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_CustomerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_CustomerLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_ApplyClosingToEntireContainer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_ApplyClosingToEntireContainer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_ContainerPickupDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_ContainerPickupDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_ContainerPickupTerminal == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ContainerPickupTerminal));
            }
            if ((Original_ContainerProofOfDelivery == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ContainerProofOfDelivery));
            }
            if ((Original_ReleaseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_ReleaseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_MillID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_MillID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ContNumber, 
                    global::System.Nullable<global::System.DateTime> ShipDate, 
                    global::System.Nullable<global::System.DateTime> ETA, 
                    string Comments, 
                    string Status, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> CustomerLocationID, 
                    global::System.Nullable<int> ApplyClosingToEntireContainer, 
                    global::System.Nullable<global::System.DateTime> ContainerPickupDate, 
                    string ContainerPickupTerminal, 
                    string ContainerProofOfDelivery, 
                    global::System.Nullable<global::System.DateTime> ReleaseDate, 
                    global::System.Nullable<int> MillID, 
                    global::System.Nullable<int> Original_ContID, 
                    string Original_ContNumber, 
                    global::System.Nullable<global::System.DateTime> Original_ShipDate, 
                    global::System.Nullable<global::System.DateTime> Original_ETA, 
                    string Original_Status, 
                    global::System.Nullable<int> Original_CustomerID, 
                    global::System.Nullable<int> Original_CustomerLocationID, 
                    global::System.Nullable<int> Original_ApplyClosingToEntireContainer, 
                    global::System.Nullable<global::System.DateTime> Original_ContainerPickupDate, 
                    string Original_ContainerPickupTerminal, 
                    string Original_ContainerProofOfDelivery, 
                    global::System.Nullable<global::System.DateTime> Original_ReleaseDate, 
                    global::System.Nullable<int> Original_MillID) {
            return this.Update(Original_ContID, ContNumber, ShipDate, ETA, Comments, Status, CustomerID, CustomerLocationID, ApplyClosingToEntireContainer, ContainerPickupDate, ContainerPickupTerminal, ContainerProofOfDelivery, ReleaseDate, MillID, Original_ContID, Original_ContNumber, Original_ShipDate, Original_ETA, Original_Status, Original_CustomerID, Original_CustomerLocationID, Original_ApplyClosingToEntireContainer, Original_ContainerPickupDate, Original_ContainerPickupTerminal, Original_ContainerProofOfDelivery, Original_ReleaseDate, Original_MillID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SurchargeRateTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SurchargeRateTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SurchargeRateTbl";
            tableMapping.ColumnMappings.Add("SurchargeID", "SurchargeID");
            tableMapping.ColumnMappings.Add("ItemID", "ItemID");
            tableMapping.ColumnMappings.Add("FinishID", "FinishID");
            tableMapping.ColumnMappings.Add("SurchargeRate", "SurchargeRate");
            tableMapping.ColumnMappings.Add("SurchargeDate", "SurchargeDate");
            tableMapping.ColumnMappings.Add("SurchargeMonth", "SurchargeMonth");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tblSurchargeRate` WHERE ((`SurchargeID` = ?) AND ((? = 1 AND `ItemID` IS NULL) OR (`ItemID` = ?)) AND ((? = 1 AND `FinishID` IS NULL) OR (`FinishID` = ?)) AND ((? = 1 AND `SurchargeRate` IS NULL) OR (`SurchargeRate` = ?)) AND ((? = 1 AND `SurchargeDate` IS NULL) OR (`SurchargeDate` = ?)) AND ((? = 1 AND `SurchargeMonth` IS NULL) OR (`SurchargeMonth` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargeRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargeMonth", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeMonth", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeMonth", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeMonth", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tblSurchargeRate` (`SurchargeID`, `ItemID`, `FinishID`, `SurchargeRa" +
                "te`, `SurchargeDate`, `SurchargeMonth`) VALUES (?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeMonth", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeMonth", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tblSurchargeRate` SET `SurchargeID` = ?, `ItemID` = ?, `FinishID` = ?, `SurchargeRate` = ?, `SurchargeDate` = ?, `SurchargeMonth` = ? WHERE ((`SurchargeID` = ?) AND ((? = 1 AND `ItemID` IS NULL) OR (`ItemID` = ?)) AND ((? = 1 AND `FinishID` IS NULL) OR (`FinishID` = ?)) AND ((? = 1 AND `SurchargeRate` IS NULL) OR (`SurchargeRate` = ?)) AND ((? = 1 AND `SurchargeDate` IS NULL) OR (`SurchargeDate` = ?)) AND ((? = 1 AND `SurchargeMonth` IS NULL) OR (`SurchargeMonth` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SurchargeMonth", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeMonth", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FinishID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinishID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargeRate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeRate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeRate", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargeDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SurchargeMonth", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeMonth", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SurchargeMonth", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SurchargeMonth", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SurchargeID, ItemID, FinishID, SurchargeRate, SurchargeDate, SurchargeMont" +
                "h FROM tblSurchargeRate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.SurchargeRateTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.SurchargeRateTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.SurchargeRateTblDataTable dataTable = new EMDataSet.SurchargeRateTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.SurchargeRateTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SurchargeRateTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_SurchargeID, global::System.Nullable<int> Original_ItemID, global::System.Nullable<int> Original_FinishID, global::System.Nullable<decimal> Original_SurchargeRate, global::System.Nullable<global::System.DateTime> Original_SurchargeDate, global::System.Nullable<int> Original_SurchargeMonth) {
            if ((Original_SurchargeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SurchargeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_ItemID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ItemID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_FinishID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_FinishID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_SurchargeRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_SurchargeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeMonth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_SurchargeMonth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> SurchargeID, global::System.Nullable<int> ItemID, global::System.Nullable<int> FinishID, global::System.Nullable<decimal> SurchargeRate, global::System.Nullable<global::System.DateTime> SurchargeDate, global::System.Nullable<int> SurchargeMonth) {
            if ((SurchargeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SurchargeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ItemID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ItemID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FinishID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(FinishID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SurchargeRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(SurchargeRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SurchargeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(SurchargeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SurchargeMonth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(SurchargeMonth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> SurchargeID, global::System.Nullable<int> ItemID, global::System.Nullable<int> FinishID, global::System.Nullable<decimal> SurchargeRate, global::System.Nullable<global::System.DateTime> SurchargeDate, global::System.Nullable<int> SurchargeMonth, global::System.Nullable<int> Original_SurchargeID, global::System.Nullable<int> Original_ItemID, global::System.Nullable<int> Original_FinishID, global::System.Nullable<decimal> Original_SurchargeRate, global::System.Nullable<global::System.DateTime> Original_SurchargeDate, global::System.Nullable<int> Original_SurchargeMonth) {
            if ((SurchargeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SurchargeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ItemID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ItemID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FinishID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(FinishID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SurchargeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(SurchargeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SurchargeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(SurchargeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SurchargeMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(SurchargeMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_SurchargeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ItemID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ItemID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_FinishID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_FinishID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_SurchargeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_SurchargeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_SurchargeMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_SurchargeMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ItemID, global::System.Nullable<int> FinishID, global::System.Nullable<decimal> SurchargeRate, global::System.Nullable<global::System.DateTime> SurchargeDate, global::System.Nullable<int> SurchargeMonth, global::System.Nullable<int> Original_SurchargeID, global::System.Nullable<int> Original_ItemID, global::System.Nullable<int> Original_FinishID, global::System.Nullable<decimal> Original_SurchargeRate, global::System.Nullable<global::System.DateTime> Original_SurchargeDate, global::System.Nullable<int> Original_SurchargeMonth) {
            return this.Update(Original_SurchargeID, ItemID, FinishID, SurchargeRate, SurchargeDate, SurchargeMonth, Original_SurchargeID, Original_ItemID, Original_FinishID, Original_SurchargeRate, Original_SurchargeDate, Original_SurchargeMonth);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContBundleTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContBundleTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ContBundleTbl";
            tableMapping.ColumnMappings.Add("ContainerBundleID", "ContainerBundleID");
            tableMapping.ColumnMappings.Add("ContID", "ContID");
            tableMapping.ColumnMappings.Add("POItemNumber", "POItemNumber");
            tableMapping.ColumnMappings.Add("BundleSeqNumber", "BundleSeqNumber");
            tableMapping.ColumnMappings.Add("EnglishShipQty", "EnglishShipQty");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("Heat", "Heat");
            tableMapping.ColumnMappings.Add("MetricShipQty", "MetricShipQty");
            tableMapping.ColumnMappings.Add("BayNumber", "BayNumber");
            tableMapping.ColumnMappings.Add("PickupDate", "PickupDate");
            tableMapping.ColumnMappings.Add("PickupTerminal", "PickupTerminal");
            tableMapping.ColumnMappings.Add("ProofOfDelivery", "ProofOfDelivery");
            tableMapping.ColumnMappings.Add("EMInvoiceNumber", "EMInvoiceNumber");
            tableMapping.ColumnMappings.Add("AuxKey1", "AuxKey1");
            tableMapping.ColumnMappings.Add("AuxKey2", "AuxKey2");
            tableMapping.ColumnMappings.Add("MillInvoiceDate", "MillInvoiceDate");
            tableMapping.ColumnMappings.Add("BundleAlloySurcharge", "BundleAlloySurcharge");
            tableMapping.ColumnMappings.Add("BundleScrapSurcharge", "BundleScrapSurcharge");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tblContBundle` WHERE ((`ContainerBundleID` = ?) AND ((? = 1 AND `ContID` IS NULL) OR (`ContID` = ?)) AND ((? = 1 AND `POItemNumber` IS NULL) OR (`POItemNumber` = ?)) AND ((? = 1 AND `BundleSeqNumber` IS NULL) OR (`BundleSeqNumber` = ?)) AND ((? = 1 AND `EnglishShipQty` IS NULL) OR (`EnglishShipQty` = ?)) AND ((? = 1 AND `InvoiceNumber` IS NULL) OR (`InvoiceNumber` = ?)) AND ((? = 1 AND `Heat` IS NULL) OR (`Heat` = ?)) AND ((? = 1 AND `MetricShipQty` IS NULL) OR (`MetricShipQty` = ?)) AND ((? = 1 AND `BayNumber` IS NULL) OR (`BayNumber` = ?)) AND ((? = 1 AND `PickupDate` IS NULL) OR (`PickupDate` = ?)) AND ((? = 1 AND `PickupTerminal` IS NULL) OR (`PickupTerminal` = ?)) AND ((? = 1 AND `ProofOfDelivery` IS NULL) OR (`ProofOfDelivery` = ?)) AND ((? = 1 AND `EMInvoiceNumber` IS NULL) OR (`EMInvoiceNumber` = ?)) AND ((? = 1 AND `AuxKey1` IS NULL) OR (`AuxKey1` = ?)) AND ((? = 1 AND `AuxKey2` IS NULL) OR (`AuxKey2` = ?)) AND ((? = 1 AND `MillInvoiceDate` IS NULL) OR (`MillInvoiceDate` = ?)) AND ((? = 1 AND `BundleAlloySurcharge` IS NULL) OR (`BundleAlloySurcharge` = ?)) AND ((? = 1 AND `BundleScrapSurcharge` IS NULL) OR (`BundleScrapSurcharge` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerBundleID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerBundleID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BundleSeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleSeqNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BundleSeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleSeqNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EnglishShipQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EnglishShipQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EnglishShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EnglishShipQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Heat", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heat", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Heat", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heat", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MetricShipQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MetricShipQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MetricShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MetricShipQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BayNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BayNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BayNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BayNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PickupDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PickupTerminal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupTerminal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupTerminal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ProofOfDelivery", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ProofOfDelivery", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ProofOfDelivery", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EMInvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMInvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EMInvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMInvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AuxKey1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AuxKey1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AuxKey2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AuxKey2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillInvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillInvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillInvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillInvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BundleAlloySurcharge", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleAlloySurcharge", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BundleAlloySurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleAlloySurcharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BundleScrapSurcharge", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleScrapSurcharge", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BundleScrapSurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleScrapSurcharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tblContBundle` (`ContainerBundleID`, `ContID`, `POItemNumber`, `BundleSeqNumber`, `EnglishShipQty`, `InvoiceNumber`, `Heat`, `MetricShipQty`, `BayNumber`, `PickupDate`, `PickupTerminal`, `ProofOfDelivery`, `EMInvoiceNumber`, `AuxKey1`, `AuxKey2`, `MillInvoiceDate`, `BundleAlloySurcharge`, `BundleScrapSurcharge`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerBundleID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerBundleID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BundleSeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleSeqNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EnglishShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EnglishShipQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Heat", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MetricShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MetricShipQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BayNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BayNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupTerminal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ProofOfDelivery", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EMInvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMInvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AuxKey1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AuxKey2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillInvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillInvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BundleAlloySurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleAlloySurcharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BundleScrapSurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleScrapSurcharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tblContBundle` SET `ContainerBundleID` = ?, `ContID` = ?, `POItemNumber` " +
                "= ?, `BundleSeqNumber` = ?, `EnglishShipQty` = ?, `InvoiceNumber` = ?, `Heat` = " +
                "?, `MetricShipQty` = ?, `BayNumber` = ?, `PickupDate` = ?, `PickupTerminal` = ?," +
                " `ProofOfDelivery` = ?, `EMInvoiceNumber` = ?, `AuxKey1` = ?, `AuxKey2` = ?, `Mi" +
                "llInvoiceDate` = ?, `BundleAlloySurcharge` = ?, `BundleScrapSurcharge` = ? WHERE" +
                " ((`ContainerBundleID` = ?) AND ((? = 1 AND `ContID` IS NULL) OR (`ContID` = ?))" +
                " AND ((? = 1 AND `POItemNumber` IS NULL) OR (`POItemNumber` = ?)) AND ((? = 1 AN" +
                "D `BundleSeqNumber` IS NULL) OR (`BundleSeqNumber` = ?)) AND ((? = 1 AND `Englis" +
                "hShipQty` IS NULL) OR (`EnglishShipQty` = ?)) AND ((? = 1 AND `InvoiceNumber` IS" +
                " NULL) OR (`InvoiceNumber` = ?)) AND ((? = 1 AND `Heat` IS NULL) OR (`Heat` = ?)" +
                ") AND ((? = 1 AND `MetricShipQty` IS NULL) OR (`MetricShipQty` = ?)) AND ((? = 1" +
                " AND `BayNumber` IS NULL) OR (`BayNumber` = ?)) AND ((? = 1 AND `PickupDate` IS " +
                "NULL) OR (`PickupDate` = ?)) AND ((? = 1 AND `PickupTerminal` IS NULL) OR (`Pick" +
                "upTerminal` = ?)) AND ((? = 1 AND `ProofOfDelivery` IS NULL) OR (`ProofOfDeliver" +
                "y` = ?)) AND ((? = 1 AND `EMInvoiceNumber` IS NULL) OR (`EMInvoiceNumber` = ?)) " +
                "AND ((? = 1 AND `AuxKey1` IS NULL) OR (`AuxKey1` = ?)) AND ((? = 1 AND `AuxKey2`" +
                " IS NULL) OR (`AuxKey2` = ?)) AND ((? = 1 AND `MillInvoiceDate` IS NULL) OR (`Mi" +
                "llInvoiceDate` = ?)) AND ((? = 1 AND `BundleAlloySurcharge` IS NULL) OR (`Bundle" +
                "AlloySurcharge` = ?)) AND ((? = 1 AND `BundleScrapSurcharge` IS NULL) OR (`Bundl" +
                "eScrapSurcharge` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContainerBundleID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerBundleID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BundleSeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleSeqNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EnglishShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EnglishShipQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Heat", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MetricShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MetricShipQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BayNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BayNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupTerminal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ProofOfDelivery", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EMInvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMInvoiceNumber", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AuxKey1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AuxKey2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MillInvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillInvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BundleAlloySurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleAlloySurcharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BundleScrapSurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleScrapSurcharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContainerBundleID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContainerBundleID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ContID", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ContID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_POItemNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "POItemNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BundleSeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleSeqNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BundleSeqNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleSeqNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EnglishShipQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EnglishShipQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EnglishShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EnglishShipQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Heat", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heat", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Heat", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Heat", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MetricShipQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MetricShipQty", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MetricShipQty", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MetricShipQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BayNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BayNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BayNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BayNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PickupDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PickupDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PickupTerminal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupTerminal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PickupTerminal", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PickupTerminal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ProofOfDelivery", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ProofOfDelivery", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ProofOfDelivery", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ProofOfDelivery", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EMInvoiceNumber", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMInvoiceNumber", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EMInvoiceNumber", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMInvoiceNumber", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AuxKey1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AuxKey1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AuxKey2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AuxKey2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AuxKey2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MillInvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillInvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MillInvoiceDate", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MillInvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BundleAlloySurcharge", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleAlloySurcharge", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BundleAlloySurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleAlloySurcharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BundleScrapSurcharge", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleScrapSurcharge", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BundleScrapSurcharge", global::System.Data.OleDb.OleDbType.Currency, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BundleScrapSurcharge", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::EM.Properties.Settings.Default.em_prog_2002ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ContainerBundleID, ContID, POItemNumber, BundleSeqNumber, EnglishShipQty, InvoiceNumber, Heat, MetricShipQty, BayNumber, PickupDate, PickupTerminal, ProofOfDelivery, EMInvoiceNumber, AuxKey1, AuxKey2, MillInvoiceDate, BundleAlloySurcharge, BundleScrapSurcharge FROM tblContBundle";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EMDataSet.ContBundleTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EMDataSet.ContBundleTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EMDataSet.ContBundleTblDataTable dataTable = new EMDataSet.ContBundleTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet.ContBundleTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EMDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ContBundleTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    global::System.Nullable<int> Original_ContainerBundleID, 
                    global::System.Nullable<int> Original_ContID, 
                    global::System.Nullable<int> Original_POItemNumber, 
                    global::System.Nullable<int> Original_BundleSeqNumber, 
                    global::System.Nullable<decimal> Original_EnglishShipQty, 
                    string Original_InvoiceNumber, 
                    string Original_Heat, 
                    global::System.Nullable<decimal> Original_MetricShipQty, 
                    string Original_BayNumber, 
                    global::System.Nullable<global::System.DateTime> Original_PickupDate, 
                    string Original_PickupTerminal, 
                    string Original_ProofOfDelivery, 
                    string Original_EMInvoiceNumber, 
                    global::System.Nullable<int> Original_AuxKey1, 
                    global::System.Nullable<int> Original_AuxKey2, 
                    global::System.Nullable<global::System.DateTime> Original_MillInvoiceDate, 
                    global::System.Nullable<decimal> Original_BundleAlloySurcharge, 
                    global::System.Nullable<decimal> Original_BundleScrapSurcharge) {
            if ((Original_ContainerBundleID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ContainerBundleID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_ContID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ContID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_POItemNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_POItemNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_BundleSeqNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_BundleSeqNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_EnglishShipQty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_EnglishShipQty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_Heat == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Heat));
            }
            if ((Original_MetricShipQty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_MetricShipQty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_BayNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_BayNumber));
            }
            if ((Original_PickupDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_PickupDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_PickupTerminal == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_PickupTerminal));
            }
            if ((Original_ProofOfDelivery == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_ProofOfDelivery));
            }
            if ((Original_EMInvoiceNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_EMInvoiceNumber));
            }
            if ((Original_AuxKey1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_AuxKey1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_AuxKey2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_AuxKey2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_MillInvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_MillInvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_BundleAlloySurcharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_BundleAlloySurcharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_BundleScrapSurcharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_BundleScrapSurcharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> ContainerBundleID, 
                    global::System.Nullable<int> ContID, 
                    global::System.Nullable<int> POItemNumber, 
                    global::System.Nullable<int> BundleSeqNumber, 
                    global::System.Nullable<decimal> EnglishShipQty, 
                    string InvoiceNumber, 
                    string Heat, 
                    global::System.Nullable<decimal> MetricShipQty, 
                    string BayNumber, 
                    global::System.Nullable<global::System.DateTime> PickupDate, 
                    string PickupTerminal, 
                    string ProofOfDelivery, 
                    string EMInvoiceNumber, 
                    global::System.Nullable<int> AuxKey1, 
                    global::System.Nullable<int> AuxKey2, 
                    global::System.Nullable<global::System.DateTime> MillInvoiceDate, 
                    global::System.Nullable<decimal> BundleAlloySurcharge, 
                    global::System.Nullable<decimal> BundleScrapSurcharge) {
            if ((ContainerBundleID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ContainerBundleID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ContID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ContID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((POItemNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(POItemNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((BundleSeqNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(BundleSeqNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((EnglishShipQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(EnglishShipQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNumber == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(InvoiceNumber));
            }
            if ((Heat == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Heat));
            }
            if ((MetricShipQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(MetricShipQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BayNumber == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BayNumber));
            }
            if ((PickupDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(PickupDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((PickupTerminal == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PickupTerminal));
            }
            if ((ProofOfDelivery == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ProofOfDelivery));
            }
            if ((EMInvoiceNumber == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EMInvoiceNumber));
            }
            if ((AuxKey1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(AuxKey1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AuxKey2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(AuxKey2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MillInvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MillInvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BundleAlloySurcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(BundleAlloySurcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BundleScrapSurcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(BundleScrapSurcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ContainerBundleID, 
                    global::System.Nullable<int> ContID, 
                    global::System.Nullable<int> POItemNumber, 
                    global::System.Nullable<int> BundleSeqNumber, 
                    global::System.Nullable<decimal> EnglishShipQty, 
                    string InvoiceNumber, 
                    string Heat, 
                    global::System.Nullable<decimal> MetricShipQty, 
                    string BayNumber, 
                    global::System.Nullable<global::System.DateTime> PickupDate, 
                    string PickupTerminal, 
                    string ProofOfDelivery, 
                    string EMInvoiceNumber, 
                    global::System.Nullable<int> AuxKey1, 
                    global::System.Nullable<int> AuxKey2, 
                    global::System.Nullable<global::System.DateTime> MillInvoiceDate, 
                    global::System.Nullable<decimal> BundleAlloySurcharge, 
                    global::System.Nullable<decimal> BundleScrapSurcharge, 
                    global::System.Nullable<int> Original_ContainerBundleID, 
                    global::System.Nullable<int> Original_ContID, 
                    global::System.Nullable<int> Original_POItemNumber, 
                    global::System.Nullable<int> Original_BundleSeqNumber, 
                    global::System.Nullable<decimal> Original_EnglishShipQty, 
                    string Original_InvoiceNumber, 
                    string Original_Heat, 
                    global::System.Nullable<decimal> Original_MetricShipQty, 
                    string Original_BayNumber, 
                    global::System.Nullable<global::System.DateTime> Original_PickupDate, 
                    string Original_PickupTerminal, 
                    string Original_ProofOfDelivery, 
                    string Original_EMInvoiceNumber, 
                    global::System.Nullable<int> Original_AuxKey1, 
                    global::System.Nullable<int> Original_AuxKey2, 
                    global::System.Nullable<global::System.DateTime> Original_MillInvoiceDate, 
                    global::System.Nullable<decimal> Original_BundleAlloySurcharge, 
                    global::System.Nullable<decimal> Original_BundleScrapSurcharge) {
            if ((ContainerBundleID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ContainerBundleID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ContID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ContID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((POItemNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(POItemNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((BundleSeqNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(BundleSeqNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((EnglishShipQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(EnglishShipQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(InvoiceNumber));
            }
            if ((Heat == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Heat));
            }
            if ((MetricShipQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(MetricShipQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BayNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(BayNumber));
            }
            if ((PickupDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(PickupDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((PickupTerminal == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PickupTerminal));
            }
            if ((ProofOfDelivery == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ProofOfDelivery));
            }
            if ((EMInvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EMInvoiceNumber));
            }
            if ((AuxKey1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(AuxKey1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AuxKey2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(AuxKey2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MillInvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(MillInvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BundleAlloySurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(BundleAlloySurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BundleScrapSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(BundleScrapSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ContainerBundleID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ContainerBundleID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ContID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_ContID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_POItemNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_POItemNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_BundleSeqNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_BundleSeqNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_EnglishShipQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_EnglishShipQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_InvoiceNumber));
            }
            if ((Original_Heat == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Heat));
            }
            if ((Original_MetricShipQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_MetricShipQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_BayNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_BayNumber));
            }
            if ((Original_PickupDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_PickupDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_PickupTerminal == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_PickupTerminal));
            }
            if ((Original_ProofOfDelivery == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_ProofOfDelivery));
            }
            if ((Original_EMInvoiceNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_EMInvoiceNumber));
            }
            if ((Original_AuxKey1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_AuxKey1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_AuxKey2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_AuxKey2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_MillInvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_MillInvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_BundleAlloySurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_BundleAlloySurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_BundleScrapSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_BundleScrapSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ContID, 
                    global::System.Nullable<int> POItemNumber, 
                    global::System.Nullable<int> BundleSeqNumber, 
                    global::System.Nullable<decimal> EnglishShipQty, 
                    string InvoiceNumber, 
                    string Heat, 
                    global::System.Nullable<decimal> MetricShipQty, 
                    string BayNumber, 
                    global::System.Nullable<global::System.DateTime> PickupDate, 
                    string PickupTerminal, 
                    string ProofOfDelivery, 
                    string EMInvoiceNumber, 
                    global::System.Nullable<int> AuxKey1, 
                    global::System.Nullable<int> AuxKey2, 
                    global::System.Nullable<global::System.DateTime> MillInvoiceDate, 
                    global::System.Nullable<decimal> BundleAlloySurcharge, 
                    global::System.Nullable<decimal> BundleScrapSurcharge, 
                    global::System.Nullable<int> Original_ContainerBundleID, 
                    global::System.Nullable<int> Original_ContID, 
                    global::System.Nullable<int> Original_POItemNumber, 
                    global::System.Nullable<int> Original_BundleSeqNumber, 
                    global::System.Nullable<decimal> Original_EnglishShipQty, 
                    string Original_InvoiceNumber, 
                    string Original_Heat, 
                    global::System.Nullable<decimal> Original_MetricShipQty, 
                    string Original_BayNumber, 
                    global::System.Nullable<global::System.DateTime> Original_PickupDate, 
                    string Original_PickupTerminal, 
                    string Original_ProofOfDelivery, 
                    string Original_EMInvoiceNumber, 
                    global::System.Nullable<int> Original_AuxKey1, 
                    global::System.Nullable<int> Original_AuxKey2, 
                    global::System.Nullable<global::System.DateTime> Original_MillInvoiceDate, 
                    global::System.Nullable<decimal> Original_BundleAlloySurcharge, 
                    global::System.Nullable<decimal> Original_BundleScrapSurcharge) {
            return this.Update(Original_ContainerBundleID, ContID, POItemNumber, BundleSeqNumber, EnglishShipQty, InvoiceNumber, Heat, MetricShipQty, BayNumber, PickupDate, PickupTerminal, ProofOfDelivery, EMInvoiceNumber, AuxKey1, AuxKey2, MillInvoiceDate, BundleAlloySurcharge, BundleScrapSurcharge, Original_ContainerBundleID, Original_ContID, Original_POItemNumber, Original_BundleSeqNumber, Original_EnglishShipQty, Original_InvoiceNumber, Original_Heat, Original_MetricShipQty, Original_BayNumber, Original_PickupDate, Original_PickupTerminal, Original_ProofOfDelivery, Original_EMInvoiceNumber, Original_AuxKey1, Original_AuxKey2, Original_MillInvoiceDate, Original_BundleAlloySurcharge, Original_BundleScrapSurcharge);
        }
    }
}

#pragma warning restore 1591